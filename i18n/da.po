# Danish translations for Mercurial
# Danske oversættelser for Mercurial
# Copyright (C) 2009 Matt Mackall and others
#
# Translation dictionary:
#
# changeset      ændring
# merge          sammenføje
# patch          rettelse
# repo(sitory)   arkiv
# revision       revision
# tag            mærke
#
msgid ""
msgstr ""
"Project-Id-Version: Mercurial\n"
"POT-Creation-Date: 2009-01-15 15:24+CET\n"
"PO-Revision-Date: 2009-01-22 20:48+0100\n"
"Last-Translator:  <mg@daimi.au.dk>\n"
"Language-Team: Danish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: hgext/acl.py:53
msgid "return tuple of (match function, list enabled)."
msgstr ""

#: hgext/acl.py:55
msgid "acl: %s not enabled\n"
msgstr "acl: %s er ikke slået til\n"

#: hgext/acl.py:60
msgid "acl: %s enabled, %d entries for user %s\n"
msgstr "acl: %s slået til, %d indgange for bruger %s\n"

#: hgext/acl.py:68
msgid "config error - hook type \"%s\" cannot stop incoming changesets"
msgstr ""
"konfigurationsfejl - hook type \"%s\" kan ikke stoppe indgående ændringer"

#: hgext/acl.py:71
msgid "acl: changes have source \"%s\" - skipping\n"
msgstr "acl: ændringer har kilde \"%s\" - springer over\n"

#: hgext/acl.py:85
msgid "acl: user %s denied on %s\n"
msgstr "acl: bruger %s nægtet adgang til %s\n"

#: hgext/acl.py:86 hgext/acl.py:89
msgid "acl: access denied for changeset %s"
msgstr "acl: adgang nægtet til ændring %s"

#: hgext/acl.py:88
msgid "acl: user %s not allowed on %s\n"
msgstr "acl: bruger %s ikke tilladt på %s\n"

#: hgext/acl.py:90
msgid "acl: allowing changeset %s\n"
msgstr "acl: tillader ændring %s\n"

#: hgext/alias.py:4
msgid ""
"allow user-defined command aliases\n"
"\n"
"To use, create entries in your hgrc of the form\n"
"\n"
"[alias]\n"
"mycmd = cmd --args\n"
msgstr ""

#: hgext/alias.py:21
msgid ""
"defer command lookup until needed, so that extensions loaded\n"
"    after alias can be aliased"
msgstr ""

#: hgext/alias.py:53
msgid "*** [alias] %s: command %s is unknown"
msgstr ""

#: hgext/alias.py:56
msgid "*** [alias] %s: command %s is ambiguous"
msgstr ""

#: hgext/alias.py:59
msgid "*** [alias] %s: circular dependency on %s"
msgstr ""

#: hgext/alias.py:71
msgid "*** [alias] %s: no definition\n"
msgstr ""

#: hgext/bookmarks.py:8
msgid ""
"mercurial bookmarks\n"
"\n"
"Mercurial bookmarks are local moveable pointers to changesets. Every\n"
"bookmark points to a changeset identified by its hash. If you commit a\n"
"changeset that is based on a changeset that has a bookmark on it, the\n"
"bookmark is forwarded to the new changeset.\n"
"\n"
"It is possible to use bookmark names in every revision lookup (e.g. hg\n"
"merge, hg update).\n"
"\n"
"The bookmark extension offers the possiblity to have a more git-like "
"experience\n"
"by adding the following configuration option to your .hgrc:\n"
"\n"
"[bookmarks]\n"
"track.current = True\n"
"\n"
"This will cause bookmarks to track the bookmark that you are currently on, "
"and\n"
"just updates it. This is similar to git's approach of branching.\n"
msgstr ""

#: hgext/bookmarks.py:37
msgid ""
"Parse .hg/bookmarks file and return a dictionary\n"
"\n"
"    Bookmarks are stored as {HASH}\\s{NAME}\n"
" (localtags format) values\n"
"    in the .hg/bookmarks file. They are read by the parse() method and\n"
"    returned as a dictionary with name => hash values.\n"
"\n"
"    The parsed dictionary is cached until a write() operation is done.\n"
"    "
msgstr ""

#: hgext/bookmarks.py:57
msgid ""
"Write bookmarks\n"
"\n"
"    Write the given bookmark => hash dictionary to the .hg/bookmarks file\n"
"    in a format equal to those of localtags.\n"
"\n"
"    We also store a backup of the previous state in undo.bookmarks that\n"
"    can be copied back on rollback.\n"
"    "
msgstr ""

#: hgext/bookmarks.py:75
msgid ""
"Get the current bookmark\n"
"\n"
"    If we use gittishsh branches we have a current bookmark that\n"
"    we are on. This function returns the name of the bookmark. It\n"
"    is stored in .hg/bookmarks.current\n"
"    "
msgstr ""

#: hgext/bookmarks.py:94
msgid ""
"Set the name of the bookmark that we are currently on\n"
"\n"
"    Set the name of the bookmark that we are on (hg update <bookmark>).\n"
"    The name is recoreded in .hg/bookmarks.current\n"
"    "
msgstr ""

#: hgext/bookmarks.py:116
msgid ""
"mercurial bookmarks\n"
"\n"
"    Bookmarks are pointers to certain commits that move when\n"
"    commiting. Bookmarks are local. They can be renamed, copied and\n"
"    deleted. It is possible to use bookmark names in 'hg merge' and 'hg\n"
"    update' to update to a given bookmark.\n"
"\n"
"    You can use 'hg bookmark NAME' to set a bookmark on the current\n"
"    tip with the given name. If you specify a revision using -r REV\n"
"    (where REV may be an existing bookmark), the bookmark is set to\n"
"    that revision.\n"
"    "
msgstr ""

#: hgext/bookmarks.py:134 hgext/bookmarks.py:150
msgid "a bookmark of this name does not exist"
msgstr ""

#: hgext/bookmarks.py:136 hgext/bookmarks.py:160
msgid "a bookmark of the same name already exists"
msgstr ""

#: hgext/bookmarks.py:138
msgid "new bookmark name required"
msgstr ""

#: hgext/bookmarks.py:148 hgext/bookmarks.py:174
msgid "bookmark name required"
msgstr ""

#: hgext/bookmarks.py:157
msgid "bookmark name cannot contain newlines"
msgstr "bogmærkenavn kan ikke indeholde linieskift"

#: hgext/bookmarks.py:164
msgid "a bookmark cannot have the name of an existing branch"
msgstr ""

#: hgext/bookmarks.py:203
msgid ""
"Strip bookmarks if revisions are stripped using\n"
"    the mercurial.strip method. This usually happens during\n"
"    qpush and qpop"
msgstr ""

#: hgext/bookmarks.py:244
msgid ""
"Add a revision to the repository and\n"
"            move the bookmark"
msgstr ""

#: hgext/bookmarks.py:287
msgid "Merge bookmarks with normal tags"
msgstr ""

#: hgext/bookmarks.py:298
msgid ""
"Set the current bookmark\n"
"\n"
"    If the user updates to a bookmark we update the .hg/bookmarks.current\n"
"    file.\n"
"    "
msgstr ""

#: hgext/bookmarks.py:311
msgid "Replace push with a decorator to provide --non-bookmarked option"
msgstr ""

#: hgext/bookmarks.py:318
msgid "force"
msgstr ""

#: hgext/bookmarks.py:319 hgext/extdiff.py:207 mercurial/commands.py:3175
#: mercurial/commands.py:3410
msgid "revision"
msgstr ""

#: hgext/bookmarks.py:320
msgid "delete a given bookmark"
msgstr ""

#: hgext/bookmarks.py:321
msgid "rename a given bookmark"
msgstr ""

#: hgext/bookmarks.py:322
msgid "hg bookmarks [-d] [-m NAME] [-r NAME] [NAME]"
msgstr ""

#: hgext/bugzilla.py:8
msgid ""
"Bugzilla integration\n"
"\n"
"This hook extension adds comments on bugs in Bugzilla when changesets\n"
"that refer to bugs by Bugzilla ID are seen. The hook does not change bug\n"
"status.\n"
"\n"
"The hook updates the Bugzilla database directly. Only Bugzilla "
"installations\n"
"using MySQL are supported.\n"
"\n"
"The hook relies on a Bugzilla script to send bug change notification "
"emails.\n"
"That script changes between Bugzilla versions; the 'processmail' script "
"used\n"
"prior to 2.18 is replaced in 2.18 and subsequent versions by\n"
"'config/sendbugmail.pl'. Note that these will be run by Mercurial as the "
"user\n"
"pushing the change; you will need to ensure the Bugzilla install file\n"
"permissions are set appropriately.\n"
"\n"
"Configuring the extension:\n"
"\n"
"    [bugzilla]\n"
"    host       Hostname of the MySQL server holding the Bugzilla database.\n"
"    db         Name of the Bugzilla database in MySQL. Default 'bugs'.\n"
"    user       Username to use to access MySQL server. Default 'bugs'.\n"
"    password   Password to use to access MySQL server.\n"
"    timeout    Database connection timeout (seconds). Default 5.\n"
"    version    Bugzilla version. Specify '3.0' for Bugzilla versions 3.0 "
"and\n"
"               later, '2.18' for Bugzilla versions from 2.18 and '2.16' for\n"
"               versions prior to 2.18.\n"
"    bzuser     Fallback Bugzilla user name to record comments with, if\n"
"               changeset committer cannot be found as a Bugzilla user.\n"
"    bzdir      Bugzilla install directory. Used by default notify.\n"
"               Default '/var/www/html/bugzilla'.\n"
"    notify     The command to run to get Bugzilla to send bug change\n"
"               notification emails. Substitutes from a map with 3 keys,\n"
"               'bzdir', 'id' (bug id) and 'user' (committer bugzilla "
"email).\n"
"               Default depends on version; from 2.18 it is\n"
"               \"cd %(bzdir)s && perl -T contrib/sendbugmail.pl %(id)s %"
"(user)s\".\n"
"    regexp     Regular expression to match bug IDs in changeset commit "
"message.\n"
"               Must contain one \"()\" group. The default expression "
"matches\n"
"               'Bug 1234', 'Bug no. 1234', 'Bug number 1234',\n"
"               'Bugs 1234,5678', 'Bug 1234 and 5678' and variations "
"thereof.\n"
"               Matching is case insensitive.\n"
"    style      The style file to use when formatting comments.\n"
"    template   Template to use when formatting comments. Overrides\n"
"               style if specified. In addition to the usual Mercurial\n"
"               keywords, the extension specifies:\n"
"                   {bug}       The Bugzilla bug ID.\n"
"                   {root}      The full pathname of the Mercurial "
"repository.\n"
"                   {webroot}   Stripped pathname of the Mercurial "
"repository.\n"
"                   {hgweb}     Base URL for browsing Mercurial "
"repositories.\n"
"               Default 'changeset {node|short} in repo {root} refers '\n"
"                       'to bug {bug}.\\ndetails:\\n\\t{desc|tabindent}'\n"
"    strip      The number of slashes to strip from the front of {root}\n"
"               to produce {webroot}. Default 0.\n"
"    usermap    Path of file containing Mercurial committer ID to Bugzilla "
"user\n"
"               ID mappings. If specified, the file should contain one "
"mapping\n"
"               per line, \"committer\"=\"Bugzilla user\". See also the\n"
"               [usermap] section.\n"
"\n"
"    [usermap]\n"
"    Any entries in this section specify mappings of Mercurial committer ID\n"
"    to Bugzilla user ID. See also [bugzilla].usermap.\n"
"    \"committer\"=\"Bugzilla user\"\n"
"\n"
"    [web]\n"
"    baseurl    Base URL for browsing Mercurial repositories. Reference from\n"
"               templates as {hgweb}.\n"
"\n"
"Activating the extension:\n"
"\n"
"    [extensions]\n"
"    hgext.bugzilla =\n"
"\n"
"    [hooks]\n"
"    # run bugzilla hook on every change pulled or pushed in here\n"
"    incoming.bugzilla = python:hgext.bugzilla.hook\n"
"\n"
"Example configuration:\n"
"\n"
"This example configuration is for a collection of Mercurial repositories\n"
"in /var/local/hg/repos/ used with a local Bugzilla 3.2 installation in\n"
"/opt/bugzilla-3.2.\n"
"\n"
"    [bugzilla]\n"
"    host=localhost\n"
"    password=XYZZY\n"
"    version=3.0\n"
"    bzuser=unknown@domain.com\n"
"    bzdir=/opt/bugzilla-3.2\n"
"    template=Changeset {node|short} in {root|basename}.\\n{hgweb}/{webroot}/"
"rev/{node|short}\\n\\n{desc}\\n\n"
"    strip=5\n"
"\n"
"    [web]\n"
"    baseurl=http://dev.domain.com/hg\n"
"\n"
"    [usermap]\n"
"    user@emaildomain.com=user.name@bugzilladomain.com\n"
"\n"
"Commits add a comment to the Bugzilla bug record of the form:\n"
"\n"
"    Changeset 3b16791d6642 in repository-name.\n"
"    http://dev.domain.com/hg/repository-name/rev/3b16791d6642\n"
"\n"
"    Changeset commit comment. Bug 1234.\n"
msgstr ""

#: hgext/bugzilla.py:124
msgid "support for bugzilla version 2.16."
msgstr ""

#: hgext/bugzilla.py:136
msgid "connecting to %s:%s as %s, password %s\n"
msgstr "forbinder til %s:%s som %s, kodeord %s\n"

#: hgext/bugzilla.py:146
msgid "run a query."
msgstr ""

#: hgext/bugzilla.py:147
msgid "query: %s %s\n"
msgstr "forespørgsel: %s %s\n"

#: hgext/bugzilla.py:151
msgid "failed query: %s %s\n"
msgstr "fejlet forespørgsel: %s %s\n"

#: hgext/bugzilla.py:155 hgext/bugzilla.py:279
msgid "get identity of longdesc field"
msgstr ""

#: hgext/bugzilla.py:159 hgext/bugzilla.py:283
msgid "unknown database schema"
msgstr "ukendt databaseskema"

#: hgext/bugzilla.py:163
msgid "filter not-existing bug ids from list."
msgstr ""

#: hgext/bugzilla.py:168
msgid "filter bug ids from list that already refer to this changeset."
msgstr ""

#: hgext/bugzilla.py:175
msgid "bug %d already knows about changeset %s\n"
msgstr "fejl %d kender allerede til ændring %s\n"

#: hgext/bugzilla.py:181
msgid "tell bugzilla to send mail."
msgstr ""

#: hgext/bugzilla.py:183
msgid "telling bugzilla to send mail:\n"
msgstr "beder bugzilla om at sende mail:\n"

#: hgext/bugzilla.py:186
msgid "  bug %s\n"
msgstr "  fejl %s\n"

#: hgext/bugzilla.py:196
msgid "running notify command %s\n"
msgstr "kører notificeringskommando %s\n"

#: hgext/bugzilla.py:202
msgid "bugzilla notify command %s"
msgstr ""

#: hgext/bugzilla.py:204 hgext/mq.py:962
msgid "done\n"
msgstr "færdig\n"

#: hgext/bugzilla.py:207
msgid "look up numeric bugzilla user id."
msgstr ""

#: hgext/bugzilla.py:214
msgid "looking up user %s\n"
msgstr "slår bruger %s op\n"

#: hgext/bugzilla.py:225
msgid "map name of committer to bugzilla user name."
msgstr ""

#: hgext/bugzilla.py:232
msgid ""
"see if committer is a registered bugzilla user. Return\n"
"        bugzilla username and userid if so. If not, return default\n"
"        bugzilla username and userid."
msgstr ""

#: hgext/bugzilla.py:242
msgid "cannot find bugzilla user id for %s"
msgstr ""

#: hgext/bugzilla.py:247
msgid "cannot find bugzilla user id for %s or %s"
msgstr ""

#: hgext/bugzilla.py:252
msgid ""
"add comment to bug. try adding comment as committer of\n"
"        changeset, otherwise as default bugzilla user."
msgstr ""

#: hgext/bugzilla.py:266
msgid "support for bugzilla 2.18 series."
msgstr ""

#: hgext/bugzilla.py:273
msgid "support for bugzilla 3.0 series."
msgstr ""

#: hgext/bugzilla.py:305
msgid ""
"return object that knows how to talk to bugzilla version in\n"
"        use."
msgstr ""

#: hgext/bugzilla.py:313
msgid "bugzilla version %s not supported"
msgstr ""

#: hgext/bugzilla.py:325
msgid ""
"find valid bug ids that are referred to in changeset\n"
"        comments and that do not already have references to this\n"
"        changeset."
msgstr ""

#: hgext/bugzilla.py:352
msgid "update bugzilla bug with reference to changeset."
msgstr ""

#: hgext/bugzilla.py:355
msgid ""
"strip leading prefix of repo root and turn into\n"
"            url-safe path."
msgstr ""

#: hgext/bugzilla.py:372
msgid ""
"changeset {node|short} in repo {root} refers to bug {bug}.\n"
"details:\n"
"\t{desc|tabindent}"
msgstr ""

#: hgext/bugzilla.py:387
msgid ""
"add comment to bugzilla for each changeset that refers to a\n"
"    bugzilla bug id. only add a comment once per bug, so same change\n"
"    seen multiple times does not fill bug with duplicate data."
msgstr ""

#: hgext/bugzilla.py:395
msgid "python mysql support not available: %s"
msgstr ""

#: hgext/bugzilla.py:398
msgid "hook type %s does not pass a changeset id"
msgstr ""

#: hgext/bugzilla.py:409
msgid "database error: %s"
msgstr ""

#: hgext/children.py:16
msgid ""
"show the children of the given or working dir revision\n"
"\n"
"    Print the children of the working directory's revisions.\n"
"    If a revision is given via --rev, the children of that revision\n"
"    will be printed. If a file argument is given, revision in\n"
"    which the file was last changed (after the working directory\n"
"    revision or the argument to --rev if given) is printed.\n"
"    "
msgstr ""

#: hgext/children.py:38
msgid "show children of the specified rev"
msgstr ""

#: hgext/children.py:40
msgid "hg children [-r REV] [FILE]"
msgstr ""

#: hgext/churn.py:8
msgid "command to show certain statistics about revision history"
msgstr ""

#: hgext/churn.py:34
msgid "Calculate stats"
msgstr ""

#: hgext/churn.py:70
msgid "Revision %d is a merge, ignoring...\n"
msgstr ""

#: hgext/churn.py:82
msgid "\rgenerating stats: %d%%"
msgstr ""

#: hgext/churn.py:93
msgid ""
"graph count of revisions grouped by template\n"
"\n"
"    Will graph count of changed lines or revisions grouped by template or\n"
"    alternatively by date, if dateformat is used. In this case it will "
"override\n"
"    template.\n"
"\n"
"    By default statistics are counted for number of changed lines.\n"
"\n"
"    Examples:\n"
"\n"
"      # display count of changed lines for every committer\n"
"      hg churn -t '{author|email}'\n"
"\n"
"      # display daily activity graph\n"
"      hg churn -f '%H' -s -c\n"
"\n"
"      # display activity of developers by month\n"
"      hg churn -f '%Y-%m' -s -c\n"
"\n"
"      # display count of lines changed in every year\n"
"      hg churn -f '%Y' -s\n"
"\n"
"    The map file format used to specify aliases is fairly simple:\n"
"\n"
"    <alias email> <actual email>"
msgstr ""
"plot antallet af revisioner grupperet efter et mønster\n"
"\n"
"    Plotter antallet af ændrede linier eller antallet af revisioner\n"
"    grupperet efter et mønster eller alternativt efter dato, hvis\n"
"    dateformat bruges. I så tilfælde bruges mønstret ikke.\n"
"\n"
"    Som udgangspunkt laves der statistik over antallet af ændrede\n"
"    linier.\n"
"\n"
"    Eksempler:\n"
"\n"
"      # viser antaller af ændrede linier for hver bruger\n"
"      hg churn -t '{author|email}'\n"
"\n"
"      # viser graf over daglig aktivitet\n"
"      hg churn -f '%H' -s -c\n"
"\n"
"      # viser månedlig aktivitet af udviklerne\n"
"      hg churn -f '%Y-%m' -s -c\n"
"\n"
"      # viser antallet af linier ændret hvert år\n"
"      hg churn -f '%Y' -s\n"
"\n"
"    Formatet for map-filen er rimelig simpelt:\n"
"\n"
"    <alias email> <faktisk email>"

#: hgext/churn.py:140
msgid "assuming %i character terminal\n"
msgstr ""

#: hgext/churn.py:151
msgid "count rate for the specified revision or range"
msgstr "lav statistik for de specificerede revisioner"

#: hgext/churn.py:152
msgid "count rate for revs matching date spec"
msgstr "lav statistik for revisioner som matcher dato specifikationen"

#: hgext/churn.py:153
msgid "template to group changesets"
msgstr "mønster for gruppering af ændringer"

#: hgext/churn.py:155
msgid "strftime-compatible format for grouping by date"
msgstr "strftime-kompatibelt format til gruppering efter dato"

#: hgext/churn.py:156
msgid "count rate by number of changesets"
msgstr "lav statistik efter antallet af ændringer"

#: hgext/churn.py:157
msgid "sort by key (default: sort by count)"
msgstr "sortér efter nøgle (standard: sortering efter antal)"

#: hgext/churn.py:158
msgid "file with email aliases"
msgstr "fil med email-aliaser"

#: hgext/churn.py:159
msgid "show progress"
msgstr "vis fremskridt"

#: hgext/churn.py:160
msgid "hg churn [-d DATE] [-r REV] [--aliases FILE] [--progress] [FILE]"
msgstr "hg churn [-d DATO] [-r REVISIONER] [--aliases FIL] [--progress] [FIL]"

#: hgext/color.py:19
msgid ""
"add color output to status, qseries, and diff-related commands\n"
"\n"
"This extension modifies the status command to add color to its output to\n"
"reflect file status, the qseries command to add color to reflect patch "
"status\n"
"(applied, unapplied, missing), and to diff-related commands to highlight\n"
"additions, removals, diff headers, and trailing whitespace.\n"
"\n"
"Other effects in addition to color, like bold and underlined text, are also\n"
"available.  Effects are rendered with the ECMA-48 SGR control function (aka\n"
"ANSI escape codes).  This module also provides the render_text function,\n"
"which can be used to add effects to any text.\n"
"\n"
"To enable this extension, add this to your .hgrc file:\n"
"[extensions]\n"
"color =\n"
"\n"
"Default effects my be overriden from the .hgrc file:\n"
"\n"
"[color]\n"
"status.modified = blue bold underline red_background\n"
"status.added = green bold\n"
"status.removed = red bold blue_background\n"
"status.deleted = cyan bold underline\n"
"status.unknown = magenta bold underline\n"
"status.ignored = black bold\n"
"\n"
"# 'none' turns off all effects\n"
"status.clean = none\n"
"status.copied = none\n"
"\n"
"qseries.applied = blue bold underline\n"
"qseries.unapplied = black bold\n"
"qseries.missing = red bold\n"
"\n"
"diff.diffline = bold\n"
"diff.extended = cyan bold\n"
"diff.file_a = red bold\n"
"diff.file_b = green bold\n"
"diff.hunk = magenta\n"
"diff.deleted = red\n"
"diff.inserted = green\n"
"diff.changed = white\n"
"diff.trailingwhitespace = bold red_background\n"
msgstr ""

#: hgext/color.py:93
msgid "Wrap text in commands to turn on each effect."
msgstr ""

#: hgext/color.py:100
msgid "run the status command with colored output"
msgstr ""

#: hgext/color.py:145
msgid "run the qseries command with colored output"
msgstr ""

#: hgext/color.py:172
msgid "wrap ui.write for colored diff output"
msgstr ""

#: hgext/color.py:189
msgid "wrap cmdutil.changeset_printer.showpatch with colored output"
msgstr ""

#: hgext/color.py:197
msgid "run the diff command with colored output"
msgstr ""

#: hgext/color.py:227 hgext/graphlog.py:457
msgid "Initialize the extension."
msgstr ""

#: hgext/color.py:241
msgid "patch in command to command table and load effect map"
msgstr ""

#: hgext/color.py:260
msgid "when to colorize (always, auto, or never)"
msgstr ""

#: hgext/color.py:261
msgid "don't colorize output"
msgstr ""

#: hgext/convert/__init__.py:7
msgid "converting foreign VCS repositories to Mercurial"
msgstr ""

#: hgext/convert/__init__.py:17
msgid ""
"convert a foreign SCM repository to a Mercurial one.\n"
"\n"
"    Accepted source formats [identifiers]:\n"
"    - Mercurial [hg]\n"
"    - CVS [cvs]\n"
"    - Darcs [darcs]\n"
"    - git [git]\n"
"    - Subversion [svn]\n"
"    - Monotone [mtn]\n"
"    - GNU Arch [gnuarch]\n"
"    - Bazaar [bzr]\n"
"\n"
"    Accepted destination formats [identifiers]:\n"
"    - Mercurial [hg]\n"
"    - Subversion [svn] (history on branches is not preserved)\n"
"\n"
"    If no revision is given, all revisions will be converted. Otherwise,\n"
"    convert will only import up to the named revision (given in a format\n"
"    understood by the source).\n"
"\n"
"    If no destination directory name is specified, it defaults to the\n"
"    basename of the source with '-hg' appended.  If the destination\n"
"    repository doesn't exist, it will be created.\n"
"\n"
"    If <REVMAP> isn't given, it will be put in a default location\n"
"    (<dest>/.hg/shamap by default).  The <REVMAP> is a simple text\n"
"    file that maps each source commit ID to the destination ID for\n"
"    that revision, like so:\n"
"    <source ID> <destination ID>\n"
"\n"
"    If the file doesn't exist, it's automatically created.  It's updated\n"
"    on each commit copied, so convert-repo can be interrupted and can\n"
"    be run repeatedly to copy new commits.\n"
"\n"
"    The [username mapping] file is a simple text file that maps each source\n"
"    commit author to a destination commit author. It is handy for source "
"SCMs\n"
"    that use unix logins to identify authors (eg: CVS). One line per author\n"
"    mapping and the line format is:\n"
"    srcauthor=whatever string you want\n"
"\n"
"    The filemap is a file that allows filtering and remapping of files\n"
"    and directories.  Comment lines start with '#'.  Each line can\n"
"    contain one of the following directives:\n"
"\n"
"      include path/to/file\n"
"\n"
"      exclude path/to/file\n"
"\n"
"      rename from/file to/file\n"
"\n"
"    The 'include' directive causes a file, or all files under a\n"
"    directory, to be included in the destination repository, and the\n"
"    exclusion of all other files and dirs not explicitely included.\n"
"    The 'exclude' directive causes files or directories to be omitted.\n"
"    The 'rename' directive renames a file or directory.  To rename from a\n"
"    subdirectory into the root of the repository, use '.' as the path to\n"
"    rename to.\n"
"\n"
"    The splicemap is a file that allows insertion of synthetic\n"
"    history, letting you specify the parents of a revision.  This is\n"
"    useful if you want to e.g. give a Subversion merge two parents, or\n"
"    graft two disconnected series of history together.  Each entry\n"
"    contains a key, followed by a space, followed by one or two\n"
"    values, separated by spaces.  The key is the revision ID in the\n"
"    source revision control system whose parents should be modified\n"
"    (same format as a key in .hg/shamap).  The values are the revision\n"
"    IDs (in either the source or destination revision control system)\n"
"    that should be used as the new parents for that node.\n"
"\n"
"    Mercurial Source\n"
"    -----------------\n"
"\n"
"    --config convert.hg.ignoreerrors=False (boolean)\n"
"        ignore integrity errors when reading. Use it to fix Mercurial\n"
"        repositories with missing revlogs, by converting from and to\n"
"        Mercurial.\n"
"    --config convert.hg.saverev=True          (boolean)\n"
"        allow target to preserve source revision ID\n"
"    --config convert.hg.startrev=0            (hg revision identifier)\n"
"        convert start revision and its descendants\n"
"\n"
"    CVS Source\n"
"    ----------\n"
"\n"
"    CVS source will use a sandbox (i.e. a checked-out copy) from CVS\n"
"    to indicate the starting point of what will be converted. Direct\n"
"    access to the repository files is not needed, unless of course\n"
"    the repository is :local:. The conversion uses the top level\n"
"    directory in the sandbox to find the CVS repository, and then uses\n"
"    CVS rlog commands to find files to convert. This means that unless\n"
"    a filemap is given, all files under the starting directory will be\n"
"    converted, and that any directory reorganisation in the CVS\n"
"    sandbox is ignored.\n"
"\n"
"    Because CVS does not have changesets, it is necessary to collect\n"
"    individual commits to CVS and merge them into changesets. CVS\n"
"    source uses its internal changeset merging code by default but can\n"
"    be configured to call the external 'cvsps' program by setting:\n"
"        --config convert.cvsps='cvsps -A -u --cvs-direct -q'\n"
"    This is a legacy option and may be removed in future.\n"
"\n"
"    The options shown are the defaults.\n"
"\n"
"    Internal cvsps is selected by setting\n"
"        --config convert.cvsps=builtin\n"
"    and has a few more configurable options:\n"
"        --config convert.cvsps.fuzz=60   (integer)\n"
"            Specify the maximum time (in seconds) that is allowed between\n"
"            commits with identical user and log message in a single\n"
"            changeset. When very large files were checked in as part\n"
"            of a changeset then the default may not be long enough.\n"
"        --config convert.cvsps.mergeto='{{mergetobranch ([-\\w]+)}}'\n"
"            Specify a regular expression to which commit log messages are\n"
"            matched. If a match occurs, then the conversion process will\n"
"            insert a dummy revision merging the branch on which this log\n"
"            message occurs to the branch indicated in the regex.\n"
"        --config convert.cvsps.mergefrom='{{mergefrombranch ([-\\w]+)}}'\n"
"            Specify a regular expression to which commit log messages are\n"
"            matched. If a match occurs, then the conversion process will\n"
"            add the most recent revision on the branch indicated in the\n"
"            regex as the second parent of the changeset.\n"
"\n"
"    The hgext/convert/cvsps wrapper script allows the builtin changeset\n"
"    merging code to be run without doing a conversion. Its parameters and\n"
"    output are similar to that of cvsps 2.1.\n"
"\n"
"    Subversion Source\n"
"    -----------------\n"
"\n"
"    Subversion source detects classical trunk/branches/tags layouts.\n"
"    By default, the supplied \"svn://repo/path/\" source URL is\n"
"    converted as a single branch. If \"svn://repo/path/trunk\" exists\n"
"    it replaces the default branch. If \"svn://repo/path/branches\"\n"
"    exists, its subdirectories are listed as possible branches. If\n"
"    \"svn://repo/path/tags\" exists, it is looked for tags referencing\n"
"    converted branches. Default \"trunk\", \"branches\" and \"tags\" values\n"
"    can be overriden with following options. Set them to paths\n"
"    relative to the source URL, or leave them blank to disable\n"
"    autodetection.\n"
"\n"
"    --config convert.svn.branches=branches    (directory name)\n"
"        specify the directory containing branches\n"
"    --config convert.svn.tags=tags            (directory name)\n"
"        specify the directory containing tags\n"
"    --config convert.svn.trunk=trunk          (directory name)\n"
"        specify the name of the trunk branch\n"
"\n"
"    Source history can be retrieved starting at a specific revision,\n"
"    instead of being integrally converted. Only single branch\n"
"    conversions are supported.\n"
"\n"
"    --config convert.svn.startrev=0           (svn revision number)\n"
"        specify start Subversion revision.\n"
"\n"
"    Mercurial Destination\n"
"    ---------------------\n"
"\n"
"    --config convert.hg.clonebranches=False   (boolean)\n"
"        dispatch source branches in separate clones.\n"
"    --config convert.hg.tagsbranch=default    (branch name)\n"
"        tag revisions branch name\n"
"    --config convert.hg.usebranchnames=True   (boolean)\n"
"        preserve branch names\n"
"\n"
"    "
msgstr ""

#: hgext/convert/__init__.py:188
msgid ""
"create changeset information from CVS\n"
"\n"
"    This command is intended as a debugging tool for the CVS to Mercurial\n"
"    converter, and can be used as a direct replacement for cvsps.\n"
"\n"
"    Hg debugcvsps reads the CVS rlog for current directory (or any named\n"
"    directory) in the CVS repository, and converts the log to a series of\n"
"    changesets based on matching commit log entries and dates."
msgstr ""

#: hgext/convert/__init__.py:203
msgid "username mapping filename"
msgstr ""

#: hgext/convert/__init__.py:204
msgid "destination repository type"
msgstr "type for destinations repository"

#: hgext/convert/__init__.py:205
msgid "remap file names using contents of file"
msgstr ""

#: hgext/convert/__init__.py:206
msgid "import up to target revision REV"
msgstr ""

#: hgext/convert/__init__.py:207
msgid "source repository type"
msgstr ""

#: hgext/convert/__init__.py:208
msgid "splice synthesized history into place"
msgstr ""

#: hgext/convert/__init__.py:209
msgid "try to sort changesets by date"
msgstr ""

#: hgext/convert/__init__.py:210
msgid "hg convert [OPTION]... SOURCE [DEST [REVMAP]]"
msgstr ""

#: hgext/convert/__init__.py:219
msgid "only return changes on specified branches"
msgstr ""

#: hgext/convert/__init__.py:220
msgid "prefix to remove from file names"
msgstr ""

#: hgext/convert/__init__.py:221
msgid "only return changes after or between specified tags"
msgstr ""

#: hgext/convert/__init__.py:222
msgid "update cvs log cache"
msgstr ""

#: hgext/convert/__init__.py:223
msgid "create new cvs log cache"
msgstr ""

#: hgext/convert/__init__.py:224
msgid "set commit time fuzz in seconds"
msgstr ""

#: hgext/convert/__init__.py:225
msgid "specify cvsroot"
msgstr ""

#: hgext/convert/__init__.py:227
msgid "show parent changesets"
msgstr "vis forældre-ændring"

#: hgext/convert/__init__.py:228
msgid "show current changeset in ancestor branches"
msgstr ""

#: hgext/extdiff.py:8
msgid ""
"\n"
"The `extdiff' Mercurial extension allows you to use external programs\n"
"to compare revisions, or revision with working dir.  The external diff\n"
"programs are called with a configurable set of options and two\n"
"non-option arguments: paths to directories containing snapshots of\n"
"files to compare.\n"
"\n"
"To enable this extension:\n"
"\n"
"  [extensions]\n"
"  hgext.extdiff =\n"
"\n"
"The `extdiff' extension also allows to configure new diff commands, so\n"
"you do not need to type \"hg extdiff -p kdiff3\" always.\n"
"\n"
"  [extdiff]\n"
"  # add new command that runs GNU diff(1) in 'context diff' mode\n"
"  cdiff = gdiff -Nprc5\n"
"  ## or the old way:\n"
"  #cmd.cdiff = gdiff\n"
"  #opts.cdiff = -Nprc5\n"
"\n"
"  # add new command called vdiff, runs kdiff3\n"
"  vdiff = kdiff3\n"
"\n"
"  # add new command called meld, runs meld (no need to name twice)\n"
"  meld =\n"
"\n"
"  # add new command called vimdiff, runs gvimdiff with DirDiff plugin\n"
"  #(see http://www.vim.org/scripts/script.php?script_id=102)\n"
"  # Non english user, be sure to put \"let g:DirDiffDynamicDiffText = 1\" "
"in\n"
"  # your .vimrc\n"
"  vimdiff = gvim -f '+next' '+execute \"DirDiff\" argv(0) argv(1)'\n"
"\n"
"You can use -I/-X and list of file or directory names like normal\n"
"\"hg diff\" command.  The `extdiff' extension makes snapshots of only\n"
"needed files, so running the external diff program will actually be\n"
"pretty fast (at least faster than having to compare the entire tree).\n"
msgstr ""

#: hgext/extdiff.py:54
msgid "snapshot files as of some revision"
msgstr ""

#: hgext/extdiff.py:61
msgid "making snapshot of %d files from rev %s\n"
msgstr ""

#: hgext/extdiff.py:80
msgid ""
"snapshot files from working directory.\n"
"    if not using snapshot, -I/-X does not work and recursive diff\n"
"    in tools like kdiff3 and meld displays too many files."
msgstr ""

#: hgext/extdiff.py:88
msgid "making snapshot of %d files from working dir\n"
msgstr ""

#: hgext/extdiff.py:113
msgid ""
"Do the actuall diff:\n"
"\n"
"    - copy to a temp structure if diffing 2 internal revisions\n"
"    - copy to a temp structure if diffing working revision with\n"
"      another one and more than 1 file is changed\n"
"    - just invoke the diff for a single file in the working dir\n"
"    "
msgstr ""

#: hgext/extdiff.py:164
msgid "running %r in %s\n"
msgstr ""

#: hgext/extdiff.py:169
msgid "file changed while diffing. Overwriting: %s (src: %s)\n"
msgstr ""

#: hgext/extdiff.py:175
msgid "cleaning up temp directory\n"
msgstr ""

#: hgext/extdiff.py:179
msgid ""
"use external program to diff repository (or selected files)\n"
"\n"
"    Show differences between revisions for the specified files, using\n"
"    an external program.  The default program used is diff, with\n"
"    default options \"-Npru\".\n"
"\n"
"    To select a different program, use the -p option.  The program\n"
"    will be passed the names of two directories to compare.  To pass\n"
"    additional options to the program, use the -o option.  These will\n"
"    be passed before the names of the directories to compare.\n"
"\n"
"    When two revision arguments are given, then changes are\n"
"    shown between those revisions. If only one revision is\n"
"    specified then that revision is compared to the working\n"
"    directory, and, when no revisions are specified, the\n"
"    working directory files are compared to its parent."
msgstr ""

#: hgext/extdiff.py:205
msgid "comparison program to run"
msgstr ""

#: hgext/extdiff.py:206
msgid "pass option to comparison program"
msgstr ""

#: hgext/extdiff.py:209
msgid "hg extdiff [OPT]... [FILE]..."
msgstr ""

#: hgext/extdiff.py:229
msgid "use closure to save diff command to use"
msgstr ""

#: hgext/extdiff.py:247
msgid "hg %s [OPTION]... [FILE]..."
msgstr ""

#: hgext/fetch.py:7
msgid "pulling, updating and merging in one command"
msgstr ""

#: hgext/fetch.py:14
msgid ""
"pull changes from a remote repository, merge new changes if needed.\n"
"\n"
"    This finds all changes from the repository at the specified path\n"
"    or URL and adds them to the local repository.\n"
"\n"
"    If the pulled changes add a new branch head, the head is automatically\n"
"    merged, and the result of the merge is committed.  Otherwise, the\n"
"    working directory is updated to include the new changes.\n"
"\n"
"    When a merge occurs, the newly pulled changes are assumed to be\n"
"    \"authoritative\".  The head of the new changes is used as the first\n"
"    parent, with local changes as the second.  To switch the merge\n"
"    order, use --switch-parent.\n"
"\n"
"    See 'hg help dates' for a list of formats valid for -d/--date.\n"
"    "
msgstr ""

#: hgext/fetch.py:39
msgid ""
"working dir not at branch tip (use \"hg update\" to check out branch tip)"
msgstr ""

#: hgext/fetch.py:43 hgext/keyword.py:261 mercurial/cmdutil.py:69
msgid "outstanding uncommitted merge"
msgstr ""

#: hgext/fetch.py:52 hgext/keyword.py:266 mercurial/cmdutil.py:72
#: mercurial/merge.py:459
msgid "outstanding uncommitted changes"
msgstr ""

#: hgext/fetch.py:54
msgid "working directory is missing some files"
msgstr "arbejdsbiblioteket mangler nogle filer"

#: hgext/fetch.py:56
msgid ""
"multiple heads in this branch (use \"hg heads .\" and \"hg merge\" to merge)"
msgstr ""

#: hgext/fetch.py:62 mercurial/commands.py:2168
msgid "pulling from %s\n"
msgstr "hiver fra %s\n"

#: hgext/fetch.py:67
msgid "fetch -r doesn't work for remote repositories yet"
msgstr "fetch -r virker endnu ikke for fjernarkiver"

#: hgext/fetch.py:94
msgid ""
"not merging with %d other new branch heads (use \"hg heads .\" and \"hg merge"
"\" to merge them)\n"
msgstr ""

#: hgext/fetch.py:109
msgid "updating to %d:%s\n"
msgstr "opdaterer til %d:%s\n"

#: hgext/fetch.py:113
msgid "merging with %d:%s\n"
msgstr "sammenføjer med %d:%s\n"

#: hgext/fetch.py:120
msgid "Automated merge with %s"
msgstr ""

#: hgext/fetch.py:126
msgid "new changeset %d:%s merges remote changes with local\n"
msgstr ""

#: hgext/fetch.py:136
msgid "a specific revision you would like to pull"
msgstr ""

#: hgext/fetch.py:137 hgext/mq.py:2516 hgext/mq.py:2543
msgid "edit commit message"
msgstr ""

#: hgext/fetch.py:138
msgid "edit commit message (DEPRECATED)"
msgstr ""

#: hgext/fetch.py:139
msgid "switch parents when merging"
msgstr ""

#: hgext/fetch.py:141
msgid "hg fetch [SOURCE]"
msgstr ""

#: hgext/gpg.py:23
msgid " returns of the good and bad signatures"
msgstr ""

#: hgext/gpg.py:53
msgid "error while verifying signature"
msgstr ""

#: hgext/gpg.py:73
msgid "create a new gpg instance"
msgstr ""

#: hgext/gpg.py:81
msgid ""
"\n"
"    walk over every sigs, yields a couple\n"
"    ((node, version, sig), (filename, linenumber))\n"
"    "
msgstr ""

#: hgext/gpg.py:110
msgid "get the keys who signed a data"
msgstr ""

#: hgext/gpg.py:127
msgid "%s Bad signature from \"%s\"\n"
msgstr ""

#: hgext/gpg.py:130
msgid "%s Note: Signature has expired (signed by: \"%s\")\n"
msgstr ""

#: hgext/gpg.py:133
msgid "%s Note: This key has expired (signed by: \"%s\")\n"
msgstr ""

#: hgext/gpg.py:139
msgid "list signed changesets"
msgstr ""

#: hgext/gpg.py:149
msgid "%s:%d node does not exist\n"
msgstr ""

#: hgext/gpg.py:165
msgid "verify all the signatures there may be for a particular revision"
msgstr ""

#: hgext/gpg.py:179
msgid "No valid signature for %s\n"
msgstr ""

#: hgext/gpg.py:188
msgid "associate a string to a key (username, comment)"
msgstr ""

#: hgext/gpg.py:197
msgid ""
"add a signature for the current or given revision\n"
"\n"
"    If no revision is given, the parent of the working directory is used,\n"
"    or tip if no revision is checked out.\n"
"\n"
"    See 'hg help dates' for a list of formats valid for -d/--date.\n"
"    "
msgstr ""

#: hgext/gpg.py:219 mercurial/commands.py:2423 mercurial/commands.py:2816
msgid "uncommitted merge - please provide a specific revision"
msgstr ""

#: hgext/gpg.py:232
msgid "Error while signing"
msgstr ""

#: hgext/gpg.py:244
msgid ""
"working copy of .hgsigs is changed (please commit .hgsigs manually or use --"
"force)"
msgstr ""

#: hgext/gpg.py:258
msgid "Added signature for changeset %s"
msgstr ""

#: hgext/gpg.py:267
msgid "map a manifest into some text"
msgstr ""

#: hgext/gpg.py:271
msgid "unknown signature version"
msgstr ""

#: hgext/gpg.py:276
msgid "make the signature local"
msgstr ""

#: hgext/gpg.py:277
msgid "sign even if the sigfile is modified"
msgstr ""

#: hgext/gpg.py:278
msgid "do not commit the sigfile after signing"
msgstr ""

#: hgext/gpg.py:279
msgid "the key id to sign with"
msgstr ""

#: hgext/gpg.py:280
msgid "commit message"
msgstr ""

#: hgext/gpg.py:282
msgid "hg sign [OPTION]... [REVISION]..."
msgstr ""

#: hgext/gpg.py:283
msgid "hg sigcheck REVISION"
msgstr ""

#: hgext/gpg.py:284
msgid "hg sigs"
msgstr ""

#: hgext/graphlog.py:7
msgid ""
"show revision graphs in terminal windows\n"
"\n"
"This extension adds a --graph option to the incoming, outgoing and log\n"
"commands. When this options is given, an ascii representation of the\n"
"revision graph is also shown.\n"
msgstr ""

#: hgext/graphlog.py:25
msgid ""
"cset DAG generator yielding (rev, node, [parents]) tuples\n"
"\n"
"    This generator function walks through the revision history from "
"revision\n"
"    start to revision stop (which must be less than or equal to start).\n"
"    "
msgstr ""

#: hgext/graphlog.py:40
msgid ""
"file cset DAG generator yielding (rev, node, [parents]) tuples\n"
"\n"
"    This generator function walks through the revision history of a single\n"
"    file from revision start to revision stop (which must be less than or\n"
"    equal to start).\n"
"    "
msgstr ""

#: hgext/graphlog.py:59
msgid ""
"grapher for asciigraph on a list of nodes and their parents\n"
"\n"
"    nodes must generate tuples (node, parents, char, lines) where\n"
"     - parents must generate the parents of node, in sorted order,\n"
"       and max length 2,\n"
"     - char is the char to print as the node symbol, and\n"
"     - lines are the lines to display next to the node.\n"
"    "
msgstr ""

#: hgext/graphlog.py:147
msgid ""
"prints an ASCII graph of the DAG returned by the grapher\n"
"\n"
"    grapher is a generator that emits tuples with the following elements:\n"
"\n"
"      - Character to use as node's symbol.\n"
"      - List of lines to display as the node's text.\n"
"      - Column of the current node in the set of ongoing edges.\n"
"      - Edges; a list of (col, next_col) indicating the edges between\n"
"        the current node and its parents.\n"
"      - Number of columns (ongoing edges) in the current revision.\n"
"      - The difference between the number of columns (ongoing edges)\n"
"        in the next revision and the number of columns (ongoing edges)\n"
"        in the current revision. That is: -1 means one column removed;\n"
"        0 means no columns added or removed; 1 means one column added.\n"
"    "
msgstr ""

#: hgext/graphlog.py:253 mercurial/cmdutil.py:100
msgid "limit must be a positive integer"
msgstr ""

#: hgext/graphlog.py:255 mercurial/cmdutil.py:101
msgid "limit must be positive"
msgstr ""

#: hgext/graphlog.py:272
msgid "--graph option is incompatible with --%s"
msgstr ""

#: hgext/graphlog.py:276
msgid ""
"show revision history alongside an ASCII revision graph\n"
"\n"
"    Print a revision history alongside a revision graph drawn with\n"
"    ASCII characters.\n"
"\n"
"    Nodes printed as an @ character are parents of the working\n"
"    directory.\n"
"    "
msgstr ""

#: hgext/graphlog.py:313
msgid ""
"cset DAG generator yielding (node, [parents]) tuples\n"
"\n"
"    This generator function walks through the revisions not found\n"
"    in the destination\n"
"    "
msgstr ""

#: hgext/graphlog.py:326 hgext/graphlog.py:406 hgext/patchbomb.py:216
#: mercurial/commands.py:1708 mercurial/commands.py:2034
msgid "comparing with %s\n"
msgstr "sammenligner med %s\n"

#: hgext/graphlog.py:329 hgext/graphlog.py:415 hgext/patchbomb.py:219
#: mercurial/commands.py:1718 mercurial/commands.py:2037
#: mercurial/localrepo.py:1468 mercurial/localrepo.py:1509
msgid "no changes found\n"
msgstr "fandt ingen ændringer\n"

#: hgext/graphlog.py:347
msgid ""
"show the outgoing changesets alongside an ASCII revision graph\n"
"\n"
"    Print the outgoing changesets alongside a revision graph drawn with\n"
"    ASCII characters.\n"
"\n"
"    Nodes printed as an @ character are parents of the working\n"
"    directory.\n"
"    "
msgstr ""

#: hgext/graphlog.py:371
msgid ""
"cset DAG generator yielding (node, [parents]) tuples\n"
"\n"
"    This generator function walks through the revisions of the destination\n"
"    not found in repo\n"
"    "
msgstr ""

#: hgext/graphlog.py:392
msgid ""
"show the incoming changesets alongside an ASCII revision graph\n"
"\n"
"    Print the incoming changesets alongside a revision graph drawn with\n"
"    ASCII characters.\n"
"\n"
"    Nodes printed as an @ character are parents of the working\n"
"    directory.\n"
"    "
msgstr ""

#: hgext/graphlog.py:463
msgid "wrap the command"
msgstr ""

#: hgext/graphlog.py:469
msgid "show the revision DAG"
msgstr ""

#: hgext/graphlog.py:474 hgext/hgk.py:328 mercurial/commands.py:3014
msgid "limit number of changes displayed"
msgstr ""

#: hgext/graphlog.py:475 mercurial/commands.py:3013 mercurial/commands.py:3398
msgid "show patch"
msgstr ""

#: hgext/graphlog.py:476 mercurial/commands.py:3261
msgid "show the specified revision or range"
msgstr ""

#: hgext/graphlog.py:478
msgid "hg glog [OPTION]... [FILE]"
msgstr ""

#: hgext/hgcia.py:4
msgid ""
"CIA notification\n"
"\n"
"This is meant to be run as a changegroup or incoming hook.\n"
"To configure it, set the following options in your hgrc:\n"
"\n"
"[cia]\n"
"# your registered CIA user name\n"
"user = foo\n"
"# the name of the project in CIA\n"
"project = foo\n"
"# the module (subproject) (optional)\n"
"#module = foo\n"
"# Append a diffstat to the log message (optional)\n"
"#diffstat = False\n"
"# Template to use for log messages (optional)\n"
"#template = {desc}\n"
"{baseurl}/rev/{node}-- {diffstat}\n"
"# Style to use (optional)\n"
"#style = foo\n"
"# The URL of the CIA notification service (optional)\n"
"# You can use mailto: URLs to send by email, eg\n"
"# mailto:cia@cia.vc\n"
"# Make sure to set email.from if you do this.\n"
"#url = http://cia.vc/\n"
"# print message instead of sending it (optional)\n"
"#test = False\n"
"\n"
"[hooks]\n"
"# one of these:\n"
"changegroup.cia = python:hgcia.hook\n"
"#incoming.cia = python:hgcia.hook\n"
"\n"
"[web]\n"
"# If you want hyperlinks (optional)\n"
"baseurl = http://server/path/to/repo\n"
msgstr ""

#: hgext/hgcia.py:62
msgid " A CIA message "
msgstr ""

#: hgext/hgcia.py:168
msgid " CIA notification class "
msgstr ""

#: hgext/hgcia.py:209
msgid "hgcia: sending update to %s\n"
msgstr ""

#: hgext/hgcia.py:215
msgid " send CIA notification "
msgstr ""

#: hgext/hgcia.py:222
msgid "email.from must be defined when sending by email"
msgstr ""

#: hgext/hgcia.py:231
msgid "cia: no user specified"
msgstr "cia: ingen bruger angivet"

#: hgext/hgcia.py:234
msgid "cia: no project specified"
msgstr "cia: intet project angivet"

#: hgext/hgk.py:7
msgid ""
"browsing the repository in a graphical way\n"
"\n"
"The hgk extension allows browsing the history of a repository in a\n"
"graphical way. It requires Tcl/Tk version 8.4 or later. (Tcl/Tk is\n"
"not distributed with Mercurial.)\n"
"\n"
"hgk consists of two parts: a Tcl script that does the displaying and\n"
"querying of information, and an extension to mercurial named hgk.py,\n"
"which provides hooks for hgk to get information. hgk can be found in\n"
"the contrib directory, and hgk.py can be found in the hgext directory.\n"
"\n"
"To load the hgext.py extension, add it to your .hgrc file (you have\n"
"to use your global $HOME/.hgrc file, not one in a repository). You\n"
"can specify an absolute path:\n"
"\n"
"  [extensions]\n"
"  hgk=/usr/local/lib/hgk.py\n"
"\n"
"Mercurial can also scan the default python library path for a file\n"
"named 'hgk.py' if you set hgk empty:\n"
"\n"
"  [extensions]\n"
"  hgk=\n"
"\n"
"The hg view command will launch the hgk Tcl script. For this command\n"
"to work, hgk must be in your search path. Alternately, you can\n"
"specify the path to hgk in your .hgrc file:\n"
"\n"
"  [hgk]\n"
"  path=/location/of/hgk\n"
"\n"
"hgk can make use of the extdiff extension to visualize revisions.\n"
"Assuming you had already configured extdiff vdiff command, just add:\n"
"\n"
"  [hgk]\n"
"  vdiff=vdiff\n"
"\n"
"Revisions context menu will now display additional entries to fire\n"
"vdiff on hovered and selected revisions."
msgstr ""

#: hgext/hgk.py:53
msgid "diff trees from two commits"
msgstr ""

#: hgext/hgk.py:133
msgid "output common ancestor information"
msgstr ""

#: hgext/hgk.py:140
msgid "cat a specific revision"
msgstr ""

#: hgext/hgk.py:155
msgid "cat-file: type or revision not supplied\n"
msgstr ""

#: hgext/hgk.py:160
msgid "aborting hg cat-file only understands commits\n"
msgstr ""

#: hgext/hgk.py:285
msgid "parse given revisions"
msgstr ""

#: hgext/hgk.py:301
msgid "print revisions"
msgstr ""

#: hgext/hgk.py:310
msgid "print extension options"
msgstr ""

#: hgext/hgk.py:318
msgid "start interactive history viewer"
msgstr ""

#: hgext/hgk.py:322 hgext/convert/cvsps.py:191 mercurial/sshrepo.py:45
#: mercurial/sshrepo.py:63
msgid "running %s\n"
msgstr "kører %s\n"

#: hgext/hgk.py:329
msgid "hg view [-l LIMIT] [REVRANGE]"
msgstr ""

#: hgext/hgk.py:332
msgid "generate patch"
msgstr ""

#: hgext/hgk.py:333
msgid "recursive"
msgstr ""

#: hgext/hgk.py:334
msgid "pretty"
msgstr ""

#: hgext/hgk.py:335 hgext/hgk.py:341
msgid "stdin"
msgstr ""

#: hgext/hgk.py:336
msgid "detect copies"
msgstr ""

#: hgext/hgk.py:337
msgid "search"
msgstr "søg"

#: hgext/hgk.py:338
msgid "hg git-diff-tree [OPTION]... NODE1 NODE2 [FILE]..."
msgstr ""

#: hgext/hgk.py:342
msgid "hg debug-cat-file [OPTION]... TYPE FILE"
msgstr ""

#: hgext/hgk.py:344
msgid "hg debug-config"
msgstr ""

#: hgext/hgk.py:346
msgid "hg debug-merge-base node node"
msgstr ""

#: hgext/hgk.py:349
msgid "ignored"
msgstr "Ignoreret"

#: hgext/hgk.py:350
msgid "hg debug-rev-parse REV"
msgstr ""

#: hgext/hgk.py:353
msgid "header"
msgstr ""

#: hgext/hgk.py:354
msgid "topo-order"
msgstr ""

#: hgext/hgk.py:355
msgid "parents"
msgstr ""

#: hgext/hgk.py:356
msgid "max-count"
msgstr ""

#: hgext/hgk.py:357
msgid "hg debug-rev-list [options] revs"
msgstr ""

#: hgext/highlight/__init__.py:1
msgid ""
"syntax highlighting in hgweb, based on Pygments\n"
"\n"
"It depends on the pygments syntax highlighting library:\n"
"http://pygments.org/\n"
"\n"
"To enable the extension add this to hgrc:\n"
"\n"
"[extensions]\n"
"hgext.highlight =\n"
"\n"
"There is a single configuration option:\n"
"\n"
"[web]\n"
"pygments_style = <style>\n"
"\n"
"The default is 'colorful'.\n"
"\n"
"-- Adam Hupp <adam@hupp.org>\n"
msgstr ""

#: hgext/imerge.py:4
msgid ""
"\n"
"imerge - interactive merge\n"
msgstr ""

#: hgext/imerge.py:77
msgid "invalid imerge status file"
msgstr ""

#: hgext/imerge.py:82
msgid "merge parent %s not in repository"
msgstr ""

#: hgext/imerge.py:157
msgid "imerge state does not match working directory"
msgstr ""

#: hgext/imerge.py:167
msgid "%s is not in the merge set"
msgstr ""

#: hgext/imerge.py:178
msgid "%s is not resolved"
msgstr ""

#: hgext/imerge.py:186
msgid "write current merge state to file to be resumed elsewhere"
msgstr ""

#: hgext/imerge.py:191
msgid "read merge state from file"
msgstr ""

#: hgext/imerge.py:197
msgid "there is already a merge in progress (update -C <rev> to abort it)"
msgstr ""

#: hgext/imerge.py:201
msgid "working directory has uncommitted changes"
msgstr ""

#: hgext/imerge.py:246
msgid "resolve requires at least one filename"
msgstr ""

#: hgext/imerge.py:259
msgid "merging %s and %s\n"
msgstr ""

#: hgext/imerge.py:283
msgid "all conflicts resolved\n"
msgstr ""

#: hgext/imerge.py:289
msgid "unresolve requires at least one filename"
msgstr ""

#: hgext/imerge.py:296
msgid "automatically resolve if possible"
msgstr ""

#: hgext/imerge.py:302 mercurial/commands.py:3378
msgid "hide status prefix"
msgstr ""

#: hgext/imerge.py:303
msgid "only show resolved conflicts"
msgstr ""

#: hgext/imerge.py:304
msgid "only show unresolved conflicts"
msgstr ""

#: hgext/imerge.py:333
msgid "%s: invalid arguments"
msgstr ""

#: hgext/imerge.py:336
msgid ""
"interactive merge\n"
"\n"
"    imerge lets you split a merge into pieces. When you start a merge\n"
"    with imerge, the names of all files with conflicts are recorded.\n"
"    You can then merge any of these files, and if the merge is\n"
"    successful, they will be marked as resolved. When all files are\n"
"    resolved, the merge is complete.\n"
"\n"
"    If no merge is in progress, hg imerge [rev] will merge the working\n"
"    directory with rev (defaulting to the other head if the repository\n"
"    only has two heads). You may also resume a saved merge with\n"
"    hg imerge load <file>.\n"
"\n"
"    If a merge is in progress, hg imerge will default to merging the\n"
"    next unresolved file.\n"
"\n"
"    The following subcommands are available:\n"
"\n"
"    status:\n"
"      show the current state of the merge\n"
"      options:\n"
"        -n --no-status:  do not print the status prefix\n"
"           --resolved:   only print resolved conflicts\n"
"           --unresolved: only print unresolved conflicts\n"
"    next:\n"
"      show the next unresolved file merge\n"
"    merge [<file>]:\n"
"      merge <file>. If the file merge is successful, the file will be\n"
"      recorded as resolved. If no file is given, the next unresolved\n"
"      file will be merged.\n"
"    resolve <file>...:\n"
"      mark files as successfully merged\n"
"    unresolve <file>...:\n"
"      mark files as requiring merging.\n"
"    save <file>:\n"
"      save the state of the merge to a file to be resumed elsewhere\n"
"    load <file>:\n"
"      load the state of the merge from a file created by save\n"
"    "
msgstr ""

#: hgext/imerge.py:383 mercurial/commands.py:195 mercurial/commands.py:1959
#: mercurial/commands.py:1988 mercurial/commands.py:2923
msgid "please specify just one revision"
msgstr ""

#: hgext/imerge.py:404 mercurial/commands.py:3277
msgid "revision to merge"
msgstr ""

#: hgext/imerge.py:405
msgid "automatically merge where possible"
msgstr ""

#: hgext/imerge.py:406
msgid "hg imerge [command]"
msgstr ""

#: hgext/inotify/__init__.py:9
msgid "inotify-based status acceleration for Linux systems\n"
msgstr ""

#: hgext/inotify/__init__.py:20
msgid "start an inotify server for this repository"
msgstr ""

#: hgext/inotify/__init__.py:79
msgid "(found dead inotify server socket; removing it)\n"
msgstr ""

#: hgext/inotify/__init__.py:84
msgid "(starting inotify server)\n"
msgstr ""

#: hgext/inotify/__init__.py:95
msgid "could not start inotify server: %s\n"
msgstr ""

#: hgext/inotify/__init__.py:102
msgid "could not talk to new inotify server: %s\n"
msgstr ""

#: hgext/inotify/__init__.py:106
msgid "(inotify server not running)\n"
msgstr ""

#: hgext/inotify/__init__.py:108
msgid "failed to contact inotify server: %s\n"
msgstr ""

#: hgext/inotify/__init__.py:122 mercurial/commands.py:3347
msgid "run server in background"
msgstr ""

#: hgext/inotify/__init__.py:123 mercurial/commands.py:3348
msgid "used internally by daemon mode"
msgstr ""

#: hgext/inotify/__init__.py:124
msgid "minutes to sit idle before exiting"
msgstr ""

#: hgext/inotify/__init__.py:125 mercurial/commands.py:3357
msgid "name of file to write process ID to"
msgstr ""

#: hgext/inotify/__init__.py:126
msgid "hg inserve [OPT]..."
msgstr ""

#: hgext/interhg.py:58
msgid "interhg: invalid pattern for %s: %s\n"
msgstr ""

#: hgext/interhg.py:78
msgid "interhg: invalid regexp for %s: %s\n"
msgstr ""

#: hgext/keyword.py:35
msgid ""
"keyword expansion in local repositories\n"
"\n"
"This extension expands RCS/CVS-like or self-customized $Keywords$\n"
"in tracked text files selected by your configuration.\n"
"\n"
"Keywords are only expanded in local repositories and not stored in\n"
"the change history. The mechanism can be regarded as a convenience\n"
"for the current user or for archive distribution.\n"
"\n"
"Configuration is done in the [keyword] and [keywordmaps] sections\n"
"of hgrc files.\n"
"\n"
"Example:\n"
"\n"
"    [keyword]\n"
"    # expand keywords in every python file except those matching \"x*\"\n"
"    **.py =\n"
"    x*    = ignore\n"
"\n"
"Note: the more specific you are in your filename patterns\n"
"      the less you lose speed in huge repos.\n"
"\n"
"For [keywordmaps] template mapping and expansion demonstration and\n"
"control run \"hg kwdemo\".\n"
"\n"
"An additional date template filter {date|utcdate} is provided.\n"
"\n"
"The default template mappings (view with \"hg kwdemo -d\") can be replaced\n"
"with customized keywords and templates.\n"
"Again, run \"hg kwdemo\" to control the results of your config changes.\n"
"\n"
"Before changing/disabling active keywords, run \"hg kwshrink\" to avoid\n"
"the risk of inadvertedly storing expanded keywords in the change history.\n"
"\n"
"To force expansion after enabling it, or a configuration change, run\n"
"\"hg kwexpand\".\n"
"\n"
"Also, when committing with the record extension or using mq's qrecord, be "
"aware\n"
"that keywords cannot be updated. Again, run \"hg kwexpand\" on the files in\n"
"question to update keyword expansions after all changes have been checked "
"in.\n"
"\n"
"Expansions spanning more than one line and incremental expansions,\n"
"like CVS' $Log$, are not supported. A keyword template map\n"
"\"Log = {desc}\" expands to the first line of the changeset description.\n"
msgstr ""

#: hgext/keyword.py:100
msgid "Returns hgdate in cvs-like UTC format."
msgstr ""

#: hgext/keyword.py:108
msgid ""
"\n"
"    Sets up keyword templates, corresponding keyword regex, and\n"
"    provides keyword substitution functions.\n"
"    "
msgstr ""

#: hgext/keyword.py:143
msgid "Replaces keywords in data with expanded template."
msgstr ""

#: hgext/keyword.py:154
msgid "Returns data with keywords expanded."
msgstr ""

#: hgext/keyword.py:161
msgid ""
"Returns true if path matches [keyword] pattern\n"
"        and is not a symbolic link.\n"
"        Caveat: localrepository._link fails on Windows."
msgstr ""

#: hgext/keyword.py:167
msgid "Overwrites selected files expanding/shrinking keywords."
msgstr ""

#: hgext/keyword.py:192
msgid "overwriting %s %s keywords\n"
msgstr ""

#: hgext/keyword.py:198
msgid "Unconditionally removes all keyword substitutions from text."
msgstr ""

#: hgext/keyword.py:202
msgid "Returns text with all keyword substitutions removed."
msgstr ""

#: hgext/keyword.py:208
msgid "Returns lines with keyword substitutions removed."
msgstr ""

#: hgext/keyword.py:216
msgid ""
"If in restricted mode returns data read from wdir with\n"
"        keyword substitutions removed."
msgstr ""

#: hgext/keyword.py:221
msgid ""
"\n"
"    Subclass of filelog to hook into its read, add, cmp methods.\n"
"    Keywords are \"stored\" unexpanded, and processed on reading.\n"
"    "
msgstr ""

#: hgext/keyword.py:231
msgid "Expands keywords when reading filelog."
msgstr ""

#: hgext/keyword.py:236
msgid "Removes keyword substitutions when adding to filelog."
msgstr ""

#: hgext/keyword.py:241
msgid "Removes keyword substitutions for comparison."
msgstr ""

#: hgext/keyword.py:249
msgid ""
"Bails out if [keyword] configuration is not active.\n"
"    Returns status of working directory."
msgstr ""

#: hgext/keyword.py:255
msgid "[keyword] patterns cannot match"
msgstr ""

#: hgext/keyword.py:256
msgid "no [keyword] patterns configured"
msgstr ""

#: hgext/keyword.py:259
msgid "Selects files and passes them to kwtemplater.overwrite."
msgstr ""

#: hgext/keyword.py:277
msgid ""
"print [keywordmaps] configuration and an expansion example\n"
"\n"
"    Show current, custom, or default keyword template maps\n"
"    and their expansion.\n"
"\n"
"    Extend current configuration by specifying maps as arguments\n"
"    and optionally by reading from an additional hgrc file.\n"
"\n"
"    Override current keyword template maps with \"default\" option.\n"
"    "
msgstr ""

#: hgext/keyword.py:288
msgid ""
"\n"
"\t%s\n"
msgstr ""

#: hgext/keyword.py:300
msgid "creating temporary repo at %s\n"
msgstr ""

#: hgext/keyword.py:337
msgid ""
"\n"
"%s keywords written to %s:\n"
msgstr ""

#: hgext/keyword.py:348
msgid "unhooked all commit hooks\n"
msgstr ""

#: hgext/keyword.py:354
msgid ""
"\n"
"removing temporary repo %s\n"
msgstr ""

#: hgext/keyword.py:358
msgid ""
"expand keywords in working directory\n"
"\n"
"    Run after (re)enabling keyword expansion.\n"
"\n"
"    kwexpand refuses to run if given files contain local changes.\n"
"    "
msgstr ""

#: hgext/keyword.py:368
msgid ""
"print files currently configured for keyword expansion\n"
"\n"
"    Crosscheck which files in working directory are potential targets for\n"
"    keyword expansion.\n"
"    That is, files matched by [keyword] config patterns but not symlinks.\n"
"    "
msgstr ""

#: hgext/keyword.py:390
msgid ""
"revert expanded keywords in working directory\n"
"\n"
"    Run before changing/disabling active keywords\n"
"    or if you experience problems with \"hg import\" or \"hg merge\".\n"
"\n"
"    kwshrink refuses to run if given files contain local changes.\n"
"    "
msgstr ""

#: hgext/keyword.py:402
msgid ""
"Collects [keyword] config in kwtools.\n"
"    Monkeypatches dispatch._parse if needed."
msgstr ""

#: hgext/keyword.py:413
msgid "Monkeypatch dispatch._parse to obtain running hg command."
msgstr ""

#: hgext/keyword.py:421
msgid ""
"Sets up repo as kwrepo for keyword substitution.\n"
"    Overrides file method to return kwfilelog instead of filelog\n"
"    if file matches user configuration.\n"
"    Wraps commit to overwrite configured files with updated\n"
"    keyword substitutions.\n"
"    Monkeypatches patch and webcommands."
msgstr ""

#: hgext/keyword.py:487
msgid ""
"Monkeypatch/wrap patch.patchfile.__init__ to avoid\n"
"        rejects or conflicts due to expanded keywords in working dir."
msgstr ""

#: hgext/keyword.py:495
msgid ""
"Monkeypatch patch.diff to avoid expansion except when\n"
"        comparing against working dir."
msgstr ""

#: hgext/keyword.py:504
msgid "Wraps webcommands.x turning off keyword expansion."
msgstr ""

#: hgext/keyword.py:518
msgid "show default keyword template maps"
msgstr ""

#: hgext/keyword.py:519
msgid "read maps from rcfile"
msgstr ""

#: hgext/keyword.py:520
msgid "hg kwdemo [-d] [-f RCFILE] [TEMPLATEMAP]..."
msgstr ""

#: hgext/keyword.py:522
msgid "hg kwexpand [OPTION]... [FILE]..."
msgstr ""

#: hgext/keyword.py:525
msgid "show keyword status flags of all files"
msgstr ""

#: hgext/keyword.py:526
msgid "show files excluded from expansion"
msgstr ""

#: hgext/keyword.py:527
msgid "additionally show untracked files"
msgstr ""

#: hgext/keyword.py:529
msgid "hg kwfiles [OPTION]... [FILE]..."
msgstr ""

#: hgext/keyword.py:531
msgid "hg kwshrink [OPTION]... [FILE]..."
msgstr ""

#: hgext/mq.py:8
msgid ""
"patch management and development\n"
"\n"
"This extension lets you work with a stack of patches in a Mercurial\n"
"repository.  It manages two stacks of patches - all known patches, and\n"
"applied patches (subset of known patches).\n"
"\n"
"Known patches are represented as patch files in the .hg/patches\n"
"directory.  Applied patches are both patch files and changesets.\n"
"\n"
"Common tasks (use \"hg help command\" for more details):\n"
"\n"
"prepare repository to work with patches   qinit\n"
"create new patch                          qnew\n"
"import existing patch                     qimport\n"
"\n"
"print patch series                        qseries\n"
"print applied patches                     qapplied\n"
"print name of top applied patch           qtop\n"
"\n"
"add known patch to applied stack          qpush\n"
"remove patch from applied stack           qpop\n"
"refresh contents of top applied patch     qrefresh\n"
msgstr ""
"udvikling og håndtering af patches\n"
"\n"
"Denne udvidelse lader dig arbejde med en stak af patches i et\n"
"Mercurial repository. Den håndterer to stakke af patches - alle kendte\n"
"patches og alle anvendte patches (en delmængde af de kendte patches).\n"
"\n"
"Kendte patches er repræsenteret som patch-filer i .hg/patches\n"
"biblioteket. Anvendte patches er både patch-filer og Mercurial\n"
"ændringer.\n"
"\n"
"Almindelige opgaver (brug \"hg help kommado\" for flere detaljer):\n"
"\n"
"forbered repository til at arbejde med patches   qinit\n"
"opret ny patch                                   qnew\n"
"importer eksisterende patch                      qimport\n"
"\n"
"list patch-serien                                qseries\n"
"list anvendte patches                            qapplied\n"
"list navnet på den øverste patch                 qtop\n"
"\n"
"anvend og put patch på stakken                   qpush\n"
"fjern patch fra stakken                          qpop\n"
"genopfrisk indholdet af den øverste patch        qrefresh\n"

#: hgext/mq.py:87
msgid ""
"Update all references to a field in the patch header.\n"
"        If none found, add it email style."
msgstr ""

#: hgext/mq.py:104
msgid ""
"Remove existing message, keeping the rest of the comments fields.\n"
"        If comments contains 'subject: ', message will prepend\n"
"        the field and a blank line."
msgstr ""

#: hgext/mq.py:184
msgid "%s appears more than once in %s"
msgstr "%s findes mere end én gang i %s"

#: hgext/mq.py:191
msgid "guard cannot be an empty string"
msgstr ""

#: hgext/mq.py:196
msgid "guard %r starts with invalid character: %r"
msgstr ""

#: hgext/mq.py:200
msgid "invalid character in guard %r: %r"
msgstr ""

#: hgext/mq.py:208
msgid "active guards: %s\n"
msgstr ""

#: hgext/mq.py:232
msgid "guard %r too short"
msgstr ""

#: hgext/mq.py:234
msgid "guard %r starts with invalid char"
msgstr ""

#: hgext/mq.py:269
msgid "allowing %s - no guards in effect\n"
msgstr ""

#: hgext/mq.py:273
msgid "allowing %s - no matching negative guards\n"
msgstr ""

#: hgext/mq.py:276
msgid "allowing %s - guarded by %r\n"
msgstr ""

#: hgext/mq.py:280
msgid "skipping %s - guarded by %r\n"
msgstr ""

#: hgext/mq.py:283
msgid "skipping %s - no matching guards\n"
msgstr ""

#: hgext/mq.py:380
msgid "error removing undo: %s\n"
msgstr ""

#: hgext/mq.py:399
msgid "apply failed for patch %s"
msgstr ""

#: hgext/mq.py:401
msgid "patch didn't work out, merging %s\n"
msgstr ""

#: hgext/mq.py:410
msgid "update returned %d"
msgstr ""

#: hgext/mq.py:413 hgext/mq.py:581 hgext/mq.py:751
msgid "repo commit failed"
msgstr ""

#: hgext/mq.py:417 hgext/mq.py:1603
msgid "unable to read %s"
msgstr "ikke i stand til at læse %s"

#: hgext/mq.py:466
msgid "patch %s does not exist\n"
msgstr "rettelsen %s findes ikke\n"

#: hgext/mq.py:474
msgid "patch %s is not applied\n"
msgstr "rettelsen %s er ikke anvendt\n"

#: hgext/mq.py:487
msgid ""
"Apply patchfile  to the working directory.\n"
"        patchfile: file name of patch"
msgstr ""

#: hgext/mq.py:496
msgid "patch failed, unable to continue (try -v)\n"
msgstr ""

#: hgext/mq.py:537 hgext/transplant.py:208 mercurial/commands.py:1627
msgid "applying %s\n"
msgstr "anvender %s\n"

#: hgext/mq.py:543
msgid "Unable to read %s\n"
msgstr ""

#: hgext/mq.py:549
msgid "imported patch %s\n"
msgstr "importeret rettelse %s\n"

#: hgext/mq.py:552
msgid ""
"\n"
"imported patch %s"
msgstr "\nimporteret rettelse %s"

#: hgext/mq.py:588
msgid "patch %s is empty\n"
msgstr "rettelse %s er tom\n"

#: hgext/mq.py:591
msgid "patch failed, rejects left in working dir\n"
msgstr ""

#: hgext/mq.py:596
msgid "fuzz found when applying patch, stopping\n"
msgstr ""

#: hgext/mq.py:615 hgext/mq.py:659
msgid "revision %d is not managed"
msgstr ""

#: hgext/mq.py:619 hgext/mq.py:664
msgid "cannot delete revision %d above applied patches"
msgstr "kan ikke slette revision %d ovenover anvendte rettelser"

#: hgext/mq.py:637
msgid "qdelete requires at least one revision or patch name"
msgstr ""

#: hgext/mq.py:645
msgid "cannot delete applied patch %s"
msgstr "kan ikke slette den anvendte rettelse %s"

#: hgext/mq.py:647
msgid "patch %s not in series file"
msgstr "rettelse %s er ikke i series filen"

#: hgext/mq.py:653 hgext/mq.py:2016
msgid "no patches applied"
msgstr "ingen rettelser anvendt"

#: hgext/mq.py:687
msgid "working directory revision is not qtip"
msgstr ""

#: hgext/mq.py:695
msgid "local changes found, refresh first"
msgstr "lokale ændringer fundet, genopfrisk først"

#: hgext/mq.py:697
msgid "local changes found"
msgstr "lokale ændringer fundet"

#: hgext/mq.py:704
msgid "\"%s\" cannot be used as the name of a patch"
msgstr "\"%s\" kan ikke bruges som navnet på en rettelse"

#: hgext/mq.py:708
msgid ""
"options:\n"
"           msg: a string or a no-argument function returning a string\n"
"        "
msgstr ""

#: hgext/mq.py:719 hgext/mq.py:1515
msgid "patch \"%s\" already exists"
msgstr "rettelsen \"%s\" findes allerede"

#: hgext/mq.py:781
msgid "error unlinking %s\n"
msgstr "fejl ved sletning af %s\n"

#: hgext/mq.py:808
msgid "returns (index, rev, patch)"
msgstr ""

#: hgext/mq.py:829
msgid "patch name \"%s\" is ambiguous:\n"
msgstr "rettelsen \"%s\" er tvetydigt:\n"

#: hgext/mq.py:884
msgid "patch %s not in series"
msgstr ""

#: hgext/mq.py:890
msgid "(working directory not at tip)\n"
msgstr ""

#: hgext/mq.py:893
msgid "no patches in series\n"
msgstr "ingen patches i serien\n"

#: hgext/mq.py:907
msgid "cannot push to a previous patch: %s"
msgstr ""

#: hgext/mq.py:909
msgid "qpush: %s is already at the top\n"
msgstr ""

#: hgext/mq.py:914
msgid "guarded by %r"
msgstr ""

#: hgext/mq.py:916
msgid "no matching guards"
msgstr ""

#: hgext/mq.py:917
msgid "cannot push '%s' - %s\n"
msgstr "kan ikke skubbe '%s' - %s\n"

#: hgext/mq.py:922
msgid "all patches are currently applied\n"
msgstr "alle rettelser er i øjeblikket anvendt\n"

#: hgext/mq.py:932
msgid "patch series already fully applied\n"
msgstr ""

#: hgext/mq.py:953
msgid "cleaning up working directory..."
msgstr "rydder op i arbejdsbiblioteket..."

#: hgext/mq.py:966
msgid "Errors during apply, please fix and refresh %s\n"
msgstr ""

#: hgext/mq.py:969 hgext/mq.py:1070
msgid "Now at: %s\n"
msgstr "Nu ved: %s\n"

#: hgext/mq.py:988
msgid "patch %s is not applied"
msgstr "rettelse %s er ikke anvendt"

#: hgext/mq.py:993 hgext/mq.py:2358
msgid "no patches applied\n"
msgstr "ingen rettelser anvendt\n"

#: hgext/mq.py:1004
msgid "qpop: %s is already at the top\n"
msgstr ""

#: hgext/mq.py:1012
msgid "qpop: forcing dirstate update\n"
msgstr ""

#: hgext/mq.py:1036
msgid "trying to pop unknown node %s"
msgstr ""

#: hgext/mq.py:1039
msgid "popping would remove a revision not managed by this patch queue"
msgstr ""

#: hgext/mq.py:1050
msgid "deletions found between repo revs"
msgstr ""

#: hgext/mq.py:1072
msgid "Patch queue now empty\n"
msgstr ""

#: hgext/mq.py:1079 hgext/mq.py:1087 hgext/mq.py:1800 hgext/mq.py:1820
#: hgext/mq.py:1884 hgext/mq.py:2126
msgid "No patches applied\n"
msgstr "Ingen rettelser er anvendt\n"

#: hgext/mq.py:1100
msgid "cannot refresh a revision with children"
msgstr ""

#: hgext/mq.py:1277
msgid ""
"refresh interrupted while patch was popped! (revert --all, qpush to "
"recover)\n"
msgstr ""

#: hgext/mq.py:1304
msgid "patch queue directory already exists"
msgstr ""

#: hgext/mq.py:1315 hgext/mq.py:1646 hgext/mq.py:1657
msgid "patch %s is not in series file"
msgstr "rettelse %s er ikke i series filen"

#: hgext/mq.py:1405
msgid "No saved patch data found\n"
msgstr ""

#: hgext/mq.py:1407
msgid "restoring status: %s\n"
msgstr "genopretter status: %s\n"

#: hgext/mq.py:1416
msgid "save entry has children, leaving it alone\n"
msgstr ""

#: hgext/mq.py:1418
msgid "removing save entry %s\n"
msgstr ""

#: hgext/mq.py:1426
msgid "saved queue repository parents: %s %s\n"
msgstr ""

#: hgext/mq.py:1429
msgid "queue directory updating\n"
msgstr ""

#: hgext/mq.py:1432
msgid "Unable to load queue repository\n"
msgstr ""

#: hgext/mq.py:1438
msgid "save: no patches applied, exiting\n"
msgstr ""

#: hgext/mq.py:1441
msgid "status is already saved\n"
msgstr ""

#: hgext/mq.py:1446
msgid "hg patches saved state"
msgstr ""

#: hgext/mq.py:1458
msgid "repo commit failed\n"
msgstr ""

#: hgext/mq.py:1474
msgid ""
"If all_patches is False, return the index of the next pushable patch\n"
"        in the series, or the series length. If all_patches is True, return "
"the\n"
"        index of the first patch past the last applied one.\n"
"        "
msgstr ""

#: hgext/mq.py:1511
msgid "patch %s is already in the series file"
msgstr ""

#: hgext/mq.py:1520
msgid "option \"-r\" not valid when importing files"
msgstr ""

#: hgext/mq.py:1525
msgid "option \"-n\" not valid when importing multiple patches"
msgstr ""

#: hgext/mq.py:1535
msgid "revision %d is the root of more than one branch"
msgstr ""

#: hgext/mq.py:1540
msgid "revision %d is already managed"
msgstr ""

#: hgext/mq.py:1543
msgid "revision %d is not the parent of the queue"
msgstr ""

#: hgext/mq.py:1549
msgid "revision %d has unmanaged children"
msgstr ""

#: hgext/mq.py:1560
msgid "cannot import merge revision %d"
msgstr ""

#: hgext/mq.py:1562
msgid "revision %d is not the parent of %d"
msgstr ""

#: hgext/mq.py:1588
msgid "-e is incompatible with import from -"
msgstr ""

#: hgext/mq.py:1593
msgid "patch %s does not exist"
msgstr "rettelse %s eksisterer ikke"

#: hgext/mq.py:1598
msgid "need --name to import a patch from -"
msgstr ""

#: hgext/mq.py:1616
msgid "adding %s to series file\n"
msgstr "tilføjer %s til series filen\n"

#: hgext/mq.py:1626
msgid ""
"remove patches from queue\n"
"\n"
"    The patches must not be applied, unless they are arguments to\n"
"    the --rev parameter. At least one patch or revision is required.\n"
"\n"
"    With --rev, mq will stop managing the named revisions (converting\n"
"    them to regular mercurial changesets). The qfinish command should be\n"
"    used as an alternative for qdel -r, as the latter option is deprecated.\n"
"\n"
"    With --keep, the patch files are preserved in the patch directory."
msgstr ""

#: hgext/mq.py:1642
msgid "print the patches already applied"
msgstr "udskriver rettelserne som allerede er anvendt"

#: hgext/mq.py:1653
msgid "print the patches not yet applied"
msgstr "udskriver rettelserne som ikke er anvendt endnu"

#: hgext/mq.py:1664
msgid ""
"import a patch\n"
"\n"
"    The patch is inserted into the series after the last applied patch.\n"
"    If no patches have been applied, qimport prepends the patch\n"
"    to the series.\n"
"\n"
"    The patch will have the same name as its source file unless you\n"
"    give it a new one with --name.\n"
"\n"
"    You can register an existing patch inside the patch directory\n"
"    with the --existing flag.\n"
"\n"
"    With --force, an existing patch of the same name will be overwritten.\n"
"\n"
"    An existing changeset may be placed under mq control with --rev\n"
"    (e.g. qimport --rev tip -n patch will place tip under mq control).\n"
"    With --git, patches imported with --rev will use the git diff\n"
"    format. See the diffs help topic for information on why this is\n"
"    important for preserving rename/copy information and permission "
"changes.\n"
"    "
msgstr ""

#: hgext/mq.py:1692
msgid ""
"init a new queue repository\n"
"\n"
"    The queue repository is unversioned by default. If -c is\n"
"    specified, qinit will create a separate nested repository\n"
"    for patches (qinit -c may also be run later to convert\n"
"    an unversioned patch repository into a versioned one).\n"
"    You can use qcommit to commit changes to this queue repository."
msgstr ""

#: hgext/mq.py:1718
msgid ""
"clone main and patch repository at same time\n"
"\n"
"    If source is local, destination will have no patches applied.  If\n"
"    source is remote, this command can not check if patches are\n"
"    applied in source, so cannot guarantee that patches are not\n"
"    applied in destination.  If you clone remote repository, be sure\n"
"    before that it has no patches applied.\n"
"\n"
"    Source patch repository is looked for in <src>/.hg/patches by\n"
"    default.  Use -p <url> to change.\n"
"\n"
"    The patch directory must be a nested mercurial repository, as\n"
"    would be created by qinit -c.\n"
"    "
msgstr ""

#: hgext/mq.py:1745
msgid "versioned patch repository not found (see qinit -c)"
msgstr "versionsstyret arkiv til rettelser blev ikke fundet (se qinit -c)"

#: hgext/mq.py:1762
msgid "cloning main repo\n"
msgstr "kloner hovedarkiv\n"

#: hgext/mq.py:1768
msgid "cloning patch repo\n"
msgstr "kloner rettelsesarkiv\n"

#: hgext/mq.py:1774
msgid "stripping applied patches from destination repo\n"
msgstr ""

#: hgext/mq.py:1777
msgid "updating destination repo\n"
msgstr ""

#: hgext/mq.py:1781
msgid "commit changes in the queue repository"
msgstr ""

#: hgext/mq.py:1788
msgid "print the entire series file"
msgstr "udskriver hele series filen"

#: hgext/mq.py:1793
msgid "print the name of the current patch"
msgstr "udskriver navnet på den nuværende rettelse"

#: hgext/mq.py:1804
msgid "print the name of the next patch"
msgstr "udskriver navnet på den næste rettelse"

#: hgext/mq.py:1808
msgid "All patches applied\n"
msgstr "Alle patches er anvendt\n"

#: hgext/mq.py:1813
msgid "print the name of the previous patch"
msgstr "udskriver navnet på den forgående rettelse"

#: hgext/mq.py:1817
msgid "Only one patch applied\n"
msgstr "Kun én patch anvendt\n"

#: hgext/mq.py:1833
msgid ""
"create a new patch\n"
"\n"
"    qnew creates a new patch on top of the currently-applied patch (if "
"any).\n"
"    It will refuse to run if there are any outstanding changes unless -f is\n"
"    specified, in which case the patch will be initialized with them. You\n"
"    may also use -I, -X, and/or a list of files after the patch name to add\n"
"    only changes to matching files to the new patch, leaving the rest as\n"
"    uncommitted modifications.\n"
"\n"
"    -u and -d can be used to set the (given) user and date, respectively.\n"
"    -U and -D set user to current user and date to current date.\n"
"\n"
"    -e, -m or -l set the patch header as well as the commit message. If "
"none\n"
"    is specified, the header is empty and the commit message is '[mq]: "
"PATCH'.\n"
"\n"
"    Use the --git option to keep the patch in the git extended diff\n"
"    format. Read the diffs help topic for more information on why this\n"
"    is important for preserving permission changes and copy/rename\n"
"    information.\n"
"    "
msgstr ""

#: hgext/mq.py:1867
msgid ""
"update the current patch\n"
"\n"
"    If any file patterns are provided, the refreshed patch will contain "
"only\n"
"    the modifications that match those patterns; the remaining "
"modifications\n"
"    will remain in the working directory.\n"
"\n"
"    If --short is specified, files currently included in the patch will\n"
"    be refreshed just like matched files and remain in the patch.\n"
"\n"
"    hg add/remove/copy/rename work as usual, though you might want to use\n"
"    git-style patches (--git or [diff] git=1) to track copies and renames.\n"
"    See the diffs help topic for more information on the git diff format.\n"
"    "
msgstr ""

#: hgext/mq.py:1887 hgext/mq.py:1933
msgid "option \"-e\" incompatible with \"-m\" or \"-l\""
msgstr ""

#: hgext/mq.py:1897
msgid ""
"diff of the current patch and subsequent modifications\n"
"\n"
"    Shows a diff which includes the current patch as well as any changes "
"which\n"
"    have been made in the working directory since the last refresh (thus\n"
"    showing what the current patch would become after a qrefresh).\n"
"\n"
"    Use 'hg diff' if you only want to see the changes made since the last\n"
"    qrefresh, or 'hg export qtip' if you want to see changes made by the\n"
"    current patch without including changes made since the qrefresh.\n"
"    "
msgstr ""

#: hgext/mq.py:1911
msgid ""
"fold the named patches into the current patch\n"
"\n"
"    Patches must not yet be applied. Each patch will be successively\n"
"    applied to the current patch in the order given. If all the\n"
"    patches apply successfully, the current patch will be refreshed\n"
"    with the new cumulative patch, and the folded patches will\n"
"    be deleted. With -k/--keep, the folded patch files will not\n"
"    be removed afterwards.\n"
"\n"
"    The header for each folded patch will be concatenated with\n"
"    the current patch header, separated by a line of '* * *'."
msgstr ""

#: hgext/mq.py:1926
msgid "qfold requires at least one patch name"
msgstr ""

#: hgext/mq.py:1928
msgid "No patches applied"
msgstr "Ingen rettelser anvendt"

#: hgext/mq.py:1941
msgid "Skipping already folded patch %s"
msgstr ""

#: hgext/mq.py:1943
msgid "qfold cannot fold already applied patch %s"
msgstr ""

#: hgext/mq.py:1954
msgid "Error folding patch %s"
msgstr ""

#: hgext/mq.py:1973
msgid "push or pop patches until named patch is at top of stack"
msgstr ""

#: hgext/mq.py:1984
msgid ""
"set or print guards for a patch\n"
"\n"
"    Guards control whether a patch can be pushed. A patch with no\n"
"    guards is always pushed. A patch with a positive guard (\"+foo\") is\n"
"    pushed only if the qselect command has activated it. A patch with\n"
"    a negative guard (\"-foo\") is never pushed if the qselect command\n"
"    has activated it.\n"
"\n"
"    With no arguments, print the currently active guards.\n"
"    With arguments, set guards for the named patch.\n"
"\n"
"    To set a negative guard \"-foo\" on topmost patch (\"--\" is needed so\n"
"    hg will not interpret \"-foo\" as an option):\n"
"      hg qguard -- -foo\n"
"\n"
"    To set guards on another patch:\n"
"      hg qguard other.patch +2.6.17 -stable\n"
"    "
msgstr ""

#: hgext/mq.py:2010
msgid "cannot mix -l/--list with options or arguments"
msgstr ""

#: hgext/mq.py:2021
msgid "no patch to work with"
msgstr ""

#: hgext/mq.py:2025
msgid "no patch named %s"
msgstr "ingen patch ved navn %s"

#: hgext/mq.py:2032
msgid "print the header of the topmost or specified patch"
msgstr ""

#: hgext/mq.py:2071
msgid ""
"push the next patch onto the stack\n"
"\n"
"    When --force is applied, all local changes in patched files will be "
"lost.\n"
"    "
msgstr ""

#: hgext/mq.py:2084
msgid "no saved queues found, please use -n\n"
msgstr ""

#: hgext/mq.py:2087
msgid "merging with queue at: %s\n"
msgstr ""

#: hgext/mq.py:2093
msgid ""
"pop the current patch off the stack\n"
"\n"
"    By default, pops off the top of the patch stack. If given a patch name,\n"
"    keeps popping off patches until the named patch is at the top of the "
"stack.\n"
"    "
msgstr ""

#: hgext/mq.py:2101
msgid "using patch queue: %s\n"
msgstr ""

#: hgext/mq.py:2111
msgid ""
"rename a patch\n"
"\n"
"    With one argument, renames the current patch to PATCH1.\n"
"    With two arguments, renames PATCH1 to PATCH2."
msgstr ""

#: hgext/mq.py:2134
msgid "%s already exists"
msgstr "%s eksisterer allerede"

#: hgext/mq.py:2137
msgid "A patch named %s already exists in the series file"
msgstr ""

#: hgext/mq.py:2171
msgid "restore the queue state saved by a rev"
msgstr ""

#: hgext/mq.py:2180
msgid "save current queue state"
msgstr ""

#: hgext/mq.py:2193
msgid "destination %s exists and is not a directory"
msgstr ""

#: hgext/mq.py:2196
msgid "destination %s exists, use -f to force"
msgstr ""

#: hgext/mq.py:2200
msgid "copy %s to %s\n"
msgstr ""

#: hgext/mq.py:2210
msgid ""
"strip a revision and all its descendants from the repository\n"
"\n"
"    If one of the working dir's parent revisions is stripped, the working\n"
"    directory will be updated to the parent of the stripped revision.\n"
"    "
msgstr ""

#: hgext/mq.py:2236
msgid ""
"set or print guarded patches to push\n"
"\n"
"    Use the qguard command to set or print guards on patch, then use\n"
"    qselect to tell mq which guards to use. A patch will be pushed if it\n"
"    has no guards or any positive guards match the currently selected "
"guard,\n"
"    but will not be pushed if any negative guards match the current guard.\n"
"    For example:\n"
"\n"
"        qguard foo.patch -stable    (negative guard)\n"
"        qguard bar.patch +stable    (positive guard)\n"
"        qselect stable\n"
"\n"
"    This activates the \"stable\" guard. mq will skip foo.patch (because\n"
"    it has a negative match) but push bar.patch (because it\n"
"    has a positive match).\n"
"\n"
"    With no arguments, prints the currently active guards.\n"
"    With one argument, sets the active guard.\n"
"\n"
"    Use -n/--none to deactivate guards (no other arguments needed).\n"
"    When no guards are active, patches with positive guards are skipped\n"
"    and patches with negative guards are pushed.\n"
"\n"
"    qselect can change the guards on applied patches. It does not pop\n"
"    guarded patches by default. Use --pop to pop back to the last applied\n"
"    patch that is not guarded. Use --reapply (which implies --pop) to push\n"
"    back to the current patch afterwards, but skip guarded patches.\n"
"\n"
"    Use -s/--series to print a list of all guards in the series file (no\n"
"    other arguments needed). Use -v for more information."
msgstr ""

#: hgext/mq.py:2276
msgid "guards deactivated\n"
msgstr ""

#: hgext/mq.py:2282
msgid "number of unguarded, unapplied patches has changed from %d to %d\n"
msgstr ""

#: hgext/mq.py:2286
msgid "number of guarded, applied patches has changed from %d to %d\n"
msgstr ""

#: hgext/mq.py:2303
msgid "guards in series file:\n"
msgstr ""

#: hgext/mq.py:2308
msgid "no guards in series file\n"
msgstr ""

#: hgext/mq.py:2311
msgid "active guards:\n"
msgstr ""

#: hgext/mq.py:2315
msgid "no active guards\n"
msgstr ""

#: hgext/mq.py:2322
msgid "popping guarded patches\n"
msgstr ""

#: hgext/mq.py:2332
msgid "reapplying unguarded patches\n"
msgstr ""

#: hgext/mq.py:2338
msgid ""
"move applied patches into repository history\n"
"\n"
"    Finishes the specified revisions (corresponding to applied patches) by\n"
"    moving them out of mq control into regular repository history.\n"
"\n"
"    Accepts a revision range or the --applied option. If --applied is\n"
"    specified, all applied mq revisions are removed from mq control.\n"
"    Otherwise, the given revisions must be at the base of the stack of\n"
"    applied patches.\n"
"\n"
"    This can be especially useful if your changes have been applied to an\n"
"    upstream repository, or if you are about to push your changes to "
"upstream.\n"
"    "
msgstr ""

#: hgext/mq.py:2352
msgid "no revisions specified"
msgstr ""

#: hgext/mq.py:2380
msgid "cannot commit over an applied mq patch"
msgstr ""

#: hgext/mq.py:2387
msgid "source has mq patches applied"
msgstr ""

#: hgext/mq.py:2403 hgext/mq.py:2427
msgid "mq status file refers to unknown node %s\n"
msgstr ""

#: hgext/mq.py:2412
msgid "Tag %s overrides mq patch of the same name\n"
msgstr ""

#: hgext/mq.py:2453
msgid "cannot import over an applied patch"
msgstr ""

#: hgext/mq.py:2460
msgid "print first line of patch header"
msgstr ""

#: hgext/mq.py:2463
msgid "hg qapplied [-s] [PATCH]"
msgstr ""

#: hgext/mq.py:2466 mercurial/commands.py:3119
msgid "use pull protocol to copy metadata"
msgstr ""

#: hgext/mq.py:2467
msgid "do not update the new working directories"
msgstr ""

#: hgext/mq.py:2469 mercurial/commands.py:3121
msgid "use uncompressed transfer (fast over LAN)"
msgstr ""

#: hgext/mq.py:2470
msgid "location of source patch repo"
msgstr ""

#: hgext/mq.py:2472
msgid "hg qclone [OPTION]... SOURCE [DEST]"
msgstr ""

#: hgext/mq.py:2476
msgid "hg qcommit [OPTION]... [FILE]..."
msgstr ""

#: hgext/mq.py:2480
msgid "hg qdiff [OPTION]... [FILE]..."
msgstr ""

#: hgext/mq.py:2483
msgid "keep patch file"
msgstr ""

#: hgext/mq.py:2484
msgid "stop managing a revision"
msgstr ""

#: hgext/mq.py:2485
msgid "hg qdelete [-k] [-r REV]... [PATCH]..."
msgstr ""

#: hgext/mq.py:2488
msgid "edit patch header"
msgstr ""

#: hgext/mq.py:2489
msgid "keep folded patch files"
msgstr ""

#: hgext/mq.py:2491
msgid "hg qfold [-e] [-k] [-m TEXT] [-l FILE] PATCH..."
msgstr ""

#: hgext/mq.py:2494
msgid "overwrite any local changes"
msgstr ""

#: hgext/mq.py:2495
msgid "hg qgoto [OPTION]... PATCH"
msgstr ""

#: hgext/mq.py:2498
msgid "list all patches and guards"
msgstr ""

#: hgext/mq.py:2499
msgid "drop all guards"
msgstr ""

#: hgext/mq.py:2500
msgid "hg qguard [-l] [-n] [PATCH] [+GUARD]... [-GUARD]..."
msgstr ""

#: hgext/mq.py:2501
msgid "hg qheader [PATCH]"
msgstr ""

#: hgext/mq.py:2504
msgid "import file in patch dir"
msgstr ""

#: hgext/mq.py:2505
msgid "patch file name"
msgstr "patch navn"

#: hgext/mq.py:2506
msgid "overwrite existing files"
msgstr ""

#: hgext/mq.py:2507
msgid "place existing revisions under mq control"
msgstr ""

#: hgext/mq.py:2508 hgext/mq.py:2518 hgext/mq.py:2544 hgext/patchbomb.py:459
#: mercurial/commands.py:3020
msgid "use git extended diff format"
msgstr ""

#: hgext/mq.py:2509
msgid "hg qimport [-e] [-n NAME] [-f] [-g] [-r REV]... FILE..."
msgstr ""

#: hgext/mq.py:2512
msgid "create queue repository"
msgstr "opret kø-repository"

#: hgext/mq.py:2513
msgid "hg qinit [-c]"
msgstr ""

#: hgext/mq.py:2517
msgid "import uncommitted changes into patch"
msgstr ""

#: hgext/mq.py:2519
msgid "add \"From: <current user>\" to patch"
msgstr ""

#: hgext/mq.py:2520
msgid "add \"From: <given user>\" to patch"
msgstr ""

#: hgext/mq.py:2521
msgid "add \"Date: <current date>\" to patch"
msgstr ""

#: hgext/mq.py:2522
msgid "add \"Date: <given date>\" to patch"
msgstr ""

#: hgext/mq.py:2524
msgid "hg qnew [-e] [-m TEXT] [-l FILE] [-f] PATCH [FILE]..."
msgstr ""

#: hgext/mq.py:2525
msgid "hg qnext [-s]"
msgstr ""

#: hgext/mq.py:2526
msgid "hg qprev [-s]"
msgstr ""

#: hgext/mq.py:2529
msgid "pop all patches"
msgstr ""

#: hgext/mq.py:2530
msgid "queue name to pop"
msgstr ""

#: hgext/mq.py:2531
msgid "forget any local changes"
msgstr ""

#: hgext/mq.py:2532
msgid "hg qpop [-a] [-n NAME] [-f] [PATCH | INDEX]"
msgstr ""

#: hgext/mq.py:2535
msgid "apply if the patch has rejects"
msgstr ""

#: hgext/mq.py:2536
msgid "list patch name in commit text"
msgstr ""

#: hgext/mq.py:2537
msgid "apply all patches"
msgstr ""

#: hgext/mq.py:2538
msgid "merge from another queue"
msgstr ""

#: hgext/mq.py:2539
msgid "merge queue name"
msgstr ""

#: hgext/mq.py:2540
msgid "hg qpush [-f] [-l] [-a] [-m] [-n NAME] [PATCH | INDEX]"
msgstr ""

#: hgext/mq.py:2545
msgid "refresh only files already in the patch and specified files"
msgstr ""

#: hgext/mq.py:2546
msgid "add/update \"From: <current user>\" in patch"
msgstr ""

#: hgext/mq.py:2547
msgid "add/update \"From: <given user>\" in patch"
msgstr ""

#: hgext/mq.py:2548
msgid "update \"Date: <current date>\" in patch (if present)"
msgstr ""

#: hgext/mq.py:2549
msgid "update \"Date: <given date>\" in patch (if present)"
msgstr ""

#: hgext/mq.py:2551
msgid "hg qrefresh [-I] [-X] [-e] [-m TEXT] [-l FILE] [-s] [FILE]..."
msgstr ""

#: hgext/mq.py:2553
msgid "hg qrename PATCH1 [PATCH2]"
msgstr ""

#: hgext/mq.py:2556
msgid "delete save entry"
msgstr ""

#: hgext/mq.py:2557
msgid "update queue working dir"
msgstr ""

#: hgext/mq.py:2558
msgid "hg qrestore [-d] [-u] REV"
msgstr ""

#: hgext/mq.py:2561
msgid "copy patch directory"
msgstr ""

#: hgext/mq.py:2562
msgid "copy directory name"
msgstr ""

#: hgext/mq.py:2563
msgid "clear queue status file"
msgstr ""

#: hgext/mq.py:2564
msgid "force copy"
msgstr ""

#: hgext/mq.py:2565
msgid "hg qsave [-m TEXT] [-l FILE] [-c] [-n NAME] [-e] [-f]"
msgstr ""

#: hgext/mq.py:2568
msgid "disable all guards"
msgstr ""

#: hgext/mq.py:2569
msgid "list all guards in series file"
msgstr ""

#: hgext/mq.py:2570
msgid "pop to before first guarded applied patch"
msgstr ""

#: hgext/mq.py:2571
msgid "pop, then reapply patches"
msgstr ""

#: hgext/mq.py:2572
msgid "hg qselect [OPTION]... [GUARD]..."
msgstr ""

#: hgext/mq.py:2575
msgid "print patches not in series"
msgstr ""

#: hgext/mq.py:2577
msgid "hg qseries [-ms]"
msgstr ""

#: hgext/mq.py:2580
msgid "force removal with local changes"
msgstr ""

#: hgext/mq.py:2581
msgid "bundle unrelated changesets"
msgstr ""

#: hgext/mq.py:2582
msgid "no backups"
msgstr ""

#: hgext/mq.py:2583
msgid "hg strip [-f] [-b] [-n] REV"
msgstr ""

#: hgext/mq.py:2584
msgid "hg qtop [-s]"
msgstr ""

#: hgext/mq.py:2585
msgid "hg qunapplied [-s] [PATCH]"
msgstr ""

#: hgext/mq.py:2588
msgid "finish all applied changesets"
msgstr ""

#: hgext/mq.py:2589
msgid "hg qfinish [-a] [REV...]"
msgstr ""

#: hgext/notify.py:8
msgid ""
"hook extension to email notifications on commits/pushes\n"
"\n"
"Subscriptions can be managed through hgrc. Default mode is to print\n"
"messages to stdout, for testing and configuring.\n"
"\n"
"To use, configure notify extension and enable in hgrc like this:\n"
"\n"
"   [extensions]\n"
"   hgext.notify =\n"
"\n"
"   [hooks]\n"
"   # one email for each incoming changeset\n"
"   incoming.notify = python:hgext.notify.hook\n"
"   # batch emails when many changesets incoming at one time\n"
"   changegroup.notify = python:hgext.notify.hook\n"
"\n"
"   [notify]\n"
"   # config items go in here\n"
"\n"
" config items:\n"
"\n"
" REQUIRED:\n"
"   config = /path/to/file # file containing subscriptions\n"
"\n"
" OPTIONAL:\n"
"   test = True            # print messages to stdout for testing\n"
"   strip = 3              # number of slashes to strip for url paths\n"
"   domain = example.com   # domain to use if committer missing domain\n"
"   style = ...            # style file to use when formatting email\n"
"   template = ...         # template to use when formatting email\n"
"   incoming = ...         # template to use when run as incoming hook\n"
"   changegroup = ...      # template when run as changegroup hook\n"
"   maxdiff = 300          # max lines of diffs to include (0=none, -1=all)\n"
"   maxsubject = 67        # truncate subject line longer than this\n"
"   diffstat = True        # add a diffstat before the diff content\n"
"   sources = serve        # notify if source of incoming changes in this "
"list\n"
"                          # (serve == ssh or http, push, pull, bundle)\n"
"   [email]\n"
"   from = user@host.com   # email address to send as if none given\n"
"   [web]\n"
"   baseurl = http://hgserver/... # root of hg web site for browsing commits\n"
"\n"
" notify config file has same format as regular hgrc. it has two\n"
" sections so you can express subscriptions in whatever way is handier\n"
" for you.\n"
"\n"
"   [usersubs]\n"
"   # key is subscriber email, value is \",\"-separated list of glob "
"patterns\n"
"   user@host = pattern\n"
"\n"
"   [reposubs]\n"
"   # key is glob pattern, value is \",\"-separated list of subscriber "
"emails\n"
"   pattern = user@host\n"
"\n"
" glob patterns are matched against path to repo root.\n"
"\n"
" if you like, you can put notify config file in repo that users can\n"
" push changes to, they can manage their own subscriptions."
msgstr ""

#: hgext/notify.py:97
msgid "email notification class."
msgstr ""

#: hgext/notify.py:124
msgid "strip leading slashes from local path, turn into web-safe path."
msgstr ""

#: hgext/notify.py:137
msgid "try to clean up email addresses."
msgstr ""

#: hgext/notify.py:149
msgid "return list of email addresses of subscribers to this repo."
msgstr ""

#: hgext/notify.py:168
msgid "format one changeset."
msgstr ""

#: hgext/notify.py:176
msgid "true if incoming changes from this source should be skipped."
msgstr ""

#: hgext/notify.py:181
msgid "send message."
msgstr ""

#: hgext/notify.py:194
msgid "try to make subject line exist and be useful."
msgstr ""

#: hgext/notify.py:198
msgid "%s: %d new changesets"
msgstr ""

#: hgext/notify.py:210
msgid "try to make message have proper sender."
msgstr ""

#: hgext/notify.py:236
msgid "notify: sending %d subscribers %d changes\n"
msgstr ""

#: hgext/notify.py:256
msgid ""
"\n"
"diffs (truncated from %d to %d lines):\n"
"\n"
msgstr ""

#: hgext/notify.py:260
msgid ""
"\n"
"diffs (%d lines):\n"
"\n"
msgstr ""

#: hgext/notify.py:264
msgid ""
"send email notifications to interested subscribers.\n"
"\n"
"    if used as changegroup hook, send one email for all changesets in\n"
"    changegroup. else send one email per changeset."
msgstr ""

#: hgext/notify.py:270
msgid "notify: no subscribers to repo %s\n"
msgstr ""

#: hgext/notify.py:273
msgid "notify: changes have source \"%s\" - skipping\n"
msgstr ""

#: hgext/pager.py:15
msgid ""
"browse command output with external pager\n"
"\n"
"To set the pager that should be used, set the application variable:\n"
"\n"
"  [pager]\n"
"  pager = LESS='FSRX' less\n"
"\n"
"If no pager is set, the pager extensions uses the environment\n"
"variable $PAGER. If neither pager.pager, nor $PAGER is set, no pager\n"
"is used.\n"
"\n"
"If you notice \"BROKEN PIPE\" error messages, you can disable them\n"
"by setting:\n"
"\n"
"  [pager]\n"
"  quiet = True\n"
"\n"
"You can disable the pager for certain commands by adding them to the\n"
"pager.ignore list:\n"
"\n"
"  [pager]\n"
"  ignore = version, help, update\n"
"\n"
"You can also enable the pager only for certain commands using pager.attend:\n"
"\n"
"  [pager]\n"
"  attend = log\n"
"\n"
"If pager.attend is present, pager.ignore will be ignored.\n"
"\n"
"To ignore global commands like \"hg version\" or \"hg help\", you have to "
"specify\n"
"them in the global .hgrc\n"
msgstr ""

#: hgext/parentrevspec.py:7
msgid ""
"use suffixes to refer to ancestor revisions\n"
"\n"
"This extension allows you to use git-style suffixes to refer to\n"
"the ancestors of a specific revision.\n"
"\n"
"For example, if you can refer to a revision as \"foo\", then:\n"
"\n"
"- foo^N = Nth parent of foo:\n"
"  foo^0 = foo\n"
"  foo^1 = first parent of foo\n"
"  foo^2 = second parent of foo\n"
"  foo^  = foo^1\n"
"\n"
"- foo~N = Nth first grandparent of foo\n"
"  foo~0 = foo\n"
"  foo~1 = foo^1 = foo^ = first parent of foo\n"
"  foo~2 = foo^1^1 = foo^^ = first parent of first parent of foo\n"
msgstr ""

#: hgext/patchbomb.py:1
msgid ""
"sending Mercurial changesets as a series of patch emails\n"
"\n"
"The series is started off with a \"[PATCH 0 of N]\" introduction,\n"
"which describes the series as a whole.\n"
"\n"
"Each patch email has a Subject line of \"[PATCH M of N] ...\", using\n"
"the first line of the changeset description as the subject text.\n"
"The message contains two or three body parts:\n"
"\n"
"  The remainder of the changeset description.\n"
"\n"
"  [Optional] The result of running diffstat on the patch.\n"
"\n"
"  The patch itself, as generated by \"hg export\".\n"
"\n"
"Each message refers to all of its predecessors using the In-Reply-To\n"
"and References headers, so they will show up as a sequence in\n"
"threaded mail and news readers, and in mail archives.\n"
"\n"
"For each changeset, you will be prompted with a diffstat summary and\n"
"the changeset summary, so you can be sure you are sending the right "
"changes.\n"
"\n"
"To enable this extension:\n"
"\n"
"  [extensions]\n"
"  hgext.patchbomb =\n"
"\n"
"To configure other defaults, add a section like this to your hgrc file:\n"
"\n"
"  [email]\n"
"  from = My Name <my@email>\n"
"  to = recipient1, recipient2, ...\n"
"  cc = cc1, cc2, ...\n"
"  bcc = bcc1, bcc2, ...\n"
"\n"
"Then you can use the \"hg email\" command to mail a series of changesets\n"
"as a patchbomb.\n"
"\n"
"To avoid sending patches prematurely, it is a good idea to first run\n"
"the \"email\" command with the \"-n\" option (test only).  You will be\n"
"prompted for an email recipient address, a subject an an introductory\n"
"message describing the patches of your patchbomb.  Then when all is\n"
"done, patchbomb messages are displayed. If PAGER environment variable\n"
"is set, your pager will be fired up once for each patchbomb message, so\n"
"you can verify everything is alright.\n"
"\n"
"The \"-m\" (mbox) option is also very useful.  Instead of previewing\n"
"each patchbomb message in a pager or sending the messages directly,\n"
"it will create a UNIX mailbox file with the patch emails.  This\n"
"mailbox file can be previewed with any mail user agent which supports\n"
"UNIX mbox files, i.e. with mutt:\n"
"\n"
"  % mutt -R -f mbox\n"
"\n"
"When you are previewing the patchbomb messages, you can use `formail'\n"
"(a utility that is commonly installed as part of the procmail package),\n"
"to send each message out:\n"
"\n"
"  % formail -s sendmail -bm -t < mbox\n"
"\n"
"That should be all. Now your patchbomb is on its way out."
msgstr ""

#: hgext/patchbomb.py:84
msgid "Please enter a valid value.\n"
msgstr ""

#: hgext/patchbomb.py:91
msgid "does the diffstat above look okay? "
msgstr ""

#: hgext/patchbomb.py:93
msgid "diffstat rejected"
msgstr "diffstat afvist"

#: hgext/patchbomb.py:167
msgid ""
"send changesets by email\n"
"\n"
"    By default, diffs are sent in the format generated by hg export,\n"
"    one per message.  The series starts with a \"[PATCH 0 of N]\"\n"
"    introduction, which describes the series as a whole.\n"
"\n"
"    Each patch email has a Subject line of \"[PATCH M of N] ...\", using\n"
"    the first line of the changeset description as the subject text.\n"
"    The message contains two or three body parts.  First, the rest of\n"
"    the changeset description.  Next, (optionally) if the diffstat\n"
"    program is installed, the result of running diffstat on the patch.\n"
"    Finally, the patch itself, as generated by \"hg export\".\n"
"\n"
"    With --outgoing, emails will be generated for patches not\n"
"    found in the destination repository (or only those which are\n"
"    ancestors of the specified revisions if any are provided)\n"
"\n"
"    With --bundle, changesets are selected as for --outgoing,\n"
"    but a single email containing a binary Mercurial bundle as an\n"
"    attachment will be sent.\n"
"\n"
"    Examples:\n"
"\n"
"    hg email -r 3000          # send patch 3000 only\n"
"    hg email -r 3000 -r 3001  # send patches 3000 and 3001\n"
"    hg email -r 3000:3005     # send patches 3000 through 3005\n"
"    hg email 3000             # send patch 3000 (deprecated)\n"
"\n"
"    hg email -o               # send all patches not in default\n"
"    hg email -o DEST          # send all patches not in DEST\n"
"    hg email -o -r 3000       # send all ancestors of 3000 not in default\n"
"    hg email -o -r 3000 DEST  # send all ancestors of 3000 not in DEST\n"
"\n"
"    hg email -b               # send bundle of all patches not in default\n"
"    hg email -b DEST          # send bundle of all patches not in DEST\n"
"    hg email -b -r 3000       # bundle of all ancestors of 3000 not in "
"default\n"
"    hg email -b -r 3000 DEST  # bundle of all ancestors of 3000 not in DEST\n"
"\n"
"    Before using this command, you will need to enable email in your hgrc.\n"
"    See the [email] section in hgrc(5) for details.\n"
"    "
msgstr ""

#: hgext/patchbomb.py:212
msgid "Return the revisions present locally but not in dest"
msgstr ""

#: hgext/patchbomb.py:251
msgid "specify at least one changeset with -r or -o"
msgstr "angiv mindst en ændring med -r eller -o"

#: hgext/patchbomb.py:255
msgid "--outgoing mode always on with --bundle; do not re-specify --outgoing"
msgstr ""

#: hgext/patchbomb.py:260
msgid "too many destinations"
msgstr "for mange destinationer"

#: hgext/patchbomb.py:266
msgid "use only one form to specify the revision"
msgstr ""

#: hgext/patchbomb.py:287
msgid ""
"\n"
"Write the introductory message for the patch series.\n"
"\n"
msgstr ""

#: hgext/patchbomb.py:296
msgid ""
"This patch series consists of %d patches.\n"
"\n"
msgstr ""

#: hgext/patchbomb.py:319
msgid "Final summary:\n"
msgstr ""

#: hgext/patchbomb.py:403
msgid "Displaying "
msgstr ""

#: hgext/patchbomb.py:419
msgid "Writing "
msgstr ""

#: hgext/patchbomb.py:430
msgid "Sending "
msgstr ""

#: hgext/patchbomb.py:439
msgid "send patches as attachments"
msgstr ""

#: hgext/patchbomb.py:440
msgid "send patches as inline attachments"
msgstr ""

#: hgext/patchbomb.py:441
msgid "email addresses of blind copy recipients"
msgstr ""

#: hgext/patchbomb.py:442
msgid "email addresses of copy recipients"
msgstr ""

#: hgext/patchbomb.py:443
msgid "add diffstat output to messages"
msgstr ""

#: hgext/patchbomb.py:444
msgid "use the given date as the sending date"
msgstr ""

#: hgext/patchbomb.py:445
msgid "use the given file as the series description"
msgstr ""

#: hgext/patchbomb.py:446
msgid "email address of sender"
msgstr ""

#: hgext/patchbomb.py:447
msgid "print messages that would be sent"
msgstr ""

#: hgext/patchbomb.py:449
msgid "write messages to mbox file instead of sending them"
msgstr ""

#: hgext/patchbomb.py:451
msgid "subject of first message (intro or single patch)"
msgstr ""

#: hgext/patchbomb.py:452
msgid "email addresses of recipients"
msgstr ""

#: hgext/patchbomb.py:460
msgid "omit hg patch header"
msgstr ""

#: hgext/patchbomb.py:462
msgid "send changes not found in the target repository"
msgstr ""

#: hgext/patchbomb.py:464
msgid "send changes not in target as a binary bundle"
msgstr ""

#: hgext/patchbomb.py:465
msgid "a revision to send"
msgstr ""

#: hgext/patchbomb.py:467
msgid "run even when remote repository is unrelated (with -b)"
msgstr ""

#: hgext/patchbomb.py:469
msgid "a base changeset to specify instead of a destination (with -b)"
msgstr ""

#: hgext/patchbomb.py:471
msgid "send an introduction email for a single patch"
msgstr ""

#: hgext/patchbomb.py:473
msgid "hg email [OPTION]... [DEST]..."
msgstr ""

#: hgext/purge.py:35
msgid ""
"removes files not tracked by Mercurial\n"
"\n"
"    Delete files not known to Mercurial. This is useful to test local and\n"
"    uncommitted changes in an otherwise-clean source tree.\n"
"\n"
"    This means that purge will delete:\n"
"     - Unknown files: files marked with \"?\" by \"hg status\"\n"
"     - Empty directories: in fact Mercurial ignores directories unless they\n"
"       contain files under source control managment\n"
"    But it will leave untouched:\n"
"     - Modified and unmodified tracked files\n"
"     - Ignored files (unless --all is specified)\n"
"     - New files added to the repository (with \"hg add\")\n"
"\n"
"    If directories are given on the command line, only files in these\n"
"    directories are considered.\n"
"\n"
"    Be careful with purge, as you could irreversibly delete some files you\n"
"    forgot to add to the repository. If you only want to print the list of\n"
"    files that this program would delete, use the --print option.\n"
"    "
msgstr ""

#: hgext/purge.py:67
msgid "%s cannot be removed"
msgstr ""

#: hgext/purge.py:70 mercurial/simplemerge.py:418
msgid "warning: %s\n"
msgstr ""

#: hgext/purge.py:80
msgid "Removing file %s\n"
msgstr ""

#: hgext/purge.py:85
msgid "Removing directory %s\n"
msgstr ""

#: hgext/purge.py:91
msgid "abort if an error occurs"
msgstr ""

#: hgext/purge.py:92
msgid "purge ignored files too"
msgstr ""

#: hgext/purge.py:93
msgid "print the file names instead of deleting them"
msgstr ""

#: hgext/purge.py:94
msgid "end filenames with NUL, for use with xargs (implies -p)"
msgstr ""

#: hgext/purge.py:97
msgid "hg purge [OPTION]... [DIR]..."
msgstr ""

#: hgext/rebase.py:8
msgid ""
"move sets of revisions to a different ancestor\n"
"\n"
"This extension lets you rebase changesets in an existing Mercurial "
"repository.\n"
"\n"
"For more information:\n"
"http://www.selenic.com/mercurial/wiki/index.cgi/RebaseProject\n"
msgstr ""

#: hgext/rebase.py:24
msgid "return the correct ancestor"
msgstr ""

#: hgext/rebase.py:37
msgid "first revision, do not change ancestor\n"
msgstr ""

#: hgext/rebase.py:42
msgid ""
"move changeset (and descendants) to a different branch\n"
"\n"
"    Rebase uses repeated merging to graft changesets from one part of "
"history\n"
"    onto another. This can be useful for linearizing local changes relative "
"to\n"
"    a master development tree.\n"
"\n"
"    If a rebase is interrupted to manually resolve a merge, it can be "
"continued\n"
"    with --continue or aborted with --abort.\n"
"    "
msgstr ""

#: hgext/rebase.py:71
msgid "cannot use both keepbranches and extrafn"
msgstr ""

#: hgext/rebase.py:78
msgid "cannot use both abort and continue"
msgstr ""

#: hgext/rebase.py:81
msgid "cannot use collapse with continue or abort"
msgstr ""

#: hgext/rebase.py:85
msgid "abort and continue do not allow specifying revisions"
msgstr ""

#: hgext/rebase.py:93
msgid "cannot specify both a revision and a base"
msgstr ""

#: hgext/rebase.py:100
msgid "nothing to rebase\n"
msgstr ""

#: hgext/rebase.py:113
msgid "rebase merging completed\n"
msgstr ""

#: hgext/rebase.py:128
msgid "warning: new changesets detected on source branch, not stripping\n"
msgstr ""

#: hgext/rebase.py:134
msgid "rebase completed\n"
msgstr ""

#: hgext/rebase.py:138
msgid "%d revisions have been skipped\n"
msgstr ""

#: hgext/rebase.py:144
msgid ""
"Skip commit if collapsing has been required and rev is not the last\n"
"    revision, commit otherwise\n"
"    "
msgstr ""

#: hgext/rebase.py:147
msgid " set parents\n"
msgstr ""

#: hgext/rebase.py:183
msgid "Rebase a single revision"
msgstr ""

#: hgext/rebase.py:184
msgid "rebasing %d:%s\n"
msgstr ""

#: hgext/rebase.py:188
msgid " future parents are %d and %d\n"
msgstr ""

#: hgext/rebase.py:195
msgid " update to %d:%s\n"
msgstr " opdater til %d:%s\n"

#: hgext/rebase.py:198
msgid " already in target\n"
msgstr ""

#: hgext/rebase.py:200
msgid " merge against %d:%s\n"
msgstr ""

#: hgext/rebase.py:205
msgid "fix unresolved conflicts with hg resolve then run hg rebase --continue"
msgstr ""

#: hgext/rebase.py:208
msgid "resuming interrupted rebase\n"
msgstr ""

#: hgext/rebase.py:219
msgid "no changes, revision %d skipped\n"
msgstr ""

#: hgext/rebase.py:220
msgid "next revision set to %s\n"
msgstr ""

#: hgext/rebase.py:225
msgid "Return the new parent relationship of the revision that will be rebased"
msgstr ""

#: hgext/rebase.py:248
msgid "cannot use revision %d as base, result would have 3 parents"
msgstr ""

#: hgext/rebase.py:254
msgid "Update rebased mq patches - finalize and then import them"
msgstr ""

#: hgext/rebase.py:258
msgid "revision %d is an mq patch (%s), finalize it.\n"
msgstr ""

#: hgext/rebase.py:271
msgid "import mq patch %d (%s)\n"
msgstr ""

#: hgext/rebase.py:278
msgid "Store the current status to allow recovery"
msgstr ""

#: hgext/rebase.py:289
msgid "rebase status stored\n"
msgstr ""

#: hgext/rebase.py:292
msgid "Remove the status files"
msgstr ""

#: hgext/rebase.py:297
msgid "Restore a previously stored status"
msgstr ""

#: hgext/rebase.py:316
msgid "rebase status resumed\n"
msgstr ""

#: hgext/rebase.py:321
msgid "no rebase in progress"
msgstr ""

#: hgext/rebase.py:324
msgid "Restore the repository to its original state"
msgstr ""

#: hgext/rebase.py:326
msgid "warning: new changesets detected on target branch, not stripping\n"
msgstr ""

#: hgext/rebase.py:336
msgid "rebase aborted\n"
msgstr ""

#: hgext/rebase.py:339
msgid "Define which revisions are going to be rebased and where"
msgstr ""

#: hgext/rebase.py:350
msgid "cannot rebase onto an applied mq patch"
msgstr ""

#: hgext/rebase.py:356
msgid "cannot rebase an ancestor"
msgstr ""

#: hgext/rebase.py:358
msgid "cannot rebase a descendant"
msgstr ""

#: hgext/rebase.py:367
msgid "already working on current\n"
msgstr ""

#: hgext/rebase.py:372
msgid "already working on the current branch\n"
msgstr ""

#: hgext/rebase.py:380
msgid "rebase onto %d starting from %d\n"
msgstr ""

#: hgext/rebase.py:392
msgid "unable to collapse, there is more than one external parent"
msgstr ""

#: hgext/rebase.py:400
msgid "Call rebase after pull if the latter has been invoked with --rebase"
msgstr ""

#: hgext/rebase.py:403
msgid "--update and --rebase are not compatible"
msgstr ""

#: hgext/rebase.py:415
msgid "Replace pull with a decorator to provide --rebase option"
msgstr ""

#: hgext/rebase.py:418
msgid "rebase working directory to branch head"
msgstr ""

#: hgext/rebase.py:425
msgid "keep original revisions"
msgstr ""

#: hgext/rebase.py:426
msgid "keep original branches"
msgstr ""

#: hgext/rebase.py:427
msgid "rebase from a given revision"
msgstr ""

#: hgext/rebase.py:428
msgid "rebase from the base of a given revision"
msgstr ""

#: hgext/rebase.py:429
msgid "rebase onto a given revision"
msgstr ""

#: hgext/rebase.py:430
msgid "collapse the rebased revisions"
msgstr ""

#: hgext/rebase.py:431
msgid "continue an interrupted rebase"
msgstr ""

#: hgext/rebase.py:432
msgid "abort an interrupted rebase"
msgstr ""

#: hgext/rebase.py:434
msgid ""
"hg rebase [-s rev | -b rev] [-d rev] [--collapse] | [-c] | [-a] | [--keep]"
msgstr ""

#: hgext/record.py:8
msgid "interactive change selection during commit or qrefresh"
msgstr ""

#: hgext/record.py:18
msgid ""
"like patch.iterhunks, but yield different events\n"
"\n"
"    - ('file',    [header_lines + fromfile + tofile])\n"
"    - ('context', [context_lines])\n"
"    - ('hunk',    [hunk_lines])\n"
"    - ('range',   (-start,len, +start,len, diffp))\n"
"    "
msgstr ""

#: hgext/record.py:28
msgid "scan lr while predicate holds"
msgstr ""

#: hgext/record.py:69
msgid ""
"patch header\n"
"\n"
"    XXX shoudn't we move this to mercurial/patch.py ?\n"
"    "
msgstr ""

#: hgext/record.py:90
msgid "this modifies a binary file (all or nothing)\n"
msgstr ""

#: hgext/record.py:95
msgid "this is a binary file\n"
msgstr ""

#: hgext/record.py:98
msgid "%d hunks, %d lines changed\n"
msgstr ""

#: hgext/record.py:130
msgid "hunk -> (n+,n-)"
msgstr ""

#: hgext/record.py:136
msgid ""
"patch hunk\n"
"\n"
"    XXX shouldn't we merge this with patch.hunk ?\n"
"    "
msgstr ""

#: hgext/record.py:176
msgid "patch -> [] of hunks "
msgstr ""

#: hgext/record.py:178
msgid "patch parsing state machine"
msgstr ""

#: hgext/record.py:251
msgid "Interactively filter patch chunks into applied-only chunks"
msgstr ""

#: hgext/record.py:256
msgid ""
"fetch next portion from chunks until a 'header' is seen\n"
"        NB: header == new-file mark\n"
"        "
msgstr ""

#: hgext/record.py:271
msgid ""
"prompt query, and process base inputs\n"
"\n"
"        - y/n for the rest of file\n"
"        - y/n for the rest\n"
"        - ? (help)\n"
"        - q (quit)\n"
"\n"
"        else, input is returned to the caller.\n"
"        "
msgstr ""

#: hgext/record.py:285
msgid "[Ynsfdaq?]"
msgstr ""

#: hgext/record.py:287 hgext/record.py:320 hgext/record.py:332
#: mercurial/filemerge.py:208
msgid "y"
msgstr ""

#: hgext/record.py:288
msgid "?"
msgstr ""

#: hgext/record.py:290
msgid "y - record this change"
msgstr ""

#: hgext/record.py:294
msgid "s"
msgstr ""

#: hgext/record.py:296
msgid "f"
msgstr ""

#: hgext/record.py:298 mercurial/merge.py:221
msgid "d"
msgstr ""

#: hgext/record.py:300
msgid "a"
msgstr ""

#: hgext/record.py:302
msgid "q"
msgstr ""

#: hgext/record.py:303
msgid "user quit"
msgstr ""

#: hgext/record.py:318
msgid "examine changes to %s?"
msgstr ""

#: hgext/record.py:319
msgid " and "
msgstr ""

#: hgext/record.py:330
msgid "record this change to %r?"
msgstr ""

#: hgext/record.py:343
msgid ""
"interactively select changes to commit\n"
"\n"
"    If a list of files is omitted, all changes reported by \"hg status\"\n"
"    will be candidates for recording.\n"
"\n"
"    See 'hg help dates' for a list of formats valid for -d/--date.\n"
"\n"
"    You will be prompted for whether to record changes to each\n"
"    modified file, and for files with multiple changes, for each\n"
"    change to use.  For each query, the following responses are\n"
"    possible:\n"
"\n"
"    y - record this change\n"
"    n - skip this change\n"
"\n"
"    s - skip remaining changes to this file\n"
"    f - record remaining changes to this file\n"
"\n"
"    d - done, skip remaining changes and files\n"
"    a - record all changes to all remaining files\n"
"    q - quit, recording no changes\n"
"\n"
"    ? - display help"
msgstr ""

#: hgext/record.py:374
msgid ""
"interactively record a new patch\n"
"\n"
"    see 'hg help qnew' & 'hg help record' for more information and usage\n"
"    "
msgstr ""

#: hgext/record.py:382
msgid "'mq' extension not loaded"
msgstr ""

#: hgext/record.py:394
msgid "running non-interactively, use commit instead"
msgstr ""

#: hgext/record.py:397
msgid ""
"This is generic record driver.\n"
"\n"
"        It's job is to interactively filter local changes, and accordingly\n"
"        prepare working dir into a state, where the job can be delegated to\n"
"        non-interactive commit command such as 'commit' or 'qrefresh'.\n"
"\n"
"        After the actual job is done by non-interactive command, working "
"dir\n"
"        state is restored to original.\n"
"\n"
"        In the end we'll record intresting changes, and everything else will "
"be\n"
"        left in place, so the user can continue his work.\n"
"        "
msgstr ""

#: hgext/record.py:434
msgid "no changes to record\n"
msgstr ""

#: hgext/record.py:458
msgid "backup %r as %r\n"
msgstr ""

#: hgext/record.py:476
msgid "applying patch\n"
msgstr ""

#: hgext/record.py:484 mercurial/patch.py:1152
msgid "patch failed to apply"
msgstr ""

#: hgext/record.py:504
msgid "restoring %r to %r\n"
msgstr ""

#: hgext/record.py:519
msgid "hg record [OPTION]... [FILE]..."
msgstr ""

#: hgext/record.py:536
msgid "hg qrecord [OPTION]... PATCH [FILE]..."
msgstr ""

#: hgext/transplant.py:75
msgid ""
"returns True if a node is already an ancestor of parent\n"
"        or has already been transplanted"
msgstr ""

#: hgext/transplant.py:90
msgid "apply the revisions in revmap one by one in revision order"
msgstr ""

#: hgext/transplant.py:106
msgid "skipping already applied revision %s\n"
msgstr ""

#: hgext/transplant.py:135
msgid "skipping merge changeset %s:%s\n"
msgstr ""

#: hgext/transplant.py:155
msgid "%s merged at %s\n"
msgstr ""

#: hgext/transplant.py:158
msgid "%s transplanted to %s\n"
msgstr ""

#: hgext/transplant.py:172
msgid "arbitrarily rewrite changeset before applying it"
msgstr ""

#: hgext/transplant.py:174
msgid "filtering %s\n"
msgstr ""

#: hgext/transplant.py:189
msgid "filter failed"
msgstr ""

#: hgext/transplant.py:198
msgid "apply the patch in patchfile to the repository as a transplant"
msgstr ""

#: hgext/transplant.py:212
msgid "can only omit patchfile if merging"
msgstr ""

#: hgext/transplant.py:220
msgid "%s: empty changeset"
msgstr ""

#: hgext/transplant.py:234
msgid "Fix up the merge and run hg transplant --continue"
msgstr ""

#: hgext/transplant.py:248
msgid "recover last transaction and apply remaining changesets"
msgstr ""

#: hgext/transplant.py:251
msgid "%s transplanted as %s\n"
msgstr ""

#: hgext/transplant.py:266
msgid "commit working directory using journal metadata"
msgstr ""

#: hgext/transplant.py:271
msgid "transplant log file is corrupt"
msgstr ""

#: hgext/transplant.py:279
msgid "working dir not at transplant parent %s"
msgstr ""

#: hgext/transplant.py:285
msgid "commit failed"
msgstr ""

#: hgext/transplant.py:343
msgid "journal changelog metadata for later recover"
msgstr ""

#: hgext/transplant.py:361
msgid "remove changelog journal"
msgstr ""

#: hgext/transplant.py:387
msgid "interactively transplant changesets"
msgstr ""

#: hgext/transplant.py:404
msgid "apply changeset? [ynmpcq?]:"
msgstr ""

#: hgext/transplant.py:429
msgid ""
"transplant changesets from another branch\n"
"\n"
"    Selected changesets will be applied on top of the current working\n"
"    directory with the log of the original changeset. If --log is\n"
"    specified, log messages will have a comment appended of the form:\n"
"\n"
"    (transplanted from CHANGESETHASH)\n"
"\n"
"    You can rewrite the changelog message with the --filter option.\n"
"    Its argument will be invoked with the current changelog message\n"
"    as $1 and the patch as $2.\n"
"\n"
"    If --source is specified, selects changesets from the named\n"
"    repository. If --branch is specified, selects changesets from the\n"
"    branch holding the named revision, up to that revision. If --all\n"
"    is specified, all changesets on the branch will be transplanted,\n"
"    otherwise you will be prompted to select the changesets you want.\n"
"\n"
"    hg transplant --branch REVISION --all will rebase the selected branch\n"
"    (up to the named revision) onto your current working directory.\n"
"\n"
"    You can optionally mark selected transplanted changesets as\n"
"    merge changesets. You will not be prompted to transplant any\n"
"    ancestors of a merged transplant, and you can merge descendants\n"
"    of them normally instead of transplanting them.\n"
"\n"
"    If no merges or revisions are provided, hg transplant will start\n"
"    an interactive changeset browser.\n"
"\n"
"    If a changeset application fails, you can fix the merge by hand and\n"
"    then resume where you left off by calling hg transplant --continue.\n"
"    "
msgstr ""

#: hgext/transplant.py:499
msgid "--continue is incompatible with branch, all or merge"
msgstr ""

#: hgext/transplant.py:503
msgid "no source URL, branch tag or revision list provided"
msgstr ""

#: hgext/transplant.py:506
msgid "--all requires a branch revision"
msgstr ""

#: hgext/transplant.py:508
msgid "--all is incompatible with a revision list"
msgstr ""

#: hgext/transplant.py:521
msgid "no revision checked out"
msgstr ""

#: hgext/transplant.py:524 mercurial/merge.py:448
msgid "outstanding uncommitted merges"
msgstr ""

#: hgext/transplant.py:527
msgid "outstanding local changes"
msgstr ""

#: hgext/transplant.py:578
msgid "pull patches from REPOSITORY"
msgstr ""

#: hgext/transplant.py:579
msgid "pull patches from branch BRANCH"
msgstr ""

#: hgext/transplant.py:580
msgid "pull all changesets up to BRANCH"
msgstr ""

#: hgext/transplant.py:581
msgid "skip over REV"
msgstr ""

#: hgext/transplant.py:582
msgid "merge at REV"
msgstr ""

#: hgext/transplant.py:583
msgid "append transplant info to log message"
msgstr ""

#: hgext/transplant.py:584
msgid "continue last transplant session after repair"
msgstr ""

#: hgext/transplant.py:585
msgid "filter changesets through FILTER"
msgstr ""

#: hgext/transplant.py:586
msgid ""
"hg transplant [-s REPOSITORY] [-b BRANCH [-a]] [-p REV] [-m REV] [REV]..."
msgstr ""

#: hgext/win32mbcs.py:11
msgid ""
"allow to use MBCS path with problematic encoding.\n"
"\n"
"Some MBCS encodings are not good for some path operations\n"
"(i.e. splitting path, case conversion, etc.) with its encoded bytes.\n"
"We call such a encoding (i.e. shift_jis and big5) as \"problematic\n"
"encoding\".  This extension can be used to fix the issue with those\n"
"encodings by wrapping some functions to convert to unicode string\n"
"before path operation.\n"
"\n"
"This extension is usefull for:\n"
" * Japanese Windows users using shift_jis encoding.\n"
" * Chinese Windows users using big5 encoding.\n"
" * All users who use a repository with one of problematic encodings\n"
"   on case-insensitive file system.\n"
"\n"
"This extension is not needed for:\n"
" * Any user who use only ascii chars in path.\n"
" * Any user who do not use any of problematic encodings.\n"
"\n"
"Note that there are some limitations on using this extension:\n"
" * You should use single encoding in one repository.\n"
" * You should set same encoding for the repository by locale or HGENCODING.\n"
"\n"
"To use this extension, enable the extension in .hg/hgrc or ~/.hgrc:\n"
"\n"
"  [extensions]\n"
"  hgext.win32mbcs =\n"
"\n"
"Path encoding conversion are done between unicode and util._encoding\n"
"which is decided by mercurial from current locale setting or HGENCODING.\n"
"\n"
msgstr ""

#: hgext/win32mbcs.py:81
msgid "[win32mbcs] filename conversion fail with %s encoding\n"
msgstr ""

#: hgext/win32mbcs.py:114
msgid "[win32mbcs] cannot activate on this platform.\n"
msgstr ""

#: hgext/win32mbcs.py:121
msgid "[win32mbcs] activated with encoding: %s\n"
msgstr ""

#: hgext/win32text.py:47
msgid ""
"WARNING: %s already has %s line endings\n"
"and does not need EOL conversion by the win32text plugin.\n"
"Before your next commit, please reconsider your encode/decode settings in \n"
"Mercurial.ini or %s.\n"
msgstr ""

#: hgext/win32text.py:109
msgid "Attempt to commit or push text file(s) using %s line endings\n"
msgstr ""

#: hgext/win32text.py:112
msgid "in %s: %s\n"
msgstr ""

#: hgext/win32text.py:117
msgid ""
"\n"
"To prevent this mistake in your local repository,\n"
"add to Mercurial.ini or .hg/hgrc:\n"
"\n"
"[hooks]\n"
"pretxncommit.%s = python:hgext.win32text.forbid%s\n"
"\n"
"and also consider adding:\n"
"\n"
"[extensions]\n"
"hgext.win32text =\n"
"[encode]\n"
"** = %sencode:\n"
"[decode]\n"
"** = %sdecode:\n"
msgstr ""

#: hgext/zeroconf/__init__.py:9
msgid ""
"zeroconf support for mercurial repositories\n"
"\n"
"Zeroconf enabled repositories will be announced in a network without the "
"need\n"
"to configure a server or a service. They can be discovered without knowing\n"
"their actual IP address.\n"
"\n"
"To use the zeroconf extension add the following entry to your hgrc file:\n"
"\n"
"[extensions]\n"
"hgext.zeroconf =\n"
"\n"
"To allow other people to discover your repository using run \"hg serve\" in "
"your\n"
"repository.\n"
"\n"
" $ cd test\n"
" $ hg serve\n"
"\n"
"You can discover zeroconf enabled repositories by running \"hg paths\".\n"
"\n"
" $ hg paths\n"
" zc-test = http://example.com:8000/test\n"
msgstr ""

#: mercurial/commands.py:21
msgid ""
"add the specified files on the next commit\n"
"\n"
"    Schedule files to be version controlled and added to the repository.\n"
"\n"
"    The files will be added to the repository at the next commit. To\n"
"    undo an add before that, see hg revert.\n"
"\n"
"    If no names are given, add all files in the repository.\n"
"    "
msgstr ""
"tilføj de angivne filer ved næste commit\n"
"\n"
"    Opskriv filer til at blive versionsstyret og tilføjet til arkivet.\n"
"\n"
"    Filerne vil bliver tilføjet til arkivet ved næste commit. For at\n"
"    omgøre en tilføjelse før det, se hg revert.\n"
"\n"
"    Hvis der ikke er angivet nogen navne tilføjes alle filer i\n"
"    arkivet.\n"
"    "

#: mercurial/commands.py:39 mercurial/commands.py:43
#: mercurial/commands.py:2485 mercurial/cmdutil.py:297
msgid "adding %s\n"
msgstr "tilføjer %s\n"

#: mercurial/commands.py:51
msgid ""
"add all new files, delete all missing files\n"
"\n"
"    Add all new files and remove all missing files from the repository.\n"
"\n"
"    New files are ignored if they match any of the patterns in .hgignore. "
"As\n"
"    with add, these changes take effect at the next commit.\n"
"\n"
"    Use the -s option to detect renamed files. With a parameter > 0,\n"
"    this compares every removed file with every added file and records\n"
"    those similar enough as renames. This option takes a percentage\n"
"    between 0 (disabled) and 100 (files must be identical) as its\n"
"    parameter. Detecting renamed files this way can be expensive.\n"
"    "
msgstr ""

#: mercurial/commands.py:67 mercurial/commands.py:1607
msgid "similarity must be a number"
msgstr ""

#: mercurial/commands.py:69 mercurial/commands.py:1609
msgid "similarity must be between 0 and 100"
msgstr ""

#: mercurial/commands.py:73
msgid ""
"show changeset information per file line\n"
"\n"
"    List changes in files, showing the revision id responsible for each "
"line\n"
"\n"
"    This command is useful to discover who did a change or when a change "
"took\n"
"    place.\n"
"\n"
"    Without the -a option, annotate will avoid processing files it\n"
"    detects as binary. With -a, annotate will generate an annotation\n"
"    anyway, probably with undesirable results.\n"
"    "
msgstr ""

#: mercurial/commands.py:88
msgid "at least one file name or pattern required"
msgstr ""

#: mercurial/commands.py:103
msgid "at least one of -n/-c is required for -l"
msgstr ""

#: mercurial/commands.py:116
msgid "%s: binary file\n"
msgstr ""

#: mercurial/commands.py:134
msgid ""
"create unversioned archive of a repository revision\n"
"\n"
"    By default, the revision used is the parent of the working\n"
"    directory; use \"-r\" to specify a different revision.\n"
"\n"
"    To specify the type of archive to create, use \"-t\". Valid\n"
"    types are:\n"
"\n"
"    \"files\" (default): a directory full of files\n"
"    \"tar\": tar archive, uncompressed\n"
"    \"tbz2\": tar archive, compressed using bzip2\n"
"    \"tgz\": tar archive, compressed using gzip\n"
"    \"uzip\": zip archive, uncompressed\n"
"    \"zip\": zip archive, compressed using deflate\n"
"\n"
"    The exact name of the destination archive or directory is given\n"
"    using a format string; see \"hg help export\" for details.\n"
"\n"
"    Each member added to an archive file has a directory prefix\n"
"    prepended. Use \"-p\" to specify a format string for the prefix.\n"
"    The default is the basename of the archive, with suffixes removed.\n"
"    "
msgstr ""

#: mercurial/commands.py:159
msgid "no working directory: please specify a revision"
msgstr ""

#: mercurial/commands.py:163
msgid "repository root cannot be destination"
msgstr ""

#: mercurial/commands.py:169
msgid "cannot archive plain files to stdout"
msgstr ""

#: mercurial/commands.py:177
msgid ""
"reverse effect of earlier changeset\n"
"\n"
"    Commit the backed out changes as a new changeset. The new\n"
"    changeset is a child of the backed out changeset.\n"
"\n"
"    If you back out a changeset other than the tip, a new head is\n"
"    created. This head will be the new tip and you should merge this\n"
"    backout changeset with another head (current one by default).\n"
"\n"
"    The --merge option remembers the parent of the working directory\n"
"    before starting the backout, then merges the new head with that\n"
"    changeset afterwards. This saves you from doing the merge by\n"
"    hand. The result of this merge is not committed, as for a normal\n"
"    merge.\n"
"\n"
"    See 'hg help dates' for a list of formats valid for -d/--date.\n"
"    "
msgstr ""

#: mercurial/commands.py:201
msgid "please specify a revision to backout"
msgstr ""

#: mercurial/commands.py:213
msgid "cannot back out change on a different branch"
msgstr ""

#: mercurial/commands.py:217
msgid "cannot back out a change with no parents"
msgstr ""

#: mercurial/commands.py:220
msgid "cannot back out a merge changeset without --parent"
msgstr ""

#: mercurial/commands.py:224
msgid "%s is not a parent of %s"
msgstr "%s er ikke forældre til %s"

#: mercurial/commands.py:229
msgid "cannot use --parent on non-merge changeset"
msgstr ""

#: mercurial/commands.py:245
msgid "Backed out changeset %s"
msgstr ""

#: mercurial/commands.py:250
msgid "changeset %s backs out changeset %s\n"
msgstr ""

#: mercurial/commands.py:255
msgid "merging with changeset %s\n"
msgstr ""

#: mercurial/commands.py:258
msgid "the backout changeset is a new head - do not forget to merge\n"
msgstr ""

#: mercurial/commands.py:260
msgid "(use \"backout --merge\" if you want to auto-merge)\n"
msgstr ""

#: mercurial/commands.py:265
msgid ""
"subdivision search of changesets\n"
"\n"
"    This command helps to find changesets which introduce problems.\n"
"    To use, mark the earliest changeset you know exhibits the problem\n"
"    as bad, then mark the latest changeset which is free from the\n"
"    problem as good. Bisect will update your working directory to a\n"
"    revision for testing (unless the --noupdate option is specified).\n"
"    Once you have performed tests, mark the working directory as bad\n"
"    or good and bisect will either update to another candidate changeset\n"
"    or announce that it has found the bad revision.\n"
"\n"
"    As a shortcut, you can also use the revision argument to mark a\n"
"    revision as good or bad without checking it out first.\n"
"\n"
"    If you supply a command it will be used for automatic bisection. Its "
"exit\n"
"    status will be used as flag to mark revision as bad or good. In case "
"exit\n"
"    status is 0 the revision is marked as good, 125 - skipped, 127 (command "
"not\n"
"    found) - bisection will be aborted and any other status bigger than 0 "
"will\n"
"    mark revision as bad.\n"
"    "
msgstr ""

#: mercurial/commands.py:290
msgid "The first %s revision is:\n"
msgstr "Den første %s revision er:\n"

#: mercurial/commands.py:294
msgid "Due to skipped revisions, the first %s revision could be any of:\n"
msgstr ""

#: mercurial/commands.py:304
msgid "cannot bisect (no known good revisions)"
msgstr ""

#: mercurial/commands.py:306
msgid "cannot bisect (no known bad revisions)"
msgstr ""

#: mercurial/commands.py:311
msgid "(use of 'hg bisect <cmd>' is deprecated)\n"
msgstr ""

#: mercurial/commands.py:320
msgid "incompatible arguments"
msgstr ""

#: mercurial/commands.py:343
msgid "failed to execute %s"
msgstr ""

#: mercurial/commands.py:345
msgid "%s killed"
msgstr "%s dræbt"

#: mercurial/commands.py:350
msgid "Changeset %s: %s\n"
msgstr "Ændring: %s: %s\n"

#: mercurial/commands.py:387
msgid "Testing changeset %s:%s (%s changesets remaining, ~%s tests)\n"
msgstr ""

#: mercurial/commands.py:395
msgid ""
"set or show the current branch name\n"
"\n"
"    With no argument, show the current branch name. With one argument,\n"
"    set the working directory branch name (the branch does not exist in\n"
"    the repository until the next commit).\n"
"\n"
"    Unless --force is specified, branch will not let you set a\n"
"    branch name that shadows an existing branch.\n"
"\n"
"    Use --clean to reset the working directory branch to that of the\n"
"    parent of the working directory, negating a previous branch change.\n"
"\n"
"    Use the command 'hg update' to switch to an existing branch.\n"
"    "
msgstr ""

#: mercurial/commands.py:413
msgid "reset working directory to branch %s\n"
msgstr ""

#: mercurial/commands.py:417
msgid "a branch of the same name already exists (use --force to override)"
msgstr ""

#: mercurial/commands.py:420
msgid "marked working directory as branch %s\n"
msgstr ""

#: mercurial/commands.py:425
msgid ""
"list repository named branches\n"
"\n"
"    List the repository's named branches, indicating which ones are\n"
"    inactive. If active is specified, only show active branches.\n"
"\n"
"    A branch is considered active if it contains repository heads.\n"
"\n"
"    Use the command 'hg update' to switch to an existing branch.\n"
"    "
msgstr ""

#: mercurial/commands.py:452
msgid ""
"create a changegroup file\n"
"\n"
"    Generate a compressed changegroup file collecting changesets not\n"
"    found in the other repository.\n"
"\n"
"    If no destination repository is specified the destination is\n"
"    assumed to have all the nodes specified by one or more --base\n"
"    parameters. To create a bundle containing all changesets, use\n"
"    --all (or --base null). To change the compression method applied,\n"
"    use the -t option (by default, bundles are compressed using bz2).\n"
"\n"
"    The bundle file can then be transferred using conventional means and\n"
"    applied to another repository with the unbundle or pull command.\n"
"    This is useful when direct push and pull are not available or when\n"
"    exporting an entire repository is undesirable.\n"
"\n"
"    Applying bundles preserves all changeset contents including\n"
"    permissions, copy/rename information, and revision history.\n"
"    "
msgstr ""

#: mercurial/commands.py:480
msgid "--base is incompatible with specifiying a destination"
msgstr ""

#: mercurial/commands.py:520
msgid "unknown bundle type specified with --type"
msgstr ""

#: mercurial/commands.py:525
msgid ""
"output the current or given revision of files\n"
"\n"
"    Print the specified files as they were at the given revision.\n"
"    If no revision is given, the parent of the working directory is used,\n"
"    or tip if no revision is checked out.\n"
"\n"
"    Output may be to a file, in which case the name of the file is\n"
"    given using a format string. The formatting rules are the same as\n"
"    for the export command, with the following additions:\n"
"\n"
"    %s   basename of file being printed\n"
"    %d   dirname of file being printed, or '.' if in repo root\n"
"    %p   root-relative path name of file being printed\n"
"    "
msgstr ""

#: mercurial/commands.py:552
msgid ""
"make a copy of an existing repository\n"
"\n"
"    Create a copy of an existing repository in a new directory.\n"
"\n"
"    If no destination directory name is specified, it defaults to the\n"
"    basename of the source.\n"
"\n"
"    The location of the source is added to the new repository's\n"
"    .hg/hgrc file, as the default to be used for future pulls.\n"
"\n"
"    For efficiency, hardlinks are used for cloning whenever the source\n"
"    and destination are on the same filesystem (note this applies only\n"
"    to the repository data, not to the checked out files). Some\n"
"    filesystems, such as AFS, implement hardlinking incorrectly, but\n"
"    do not report errors. In these cases, use the --pull option to\n"
"    avoid hardlinking.\n"
"\n"
"    In some cases, you can clone repositories and checked out files\n"
"    using full hardlinks with\n"
"\n"
"      $ cp -al REPO REPOCLONE\n"
"\n"
"    This is the fastest way to clone, but it is not always safe.  The\n"
"    operation is not atomic (making sure REPO is not modified during\n"
"    the operation is up to you) and you have to make sure your editor\n"
"    breaks hardlinks (Emacs and most Linux Kernel tools do so).  Also,\n"
"    this is not compatible with certain extensions that place their\n"
"    metadata under the .hg directory, such as mq.\n"
"\n"
"    If you use the -r option to clone up to a specific revision, no\n"
"    subsequent revisions will be present in the cloned repository.\n"
"    This option implies --pull, even on local repositories.\n"
"\n"
"    If the -U option is used, the new clone will contain only a repository\n"
"    (.hg) and no working copy (the working copy parent is the null "
"revision).\n"
"\n"
"    See pull for valid source format details.\n"
"\n"
"    It is possible to specify an ssh:// URL as the destination, but no\n"
"    .hg/hgrc and working directory will be created on the remote side.\n"
"    Look at the help text for the pull command for important details\n"
"    about ssh:// URLs.\n"
"    "
msgstr ""

#: mercurial/commands.py:603
msgid ""
"commit the specified files or all outstanding changes\n"
"\n"
"    Commit changes to the given files into the repository.\n"
"\n"
"    If a list of files is omitted, all changes reported by \"hg status\"\n"
"    will be committed.\n"
"\n"
"    If you are committing the result of a merge, do not provide any\n"
"    file names or -I/-X filters.\n"
"\n"
"    If no commit message is specified, the configured editor is started to\n"
"    enter a message.\n"
"\n"
"    See 'hg help dates' for a list of formats valid for -d/--date.\n"
"    "
msgstr ""

#: mercurial/commands.py:634
msgid "created new head\n"
msgstr "lavede et nyt hoved\n"

#: mercurial/commands.py:637 mercurial/commands.py:639
msgid "committed changeset %d:%s\n"
msgstr ""

#: mercurial/commands.py:642
msgid ""
"mark files as copied for the next commit\n"
"\n"
"    Mark dest as having copies of source files. If dest is a\n"
"    directory, copies are put in that directory. If dest is a file,\n"
"    there can only be one source.\n"
"\n"
"    By default, this command copies the contents of files as they\n"
"    stand in the working directory. If invoked with --after, the\n"
"    operation is recorded, but no copying is performed.\n"
"\n"
"    This command takes effect in the next commit. To undo a copy\n"
"    before that, see hg revert.\n"
"    "
msgstr ""

#: mercurial/commands.py:662
msgid "find the ancestor revision of two revisions in a given index"
msgstr ""

#: mercurial/commands.py:669 mercurial/commands.py:1512
#: mercurial/commands.py:2642 mercurial/commands.py:2657
#: mercurial/dispatch.py:356 mercurial/hgweb/server.py:252
msgid "There is no Mercurial repository here (.hg not found)"
msgstr "Der er ikke noget Mercurial arkiv her (fandt ikke .hg)"

#: mercurial/commands.py:675
msgid "either two or three arguments required"
msgstr "kræver enten to eller tre argumenter"

#: mercurial/commands.py:680
msgid "returns the completion list associated with the given command"
msgstr ""

#: mercurial/commands.py:710
msgid "rebuild the dirstate as it would look like for the given revision"
msgstr ""

#: mercurial/commands.py:719
msgid "validate the correctness of the current dirstate"
msgstr ""

#: mercurial/commands.py:727
msgid "%s in state %s, but not in manifest1\n"
msgstr ""

#: mercurial/commands.py:730
msgid "%s in state %s, but also in manifest1\n"
msgstr ""

#: mercurial/commands.py:733
msgid "%s in state %s, but not in either manifest\n"
msgstr ""

#: mercurial/commands.py:739
msgid "%s in manifest1, but listed as state %s"
msgstr ""

#: mercurial/commands.py:742
msgid ".hg/dirstate inconsistent with current parent's manifest"
msgstr ""

#: mercurial/commands.py:746
msgid ""
"show combined config settings from all hgrc files\n"
"\n"
"    With no args, print names and values of all config items.\n"
"\n"
"    With one arg of the form section.name, print just the value of\n"
"    that config item.\n"
"\n"
"    With multiple args, print names and values of all config items\n"
"    with matching section names."
msgstr ""

#: mercurial/commands.py:759
msgid "only one config item permitted"
msgstr ""

#: mercurial/commands.py:772
msgid ""
"manually set the parents of the current working directory\n"
"\n"
"    This is useful for writing repository conversion tools, but should\n"
"    be used with care.\n"
"    "
msgstr ""

#: mercurial/commands.py:788
msgid "show the contents of the current dirstate"
msgstr ""

#: mercurial/commands.py:806
msgid "copy: %s -> %s\n"
msgstr "kopi: %s -> %s\n"

#: mercurial/commands.py:809
msgid "dump the contents of a data file revision"
msgstr ""

#: mercurial/commands.py:814
msgid "invalid revision identifier %s"
msgstr "ugyldig revisionsidentification %s"

#: mercurial/commands.py:817
msgid "parse and display a date"
msgstr ""

#: mercurial/commands.py:829
msgid "dump the contents of an index file"
msgstr ""

#: mercurial/commands.py:844
msgid "dump an index DAG as a .dot file"
msgstr ""

#: mercurial/commands.py:856
msgid "test Mercurial installation"
msgstr ""

#: mercurial/commands.py:868
msgid "Checking encoding (%s)...\n"
msgstr ""

#: mercurial/commands.py:873
msgid " (check that your locale is properly set)\n"
msgstr ""

#: mercurial/commands.py:877
msgid "Checking extensions...\n"
msgstr ""

#: mercurial/commands.py:882
msgid " One or more extensions could not be found"
msgstr ""

#: mercurial/commands.py:883
msgid " (check that you compiled the extensions)\n"
msgstr ""

#: mercurial/commands.py:887
msgid "Checking templates...\n"
msgstr ""

#: mercurial/commands.py:893
msgid " (templates seem to have been installed incorrectly)\n"
msgstr ""

#: mercurial/commands.py:897
msgid "Checking patch...\n"
msgstr ""

#: mercurial/commands.py:910
msgid " patch call failed:\n"
msgstr ""

#: mercurial/commands.py:915
msgid " unexpected patch output!\n"
msgstr ""

#: mercurial/commands.py:919
msgid " patch test failed!\n"
msgstr ""

#: mercurial/commands.py:924
msgid ""
" (Current patch tool may be incompatible with patch, or misconfigured. "
"Please check your .hgrc file)\n"
msgstr ""

#: mercurial/commands.py:927
msgid ""
" Internal patcher failure, please report this error to http://www.selenic."
"com/mercurial/bts\n"
msgstr ""

#: mercurial/commands.py:935
msgid "Checking commit editor...\n"
msgstr ""

#: mercurial/commands.py:940
msgid " No commit editor set and can't find vi in PATH\n"
msgstr ""

#: mercurial/commands.py:941 mercurial/commands.py:944
msgid " (specify a commit editor in your .hgrc file)\n"
msgstr ""

#: mercurial/commands.py:943
msgid " Can't find editor '%s' in PATH\n"
msgstr ""

#: mercurial/commands.py:948
msgid "Checking username...\n"
msgstr ""

#: mercurial/commands.py:957
msgid " (specify a username in your .hgrc file)\n"
msgstr ""

#: mercurial/commands.py:960
msgid "No problems detected\n"
msgstr "Fandt ingen problemer\n"

#: mercurial/commands.py:962
msgid "%s problems detected, please check your install!\n"
msgstr ""

#: mercurial/commands.py:968
msgid "dump rename information"
msgstr ""

#: mercurial/commands.py:977
msgid "%s renamed from %s:%s\n"
msgstr "%s omdøbt fra %s:%s\n"

#: mercurial/commands.py:979
msgid "%s not renamed\n"
msgstr "%s ikke omdøbt\n"

#: mercurial/commands.py:982
msgid "show how files match on given patterns"
msgstr ""

#: mercurial/commands.py:995
msgid ""
"diff repository (or selected files)\n"
"\n"
"    Show differences between revisions for the specified files.\n"
"\n"
"    Differences between files are shown using the unified diff format.\n"
"\n"
"    NOTE: diff may generate unexpected results for merges, as it will\n"
"    default to comparing against the working directory's first parent\n"
"    changeset if no revisions are specified.\n"
"\n"
"    When two revision arguments are given, then changes are shown\n"
"    between those revisions. If only one revision is specified then\n"
"    that revision is compared to the working directory, and, when no\n"
"    revisions are specified, the working directory files are compared\n"
"    to its parent.\n"
"\n"
"    Without the -a option, diff will avoid generating diffs of files\n"
"    it detects as binary. With -a, diff will generate a diff anyway,\n"
"    probably with undesirable results.\n"
"\n"
"    Use the --git option to generate diffs in the git extended diff\n"
"    format. Read the diffs help topic for more information.\n"
"    "
msgstr ""

#: mercurial/commands.py:1026
msgid ""
"dump the header and diffs for one or more changesets\n"
"\n"
"    Print the changeset header and diffs for one or more revisions.\n"
"\n"
"    The information shown in the changeset header is: author,\n"
"    changeset hash, parent(s) and commit comment.\n"
"\n"
"    NOTE: export may generate unexpected diff output for merge changesets,\n"
"    as it will compare the merge changeset against its first parent only.\n"
"\n"
"    Output may be to a file, in which case the name of the file is\n"
"    given using a format string. The formatting rules are as follows:\n"
"\n"
"    %%   literal \"%\" character\n"
"    %H   changeset hash (40 bytes of hexadecimal)\n"
"    %N   number of patches being generated\n"
"    %R   changeset revision number\n"
"    %b   basename of the exporting repository\n"
"    %h   short-form changeset hash (12 bytes of hexadecimal)\n"
"    %n   zero-padded sequence number, starting at 1\n"
"    %r   zero-padded changeset revision number\n"
"\n"
"    Without the -a option, export will avoid generating diffs of files\n"
"    it detects as binary. With -a, export will generate a diff anyway,\n"
"    probably with undesirable results.\n"
"\n"
"    Use the --git option to generate diffs in the git extended diff\n"
"    format. Read the diffs help topic for more information.\n"
"\n"
"    With the --switch-parent option, the diff will be against the second\n"
"    parent. It can be useful to review a merge.\n"
"    "
msgstr ""

#: mercurial/commands.py:1059
msgid "export requires at least one changeset"
msgstr ""

#: mercurial/commands.py:1062
msgid "exporting patches:\n"
msgstr ""

#: mercurial/commands.py:1064
msgid "exporting patch:\n"
msgstr ""

#: mercurial/commands.py:1070
msgid ""
"search for a pattern in specified files and revisions\n"
"\n"
"    Search revisions of files for a regular expression.\n"
"\n"
"    This command behaves differently than Unix grep. It only accepts\n"
"    Python/Perl regexps. It searches repository history, not the\n"
"    working directory. It always prints the revision number in which\n"
"    a match appears.\n"
"\n"
"    By default, grep only prints output for the first revision of a\n"
"    file in which it finds a match. To get it to print every revision\n"
"    that contains a change in match status (\"-\" for a match that\n"
"    becomes a non-match, or \"+\" for a non-match that becomes a match),\n"
"    use the --all flag.\n"
"    "
msgstr ""

#: mercurial/commands.py:1091
msgid "grep: invalid match pattern: %s\n"
msgstr ""

#: mercurial/commands.py:1236
msgid ""
"show current repository heads or show branch heads\n"
"\n"
"    With no arguments, show all repository head changesets.\n"
"\n"
"    If branch or revisions names are given this will show the heads of\n"
"    the specified branches or the branches those revisions are tagged\n"
"    with.\n"
"\n"
"    Repository \"heads\" are changesets that don't have child\n"
"    changesets. They are where development generally takes place and\n"
"    are the usual targets for update and merge operations.\n"
"\n"
"    Branch heads are changesets that have a given branch tag, but have\n"
"    no child changesets with that tag. They are usually where\n"
"    development on the given branch takes place.\n"
"    "
msgstr ""

#: mercurial/commands.py:1270
msgid "no changes on branch %s containing %s are reachable from %s\n"
msgstr ""

#: mercurial/commands.py:1274
msgid "no changes on branch %s are reachable from %s\n"
msgstr ""

#: mercurial/commands.py:1284
msgid ""
"show help for a given topic or a help overview\n"
"\n"
"    With no arguments, print a list of commands and short help.\n"
"\n"
"    Given a topic, extension, or command name, print help for that topic."
msgstr ""

#: mercurial/commands.py:1293
msgid "global options:"
msgstr ""

#: mercurial/commands.py:1295
msgid "use \"hg help\" for the full list of commands"
msgstr "brug \"hg help\" for den fulde liste af kommandoer"

#: mercurial/commands.py:1299
msgid "use \"hg help\" for the full list of commands or \"hg -v\" for details"
msgstr ""
"brug \"hg help\" for den fulde liste af kommandoer eller \"hg -v\" for "
"detaljer"

#: mercurial/commands.py:1302
msgid "use \"hg -v help%s\" to show aliases and global options"
msgstr "brug \"hg -v help%s\" for at vise aliaser og globale valgmuligheder"

#: mercurial/commands.py:1305
msgid "use \"hg -v help %s\" to show global options"
msgstr "brug \"hg -v help %s\" for at vise globale valgmuligheder"

#: mercurial/commands.py:1317 mercurial/commands.py:1435
#: mercurial/commands.py:1461
msgid ""
"list of commands:\n"
"\n"
msgstr ""
"liste af kommandoer:\n"
"\n"

#: mercurial/commands.py:1331
msgid ""
"\n"
"aliases: %s\n"
msgstr ""
"\n"
"aliaser %s:\n"

#: mercurial/commands.py:1336 mercurial/commands.py:1365
#: mercurial/commands.py:1389 mercurial/commands.py:1408
msgid "(no help text available)"
msgstr "(ingen hjælpetekst tilgængelig)"

#: mercurial/commands.py:1344
msgid "options:\n"
msgstr "valgmuligheder:\n"

#: mercurial/commands.py:1370
msgid "no commands defined\n"
msgstr "ingen kommandoer defineret\n"

#: mercurial/commands.py:1385
msgid ""
"\n"
"enabled extensions:\n"
"\n"
msgstr "\naktiverede udvidelser:\n\n"

#: mercurial/commands.py:1394
msgid " %s   %s\n"
msgstr ""

#: mercurial/commands.py:1421
msgid "no help text available"
msgstr "ingen hjælpetekst tilgængelig"

#: mercurial/commands.py:1423
msgid "%s extension - %s\n"
msgstr ""

#: mercurial/commands.py:1454
msgid "Mercurial Distributed SCM\n"
msgstr "Mercurial Distribueret SCM\n"

#: mercurial/commands.py:1459
msgid ""
"basic commands:\n"
"\n"
msgstr ""
"basale kommandoer:\n"
"\n"

#: mercurial/commands.py:1475 doc/gendoc.py:31
msgid " (default: %s)"
msgstr " (standard: %s)"

#: mercurial/commands.py:1479
msgid ""
"\n"
"additional help topics:\n"
"\n"
msgstr ""
"\n"
"yderligere hjælpeemner:\n"
"\n"

#: mercurial/commands.py:1499
msgid ""
"identify the working copy or specified revision\n"
"\n"
"    With no revision, print a summary of the current state of the repo.\n"
"\n"
"    With a path, do a lookup in another repository.\n"
"\n"
"    This summary identifies the repository state using one or two parent\n"
"    hash identifiers, followed by a \"+\" if there are uncommitted changes\n"
"    in the working directory, a list of tags for this revision and a branch\n"
"    name for non-default branches.\n"
"    "
msgstr ""

#: mercurial/commands.py:1568
msgid ""
"import an ordered set of patches\n"
"\n"
"    Import a list of patches and commit them individually.\n"
"\n"
"    If there are outstanding changes in the working directory, import\n"
"    will abort unless given the -f flag.\n"
"\n"
"    You can import a patch straight from a mail message. Even patches\n"
"    as attachments work (body part must be type text/plain or\n"
"    text/x-patch to be used). From and Subject headers of email\n"
"    message are used as default committer and commit message. All\n"
"    text/plain body parts before first diff are added to commit\n"
"    message.\n"
"\n"
"    If the imported patch was generated by hg export, user and description\n"
"    from patch override values from message headers and body. Values\n"
"    given on command line with -m and -u override these.\n"
"\n"
"    If --exact is specified, import will set the working directory\n"
"    to the parent of each patch before applying it, and will abort\n"
"    if the resulting changeset has a different ID than the one\n"
"    recorded in the patch. This may happen due to character set\n"
"    problems or other deficiencies in the text patch format.\n"
"\n"
"    With --similarity, hg will attempt to discover renames and copies\n"
"    in the patch in the same way as 'addremove'.\n"
"\n"
"    To read a patch from standard input, use patch name \"-\".\n"
"    See 'hg help dates' for a list of formats valid for -d/--date.\n"
"    "
msgstr ""

#: mercurial/commands.py:1624
msgid "applying patch from stdin\n"
msgstr ""

#: mercurial/commands.py:1633
msgid "no diffs found"
msgstr ""

#: mercurial/commands.py:1646
msgid ""
"message:\n"
"%s\n"
msgstr ""
"meddelse:\n"
"%s\n"

#: mercurial/commands.py:1651
msgid "not a mercurial patch"
msgstr ""

#: mercurial/commands.py:1681
msgid "patch is damaged or loses information"
msgstr ""

#: mercurial/commands.py:1692
msgid ""
"show new changesets found in source\n"
"\n"
"    Show new changesets found in the specified path/URL or the default\n"
"    pull location. These are the changesets that would be pulled if a pull\n"
"    was requested.\n"
"\n"
"    For remote repository, using --bundle avoids downloading the changesets\n"
"    twice if the incoming is followed by a pull.\n"
"\n"
"    See pull for valid source format details.\n"
"    "
msgstr ""

#: mercurial/commands.py:1763
msgid ""
"create a new repository in the given directory\n"
"\n"
"    Initialize a new repository in the given directory. If the given\n"
"    directory does not exist, it is created.\n"
"\n"
"    If no directory is given, the current directory is used.\n"
"\n"
"    It is possible to specify an ssh:// URL as the destination.\n"
"    Look at the help text for the pull command for important details\n"
"    about ssh:// URLs.\n"
"    "
msgstr ""

#: mercurial/commands.py:1778
msgid ""
"locate files matching specific patterns\n"
"\n"
"    Print all files under Mercurial control whose names match the\n"
"    given patterns.\n"
"\n"
"    This command searches the entire repository by default. To search\n"
"    just the current directory and its subdirectories, use\n"
"    \"--include .\".\n"
"\n"
"    If no patterns are given to match, this command prints all file\n"
"    names.\n"
"\n"
"    If you want to feed the output of this command into the \"xargs\"\n"
"    command, use the \"-0\" option to both this command and \"xargs\".\n"
"    This will avoid the problem of \"xargs\" treating single filenames\n"
"    that contain white space as multiple filenames.\n"
"    "
msgstr ""

#: mercurial/commands.py:1813
msgid ""
"show revision history of entire repository or files\n"
"\n"
"    Print the revision history of the specified files or the entire\n"
"    project.\n"
"\n"
"    File history is shown without following rename or copy history of\n"
"    files. Use -f/--follow with a file name to follow history across\n"
"    renames and copies. --follow without a file name will only show\n"
"    ancestors or descendants of the starting revision. --follow-first\n"
"    only follows the first parent of merge revisions.\n"
"\n"
"    If no revision range is specified, the default is tip:0 unless\n"
"    --follow is set, in which case the working directory parent is\n"
"    used as the starting revision.\n"
"\n"
"    See 'hg help dates' for a list of formats valid for -d/--date.\n"
"\n"
"    By default this command outputs: changeset id and hash, tags,\n"
"    non-trivial parents, user, date and time, and a summary for each\n"
"    commit. When the -v/--verbose switch is used, the list of changed\n"
"    files and full commit message is shown.\n"
"\n"
"    NOTE: log -p may generate unexpected diff output for merge\n"
"    changesets, as it will compare the merge changeset against its\n"
"    first parent only. Also, the files: list will only reflect files\n"
"    that are different from BOTH parents.\n"
"\n"
"    "
msgstr ""

#: mercurial/commands.py:1855
msgid ""
"looks up all renames for a file (up to endrev) the first\n"
"        time the file is given. It indexes on the changerev and only\n"
"        parses the manifest if linkrev != changerev.\n"
"        Returns rename info for fn at changerev rev."
msgstr ""

#: mercurial/commands.py:1945
msgid ""
"output the current or given revision of the project manifest\n"
"\n"
"    Print a list of version controlled files for the given revision.\n"
"    If no revision is given, the parent of the working directory is used,\n"
"    or tip if no revision is checked out.\n"
"\n"
"    The manifest is the list of files being version controlled. If no "
"revision\n"
"    is given then the first parent of the working directory is used.\n"
"\n"
"    With -v flag, print file permissions, symlink and executable bits. With\n"
"    --debug flag, print file revision hashes.\n"
"    "
msgstr ""

#: mercurial/commands.py:1974
msgid ""
"merge working directory with another revision\n"
"\n"
"    Merge the contents of the current working directory and the\n"
"    requested revision. Files that changed between either parent are\n"
"    marked as changed for the next commit and a commit must be\n"
"    performed before any further updates are allowed.\n"
"\n"
"    If no revision is specified, the working directory's parent is a\n"
"    head revision, and the current branch contains exactly one other head,\n"
"    the other head is merged with by default. Otherwise, an explicit\n"
"    revision to merge with must be provided.\n"
"    "
msgstr ""

#: mercurial/commands.py:1996
msgid "branch '%s' has %d heads - please merge with an explicit rev"
msgstr ""

#: mercurial/commands.py:2003
msgid "branch '%s' has one head - please merge with an explicit rev"
msgstr ""

#: mercurial/commands.py:2006
msgid "there is nothing to merge"
msgstr ""

#: mercurial/commands.py:2008
msgid "%s - use \"hg update\" instead"
msgstr "%s - brug \"hg update\" istedet"

#: mercurial/commands.py:2012
msgid ""
"working dir not at a head rev - use \"hg update\" or merge with an explicit "
"rev"
msgstr ""

#: mercurial/commands.py:2018
msgid ""
"show changesets not found in destination\n"
"\n"
"    Show changesets not found in the specified destination repository or\n"
"    the default push location. These are the changesets that would be "
"pushed\n"
"    if a push was requested.\n"
"\n"
"    See pull for valid destination format details.\n"
"    "
msgstr ""

#: mercurial/commands.py:2054
msgid ""
"show the parents of the working dir or revision\n"
"\n"
"    Print the working directory's parent revisions. If a\n"
"    revision is given via --rev, the parent of that revision\n"
"    will be printed. If a file argument is given, revision in\n"
"    which the file was last changed (before the working directory\n"
"    revision or the argument to --rev if given) is printed.\n"
"    "
msgstr ""

#: mercurial/commands.py:2071
msgid "can only specify an explicit file name"
msgstr ""

#: mercurial/commands.py:2082
msgid "'%s' not found in manifest!"
msgstr ""

#: mercurial/commands.py:2094
msgid ""
"show definition of symbolic path names\n"
"\n"
"    Show definition of symbolic path name NAME. If no name is given, show\n"
"    definition of available names.\n"
"\n"
"    Path names are defined in the [paths] section of /etc/mercurial/hgrc\n"
"    and $HOME/.hgrc. If run inside a repository, .hg/hgrc is used, too.\n"
"    "
msgstr ""

#: mercurial/commands.py:2107
msgid "not found!\n"
msgstr "ikke fundet!\n"

#: mercurial/commands.py:2120
msgid "not updating, since new heads added\n"
msgstr "opdaterer ikke idet nye hoveder er tilføjet\n"

#: mercurial/commands.py:2122
msgid "(run 'hg heads' to see heads, 'hg merge' to merge)\n"
msgstr "(kør 'hg heads' for at se hoveder, 'hg merge' for at sammenføje)\n"

#: mercurial/commands.py:2124
msgid "(run 'hg update' to get a working copy)\n"
msgstr "(kør 'hg update' for at få en arbejdskopi)\n"

#: mercurial/commands.py:2127
msgid ""
"pull changes from the specified source\n"
"\n"
"    Pull changes from a remote repository to a local one.\n"
"\n"
"    This finds all changes from the repository at the specified path\n"
"    or URL and adds them to the local repository. By default, this\n"
"    does not update the copy of the project in the working directory.\n"
"\n"
"    Valid URLs are of the form:\n"
"\n"
"      local/filesystem/path (or file://local/filesystem/path)\n"
"      http://[user[:pass]@]host[:port]/[path]\n"
"      https://[user[:pass]@]host[:port]/[path]\n"
"      ssh://[user[:pass]@]host[:port]/[path]\n"
"\n"
"    Paths in the local filesystem can either point to Mercurial\n"
"    repositories or to bundle files (as created by 'hg bundle' or\n"
"    'hg incoming --bundle').\n"
"\n"
"    An optional identifier after # indicates a particular branch, tag,\n"
"    or changeset to pull.\n"
"\n"
"    Some notes about using SSH with Mercurial:\n"
"    - SSH requires an accessible shell account on the destination machine\n"
"      and a copy of hg in the remote path or specified with as remotecmd.\n"
"    - path is relative to the remote user's home directory by default.\n"
"      Use an extra slash at the start of a path to specify an absolute "
"path:\n"
"        ssh://example.com//tmp/repository\n"
"    - Mercurial doesn't use its own compression via SSH; the right thing\n"
"      to do is to configure it in your ~/.ssh/config, e.g.:\n"
"        Host *.mylocalnetwork.example.com\n"
"          Compression no\n"
"        Host *\n"
"          Compression yes\n"
"      Alternatively specify \"ssh -C\" as your ssh command in your hgrc or\n"
"      with the --ssh command line option.\n"
"    "
msgstr ""

#: mercurial/commands.py:2173
msgid ""
"Other repository doesn't support revision lookup, so a rev cannot be "
"specified."
msgstr ""

#: mercurial/commands.py:2181
msgid ""
"push changes to the specified destination\n"
"\n"
"    Push changes from the local repository to the given destination.\n"
"\n"
"    This is the symmetrical operation for pull. It helps to move\n"
"    changes from the current repository to a different one. If the\n"
"    destination is local this is identical to a pull in that directory\n"
"    from the current one.\n"
"\n"
"    By default, push will refuse to run if it detects the result would\n"
"    increase the number of remote heads. This generally indicates the\n"
"    the client has forgotten to pull and merge before pushing.\n"
"\n"
"    Valid URLs are of the form:\n"
"\n"
"      local/filesystem/path (or file://local/filesystem/path)\n"
"      ssh://[user[:pass]@]host[:port]/[path]\n"
"      http://[user[:pass]@]host[:port]/[path]\n"
"      https://[user[:pass]@]host[:port]/[path]\n"
"\n"
"    An optional identifier after # indicates a particular branch, tag,\n"
"    or changeset to push. If -r is used, the named changeset and all its\n"
"    ancestors will be pushed to the remote repository.\n"
"\n"
"    Look at the help text for the pull command for important details\n"
"    about ssh:// URLs.\n"
"\n"
"    Pushing to http:// and https:// URLs is only possible, if this\n"
"    feature is explicitly enabled on the remote Mercurial server.\n"
"    "
msgstr ""

#: mercurial/commands.py:2216
msgid "pushing to %s\n"
msgstr "skubber til %s\n"

#: mercurial/commands.py:2223
msgid ""
"raw commit interface (DEPRECATED)\n"
"\n"
"    (DEPRECATED)\n"
"    Lowlevel commit, for use in helper scripts.\n"
"\n"
"    This command is not intended to be used by normal users, as it is\n"
"    primarily useful for importing from other SCMs.\n"
"\n"
"    This command is now deprecated and will be removed in a future\n"
"    release, please use debugsetparents and commit instead.\n"
"    "
msgstr ""

#: mercurial/commands.py:2235
msgid "(the rawcommit command is deprecated)\n"
msgstr ""

#: mercurial/commands.py:2251
msgid ""
"roll back an interrupted transaction\n"
"\n"
"    Recover from an interrupted commit or pull.\n"
"\n"
"    This command tries to fix the repository status after an interrupted\n"
"    operation. It should only be necessary when Mercurial suggests it.\n"
"    "
msgstr ""

#: mercurial/commands.py:2263
msgid ""
"remove the specified files on the next commit\n"
"\n"
"    Schedule the indicated files for removal from the repository.\n"
"\n"
"    This only removes files from the current branch, not from the entire\n"
"    project history. -A can be used to remove only files that have already\n"
"    been deleted, -f can be used to force deletion, and -Af can be used\n"
"    to remove files from the next revision without deleting them.\n"
"\n"
"    The following table details the behavior of remove for different file\n"
"    states (columns) and option combinations (rows). The file states are\n"
"    Added, Clean, Modified and Missing (as reported by hg status). The\n"
"    actions are Warn, Remove (from branch) and Delete (from disk).\n"
"\n"
"           A  C  M  !\n"
"    none   W  RD W  R\n"
"    -f     R  RD RD R\n"
"    -A     W  W  W  R\n"
"    -Af    R  R  R  R\n"
"\n"
"    This command schedules the files to be removed at the next commit.\n"
"    To undo a remove before that, see hg revert.\n"
"    "
msgstr ""

#: mercurial/commands.py:2289
msgid "no files specified"
msgstr ""

#: mercurial/commands.py:2297
msgid "not removing %s: file %s (use -f to force removal)\n"
msgstr "fjerner ikke %s: filen %s (brug -f for at forcere fjernelsen)\n"

#: mercurial/commands.py:2304
msgid "still exists"
msgstr "eksisterer stadig"

#: mercurial/commands.py:2307
msgid "is modified"
msgstr "er modificeret"

#: mercurial/commands.py:2308
msgid "has been marked for add"
msgstr "er markeret som tilføjet"

#: mercurial/commands.py:2312 mercurial/commands.py:2482
#: mercurial/cmdutil.py:303 mercurial/merge.py:298 mercurial/merge.py:308
#: mercurial/merge.py:329
msgid "removing %s\n"
msgstr "fjerner %s\n"

#: mercurial/commands.py:2318
msgid ""
"rename files; equivalent of copy + remove\n"
"\n"
"    Mark dest as copies of sources; mark sources for deletion. If\n"
"    dest is a directory, copies are put in that directory. If dest is\n"
"    a file, there can only be one source.\n"
"\n"
"    By default, this command copies the contents of files as they\n"
"    stand in the working directory. If invoked with --after, the\n"
"    operation is recorded, but no copying is performed.\n"
"\n"
"    This command takes effect in the next commit. To undo a rename\n"
"    before that, see hg revert.\n"
"    "
msgstr ""

#: mercurial/commands.py:2338
msgid ""
"retry file merges from a merge or update\n"
"\n"
"    This command will cleanly retry unresolved file merges using file\n"
"    revisions preserved from the last update or merge. To attempt to\n"
"    resolve all unresolved files, use the -a switch.\n"
"\n"
"    This command will also allow listing resolved files and manually\n"
"    marking and unmarking files as resolved.\n"
"\n"
"    The codes used to show the status of files are:\n"
"    U = unresolved\n"
"    R = resolved\n"
"    "
msgstr ""

#: mercurial/commands.py:2355
msgid "too many options specified"
msgstr ""

#: mercurial/commands.py:2357
msgid "can't specify --all and patterns"
msgstr ""

#: mercurial/commands.py:2359
msgid "no files or directories specified; use --all to remerge all files"
msgstr ""
"ingen filer eller mapper specificeret; brug --all for at gen-sammenføje alle "
"filerne"

#: mercurial/commands.py:2379
msgid ""
"restore individual files or dirs to an earlier state\n"
"\n"
"    (use update -r to check out earlier revisions, revert does not\n"
"    change the working dir parents)\n"
"\n"
"    With no revision specified, revert the named files or directories\n"
"    to the contents they had in the parent of the working directory.\n"
"    This restores the contents of the affected files to an unmodified\n"
"    state and unschedules adds, removes, copies, and renames. If the\n"
"    working directory has two parents, you must explicitly specify the\n"
"    revision to revert to.\n"
"\n"
"    Using the -r option, revert the given files or directories to their\n"
"    contents as of a specific revision. This can be helpful to \"roll\n"
"    back\" some or all of an earlier change.\n"
"    See 'hg help dates' for a list of formats valid for -d/--date.\n"
"\n"
"    Revert modifies the working directory. It does not commit any\n"
"    changes, or change the parent of the working directory. If you\n"
"    revert to a revision other than the parent of the working\n"
"    directory, the reverted files will thus appear modified\n"
"    afterwards.\n"
"\n"
"    If a file has been deleted, it is restored. If the executable\n"
"    mode of a file was changed, it is reset.\n"
"\n"
"    If names are given, all files matching the names are reverted.\n"
"    If no arguments are given, no files are reverted.\n"
"\n"
"    Modified files are saved with a .orig suffix before reverting.\n"
"    To disable these backups, use --no-backup.\n"
"    "
msgstr ""

#: mercurial/commands.py:2414 mercurial/commands.py:2930
msgid "you can't specify a revision and a date"
msgstr "du kan ikke specificeret en revision og en dato"

#: mercurial/commands.py:2418
msgid "no files or directories specified; use --all to revert the whole repo"
msgstr ""
"ingen filer eller mapper specificeret; brug --all for at føre hele repo'et "
"tilbage"

#: mercurial/commands.py:2481
msgid "forgetting %s\n"
msgstr "glemmer %s\n"

#: mercurial/commands.py:2484
msgid "reverting %s\n"
msgstr "fører %s tilbage\n"

#: mercurial/commands.py:2487
msgid "undeleting %s\n"
msgstr ""

#: mercurial/commands.py:2509
msgid "saving current version of %s as %s\n"
msgstr "gemmer nuværende version af %s som %s\n"

#: mercurial/commands.py:2531
msgid "file not managed: %s\n"
msgstr ""

#: mercurial/commands.py:2535
msgid "no changes needed to %s\n"
msgstr ""

#: mercurial/commands.py:2597
msgid ""
"roll back the last transaction\n"
"\n"
"    This command should be used with care. There is only one level of\n"
"    rollback, and there is no way to undo a rollback. It will also\n"
"    restore the dirstate at the time of the last transaction, losing\n"
"    any dirstate changes since that time.\n"
"\n"
"    Transactions are used to encapsulate the effects of all commands\n"
"    that create new changesets or propagate existing changesets into a\n"
"    repository. For example, the following commands are transactional,\n"
"    and their effects can be rolled back:\n"
"\n"
"      commit\n"
"      import\n"
"      pull\n"
"      push (with this repository as destination)\n"
"      unbundle\n"
"\n"
"    This command is not intended for use on public repositories. Once\n"
"    changes are visible for pull by other users, rolling a transaction\n"
"    back locally is ineffective (someone else may already have pulled\n"
"    the changes). Furthermore, a race is possible with readers of the\n"
"    repository; for example an in-progress pull from the repository\n"
"    may fail if a rollback is performed.\n"
"    "
msgstr ""

#: mercurial/commands.py:2625
msgid ""
"print the root (top) of the current working dir\n"
"\n"
"    Print the root directory of the current repository.\n"
"    "
msgstr ""

#: mercurial/commands.py:2632
msgid ""
"export the repository via HTTP\n"
"\n"
"    Start a local HTTP repository browser and pull server.\n"
"\n"
"    By default, the server logs accesses to stdout and errors to\n"
"    stderr. Use the \"-A\" and \"-E\" options to log to files.\n"
"    "
msgstr ""

#: mercurial/commands.py:2685
msgid "listening at http://%s%s/%s (bound to %s:%d)\n"
msgstr "lytter på http://%s%s/%s (bundet til %s:%d)\n"

#: mercurial/commands.py:2696
msgid ""
"show changed files in the working directory\n"
"\n"
"    Show status of files in the repository. If names are given, only\n"
"    files that match are shown. Files that are clean or ignored or\n"
"    source of a copy/move operation, are not listed unless -c (clean),\n"
"    -i (ignored), -C (copies) or -A is given. Unless options described\n"
"    with \"show only ...\" are given, the options -mardu are used.\n"
"\n"
"    Option -q/--quiet hides untracked (unknown and ignored) files\n"
"    unless explicitly requested with -u/--unknown or -i/-ignored.\n"
"\n"
"    NOTE: status may appear to disagree with diff if permissions have\n"
"    changed or a merge has occurred. The standard diff format does not\n"
"    report permission changes and diff only reports changes relative\n"
"    to one merge parent.\n"
"\n"
"    If one revision is given, it is used as the base revision.\n"
"    If two revisions are given, the difference between them is shown.\n"
"\n"
"    The codes used to show the status of files are:\n"
"    M = modified\n"
"    A = added\n"
"    R = removed\n"
"    C = clean\n"
"    ! = deleted, but still tracked\n"
"    ? = not tracked\n"
"    I = ignored\n"
"      = the previous added file was copied from here\n"
"    "
msgstr ""

#: mercurial/commands.py:2767
msgid ""
"add one or more tags for the current or given revision\n"
"\n"
"    Name a particular revision using <name>.\n"
"\n"
"    Tags are used to name particular revisions of the repository and are\n"
"    very useful to compare different revisions, to go back to significant\n"
"    earlier versions or to mark branch points as releases, etc.\n"
"\n"
"    If no revision is given, the parent of the working directory is used,\n"
"    or tip if no revision is checked out.\n"
"\n"
"    To facilitate version control, distribution, and merging of tags,\n"
"    they are stored as a file named \".hgtags\" which is managed\n"
"    similarly to other project files and can be hand-edited if\n"
"    necessary. The file '.hg/localtags' is used for local tags (not\n"
"    shared among repositories).\n"
"\n"
"    See 'hg help dates' for a list of formats valid for -d/--date.\n"
"    "
msgstr ""

#: mercurial/commands.py:2790
msgid "tag names must be unique"
msgstr ""

#: mercurial/commands.py:2793
msgid "the name '%s' is reserved"
msgstr ""

#: mercurial/commands.py:2795
msgid "--rev and --remove are incompatible"
msgstr ""

#: mercurial/commands.py:2803
msgid "tag '%s' does not exist"
msgstr ""

#: mercurial/commands.py:2805
msgid "tag '%s' is not a %s tag"
msgstr ""

#: mercurial/commands.py:2809
msgid "Removed tag %s"
msgstr ""

#: mercurial/commands.py:2813
msgid "tag '%s' already exists (use -f to force)"
msgstr ""

#: mercurial/commands.py:2821
msgid "Added tag %s for changeset %s"
msgstr ""

#: mercurial/commands.py:2831
msgid ""
"list repository tags\n"
"\n"
"    This lists both regular and local tags. When the -v/--verbose switch\n"
"    is used, a third column \"local\" is printed for local tags.\n"
"    "
msgstr ""

#: mercurial/commands.py:2862
msgid ""
"show the tip revision\n"
"\n"
"    The tip revision (usually just called the tip) is the most\n"
"    recently added changeset in the repository, the most recently\n"
"    changed head.\n"
"\n"
"    If you have just made a commit, that commit will be the tip. If\n"
"    you have just pulled changes from another repository, the tip of\n"
"    that repository becomes the current tip. The \"tip\" tag is special\n"
"    and cannot be renamed or assigned to a different changeset.\n"
"    "
msgstr ""

#: mercurial/commands.py:2876
msgid ""
"apply one or more changegroup files\n"
"\n"
"    Apply one or more compressed changegroup files generated by the\n"
"    bundle command.\n"
"    "
msgstr ""

#: mercurial/commands.py:2896
msgid ""
"update working directory\n"
"\n"
"    Update the repository's working directory to the specified revision,\n"
"    or the tip of the current branch if none is specified. Use null as\n"
"    the revision to remove the working copy (like 'hg clone -U').\n"
"\n"
"    When the working dir contains no uncommitted changes, it will be\n"
"    replaced by the state of the requested revision from the repo.  When\n"
"    the requested revision is on a different branch, the working dir\n"
"    will additionally be switched to that branch.\n"
"\n"
"    When there are uncommitted changes, use option -C to discard them,\n"
"    forcibly replacing the state of the working dir with the requested\n"
"    revision.\n"
"\n"
"    When there are uncommitted changes and option -C is not used, and\n"
"    the parent revision and requested revision are on the same branch,\n"
"    and one of them is an ancestor of the other, then the new working\n"
"    directory will contain the requested revision merged with the\n"
"    uncommitted changes.  Otherwise, the update will fail with a\n"
"    suggestion to use 'merge' or 'update -C' instead.\n"
"\n"
"    If you want to update just one file to an older revision, use revert.\n"
"\n"
"    See 'hg help dates' for a list of formats valid for --date.\n"
"    "
msgstr ""

#: mercurial/commands.py:2939
msgid ""
"verify the integrity of the repository\n"
"\n"
"    Verify the integrity of the current repository.\n"
"\n"
"    This will perform an extensive check of the repository's\n"
"    integrity, validating the hashes and checksums of each entry in\n"
"    the changelog, manifest, and tracked files, as well as the\n"
"    integrity of their crosslinks and indices.\n"
"    "
msgstr ""

#: mercurial/commands.py:2951
msgid "output version and copyright information"
msgstr ""

#: mercurial/commands.py:2952
msgid "Mercurial Distributed SCM (version %s)\n"
msgstr "Mercurial Distributed SCM (version %s)\n"

#: mercurial/commands.py:2954
msgid ""
"\n"
"Copyright (C) 2005-2008 Matt Mackall <mpm@selenic.com> and others\n"
"This is free software; see the source for copying conditions. There is NO\n"
"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n"
msgstr ""

#: mercurial/commands.py:2965
msgid "repository root directory or symbolic path name"
msgstr ""

#: mercurial/commands.py:2966
msgid "change working directory"
msgstr "skift arbejdsbibliotek"

#: mercurial/commands.py:2968
msgid "do not prompt, assume 'yes' for any required answers"
msgstr "spørg ikke, antag alle svar er 'ja'"

#: mercurial/commands.py:2969
msgid "suppress output"
msgstr "undertryk output"

#: mercurial/commands.py:2970
msgid "enable additional output"
msgstr ""

#: mercurial/commands.py:2971
msgid "set/override config option"
msgstr ""

#: mercurial/commands.py:2972
msgid "enable debugging output"
msgstr ""

#: mercurial/commands.py:2973
msgid "start debugger"
msgstr ""

#: mercurial/commands.py:2974
msgid "set the charset encoding"
msgstr ""

#: mercurial/commands.py:2975
msgid "set the charset encoding mode"
msgstr ""

#: mercurial/commands.py:2976
msgid "print improved command execution profile"
msgstr ""

#: mercurial/commands.py:2977
msgid "print traceback on exception"
msgstr ""

#: mercurial/commands.py:2978
msgid "time how long the command takes"
msgstr ""

#: mercurial/commands.py:2979
msgid "print command execution profile"
msgstr ""

#: mercurial/commands.py:2980
msgid "output version information and exit"
msgstr ""

#: mercurial/commands.py:2981
msgid "display help and exit"
msgstr ""

#: mercurial/commands.py:2985
msgid "do not perform actions, just print output"
msgstr "udfør ingen handlinger, udskriv kun outputttet"

#: mercurial/commands.py:2988
msgid "specify ssh command to use"
msgstr "specificer ssh kommandoen som skal bruges"

#: mercurial/commands.py:2989
msgid "specify hg command to run on the remote side"
msgstr ""

#: mercurial/commands.py:2993
msgid "include names matching the given patterns"
msgstr "inkluder navne som matcher det givne mønster"

#: mercurial/commands.py:2994
msgid "exclude names matching the given patterns"
msgstr "ekskluder navne som matcher det givne mønster"

#: mercurial/commands.py:2998 mercurial/commands.py:3392
msgid "use <text> as commit message"
msgstr "brug <tekst> som commit-besked"

#: mercurial/commands.py:2999
msgid "read commit message from <file>"
msgstr "læs commit-beskeden fra <fil>"

#: mercurial/commands.py:3003
msgid "record datecode as commit date"
msgstr ""

#: mercurial/commands.py:3004
msgid "record user as committer"
msgstr ""

#: mercurial/commands.py:3008
msgid "display using template map file"
msgstr ""

#: mercurial/commands.py:3009
msgid "display with template"
msgstr ""

#: mercurial/commands.py:3015
msgid "do not show merges"
msgstr ""

#: mercurial/commands.py:3019 mercurial/commands.py:3049
msgid "treat all files as text"
msgstr "behandl alle filer som tekst"

#: mercurial/commands.py:3021
msgid "don't include dates in diff headers"
msgstr ""

#: mercurial/commands.py:3025
msgid "show which function each change is in"
msgstr ""

#: mercurial/commands.py:3027
msgid "ignore white space when comparing lines"
msgstr ""

#: mercurial/commands.py:3029
msgid "ignore changes in the amount of white space"
msgstr ""

#: mercurial/commands.py:3031
msgid "ignore changes whose lines are all blank"
msgstr ""

#: mercurial/commands.py:3032
msgid "number of lines of context to show"
msgstr ""

#: mercurial/commands.py:3037
msgid "guess renamed files by similarity (0<=s<=100)"
msgstr ""

#: mercurial/commands.py:3041 mercurial/commands.py:3044
#: mercurial/commands.py:3129 mercurial/commands.py:3157
#: mercurial/commands.py:3172 mercurial/commands.py:3333
#: mercurial/commands.py:3384
msgid "[OPTION]... [FILE]..."
msgstr ""

#: mercurial/commands.py:3047
msgid "annotate the specified revision"
msgstr ""

#: mercurial/commands.py:3048
msgid "follow file copies and renames"
msgstr ""

#: mercurial/commands.py:3050 mercurial/commands.py:3195
msgid "list the author (long with -v)"
msgstr ""

#: mercurial/commands.py:3051 mercurial/commands.py:3196
msgid "list the date (short with -q)"
msgstr ""

#: mercurial/commands.py:3052
msgid "list the revision number (default)"
msgstr ""

#: mercurial/commands.py:3053
msgid "list the changeset"
msgstr ""

#: mercurial/commands.py:3055
msgid "show line number at the first appearance"
msgstr ""

#: mercurial/commands.py:3057
msgid "[-r REV] [-f] [-a] [-u] [-d] [-n] [-c] [-l] FILE..."
msgstr ""

#: mercurial/commands.py:3060
msgid "do not pass files through decoders"
msgstr ""

#: mercurial/commands.py:3061
msgid "directory prefix for files in archive"
msgstr ""

#: mercurial/commands.py:3062
msgid "revision to distribute"
msgstr ""

#: mercurial/commands.py:3063
msgid "type of distribution to create"
msgstr ""

#: mercurial/commands.py:3065
msgid "[OPTION]... DEST"
msgstr ""

#: mercurial/commands.py:3069
msgid "merge with old dirstate parent after backout"
msgstr ""

#: mercurial/commands.py:3070
msgid "parent to choose when backing out merge"
msgstr ""

#: mercurial/commands.py:3071
msgid "revision to backout"
msgstr ""

#: mercurial/commands.py:3073
msgid "[OPTION]... [-r] REV"
msgstr ""

#: mercurial/commands.py:3076
msgid "reset bisect state"
msgstr "nulstil bisect"

#: mercurial/commands.py:3077
msgid "mark changeset good"
msgstr "marker ændring som god"

#: mercurial/commands.py:3078
msgid "mark changeset bad"
msgstr "marker ændring som dårlig"

#: mercurial/commands.py:3079
msgid "skip testing changeset"
msgstr ""

#: mercurial/commands.py:3080
msgid "use command to check changeset state"
msgstr ""

#: mercurial/commands.py:3081
msgid "do not update to target"
msgstr ""

#: mercurial/commands.py:3082
msgid "[-gbsr] [-c CMD] [REV]"
msgstr ""

#: mercurial/commands.py:3086
msgid "set branch name even if it shadows an existing branch"
msgstr ""

#: mercurial/commands.py:3087
msgid "reset branch name to parent branch name"
msgstr ""

#: mercurial/commands.py:3088
msgid "[-fC] [NAME]"
msgstr ""

#: mercurial/commands.py:3092
msgid "show only branches that have unmerged heads"
msgstr ""

#: mercurial/commands.py:3093
msgid "[-a]"
msgstr ""

#: mercurial/commands.py:3097 mercurial/commands.py:3231
#: mercurial/commands.py:3283 mercurial/commands.py:3300
msgid "run even when remote repository is unrelated"
msgstr ""

#: mercurial/commands.py:3099
msgid "a changeset up to which you would like to bundle"
msgstr ""

#: mercurial/commands.py:3101
msgid "a base changeset to specify instead of a destination"
msgstr ""

#: mercurial/commands.py:3102
msgid "bundle all changesets in the repository"
msgstr ""

#: mercurial/commands.py:3103
msgid "bundle compression type to use"
msgstr ""

#: mercurial/commands.py:3105
msgid "[-f] [-a] [-r REV]... [--base REV]... FILE [DEST]"
msgstr ""

#: mercurial/commands.py:3108 mercurial/commands.py:3180
msgid "print output to file with formatted name"
msgstr ""

#: mercurial/commands.py:3109
msgid "print the given revision"
msgstr ""

#: mercurial/commands.py:3110
msgid "apply any matching decode filter"
msgstr ""

#: mercurial/commands.py:3112 mercurial/commands.py:3319
msgid "[OPTION]... FILE..."
msgstr ""

#: mercurial/commands.py:3116
msgid "the clone will only contain a repository (no working copy)"
msgstr ""

#: mercurial/commands.py:3118
msgid "a changeset you would like to have after cloning"
msgstr ""

#: mercurial/commands.py:3123
msgid "[OPTION]... SOURCE [DEST]"
msgstr ""

#: mercurial/commands.py:3127
msgid "mark new/missing files as added/removed before committing"
msgstr ""

#: mercurial/commands.py:3132
msgid "record a copy that has already occurred"
msgstr ""

#: mercurial/commands.py:3134 mercurial/commands.py:3324
msgid "forcibly copy over an existing managed file"
msgstr ""

#: mercurial/commands.py:3136
msgid "[OPTION]... [SOURCE]... DEST"
msgstr ""

#: mercurial/commands.py:3137
msgid "[INDEX] REV1 REV2"
msgstr ""

#: mercurial/commands.py:3141
msgid "show the command options"
msgstr ""

#: mercurial/commands.py:3142
msgid "[-o] CMD"
msgstr ""

#: mercurial/commands.py:3145
msgid "try extended date formats"
msgstr ""

#: mercurial/commands.py:3146
msgid "[-e] DATE [RANGE]"
msgstr ""

#: mercurial/commands.py:3147
msgid "FILE REV"
msgstr ""

#: mercurial/commands.py:3148
msgid "[PATH]"
msgstr ""

#: mercurial/commands.py:3149 mercurial/commands.py:3150
msgid "FILE"
msgstr ""

#: mercurial/commands.py:3154
msgid "parent"
msgstr ""

#: mercurial/commands.py:3155
msgid "file list"
msgstr ""

#: mercurial/commands.py:3160
msgid "revision to rebuild to"
msgstr ""

#: mercurial/commands.py:3161
msgid "[-r REV] [REV]"
msgstr ""

#: mercurial/commands.py:3164
msgid "revision to debug"
msgstr ""

#: mercurial/commands.py:3165
msgid "[-r REV] FILE"
msgstr ""

#: mercurial/commands.py:3167
msgid "REV1 [REV2]"
msgstr ""

#: mercurial/commands.py:3170
msgid "do not display the saved mtime"
msgstr ""

#: mercurial/commands.py:3171 mercurial/commands.py:3363
msgid "[OPTION]..."
msgstr ""

#: mercurial/commands.py:3177
msgid "[OPTION]... [-r REV1 [-r REV2]] [FILE]..."
msgstr ""

#: mercurial/commands.py:3181
msgid "diff against the second parent"
msgstr ""

#: mercurial/commands.py:3183
msgid "[OPTION]... [-o OUTFILESPEC] REV..."
msgstr ""

#: mercurial/commands.py:3186
msgid "end fields with NUL"
msgstr ""

#: mercurial/commands.py:3187
msgid "print all revisions that match"
msgstr ""

#: mercurial/commands.py:3189 mercurial/commands.py:3255
msgid "follow changeset history, or file history across copies and renames"
msgstr ""

#: mercurial/commands.py:3190
msgid "ignore case when matching"
msgstr ""

#: mercurial/commands.py:3192
msgid "print only filenames and revs that match"
msgstr ""

#: mercurial/commands.py:3193
msgid "print matching line numbers"
msgstr ""

#: mercurial/commands.py:3194
msgid "search in given revision range"
msgstr ""

#: mercurial/commands.py:3198
msgid "[OPTION]... PATTERN [FILE]..."
msgstr ""

#: mercurial/commands.py:3201
msgid "show only heads which are descendants of rev"
msgstr ""

#: mercurial/commands.py:3203
msgid "[-r REV] [REV]..."
msgstr ""

#: mercurial/commands.py:3204
msgid "[TOPIC]"
msgstr ""

#: mercurial/commands.py:3207
msgid "identify the specified rev"
msgstr ""

#: mercurial/commands.py:3208
msgid "show local revision number"
msgstr ""

#: mercurial/commands.py:3209
msgid "show global revision id"
msgstr ""

#: mercurial/commands.py:3210
msgid "show branch"
msgstr ""

#: mercurial/commands.py:3211
msgid "show tags"
msgstr ""

#: mercurial/commands.py:3212
msgid "[-nibt] [-r REV] [SOURCE]"
msgstr ""

#: mercurial/commands.py:3216
msgid ""
"directory strip option for patch. This has the same\n"
"meaning as the corresponding patch option"
msgstr ""

#: mercurial/commands.py:3218
msgid "base path"
msgstr ""

#: mercurial/commands.py:3220
msgid "skip check for outstanding uncommitted changes"
msgstr ""

#: mercurial/commands.py:3221
msgid "don't commit, just update the working directory"
msgstr ""

#: mercurial/commands.py:3223
msgid "apply patch to the nodes from which it was generated"
msgstr ""

#: mercurial/commands.py:3225
msgid "Use any branch information in patch (implied by --exact)"
msgstr ""

#: mercurial/commands.py:3227
msgid "[OPTION]... PATCH..."
msgstr ""

#: mercurial/commands.py:3232 mercurial/commands.py:3286
msgid "show newest record first"
msgstr ""

#: mercurial/commands.py:3233
msgid "file to store the bundles into"
msgstr ""

#: mercurial/commands.py:3235 mercurial/commands.py:3302
msgid "a specific revision up to which you would like to pull"
msgstr ""

#: mercurial/commands.py:3237
msgid "[-p] [-n] [-M] [-f] [-r REV]... [--bundle FILENAME] [SOURCE]"
msgstr ""

#: mercurial/commands.py:3242
msgid "[-e CMD] [--remotecmd CMD] [DEST]"
msgstr ""

#: mercurial/commands.py:3245
msgid "search the repository as it stood at rev"
msgstr ""

#: mercurial/commands.py:3247 mercurial/commands.py:3381
msgid "end filenames with NUL, for use with xargs"
msgstr ""

#: mercurial/commands.py:3249
msgid "print complete paths from the filesystem root"
msgstr ""

#: mercurial/commands.py:3251
msgid "[OPTION]... [PATTERN]..."
msgstr ""

#: mercurial/commands.py:3257
msgid "only follow the first parent of merge changesets"
msgstr ""

#: mercurial/commands.py:3258
msgid "show revs matching date spec"
msgstr ""

#: mercurial/commands.py:3259
msgid "show copied files"
msgstr ""

#: mercurial/commands.py:3260
msgid "do case-insensitive search for a keyword"
msgstr ""

#: mercurial/commands.py:3262
msgid "include revs where files were removed"
msgstr ""

#: mercurial/commands.py:3263
msgid "show only merges"
msgstr ""

#: mercurial/commands.py:3264
msgid "revs committed by user"
msgstr ""

#: mercurial/commands.py:3266
msgid "show only changesets within the given named branch"
msgstr ""

#: mercurial/commands.py:3267
msgid "do not display revision or any of its ancestors"
msgstr ""

#: mercurial/commands.py:3269
msgid "[OPTION]... [FILE]"
msgstr ""

#: mercurial/commands.py:3272
msgid "revision to display"
msgstr ""

#: mercurial/commands.py:3273
msgid "[-r REV]"
msgstr ""

#: mercurial/commands.py:3276
msgid "force a merge with outstanding changes"
msgstr ""

#: mercurial/commands.py:3279
msgid "[-f] [[-r] REV]"
msgstr ""

#: mercurial/commands.py:3285 mercurial/commands.py:3309
msgid "a specific revision up to which you would like to push"
msgstr ""

#: mercurial/commands.py:3288
msgid "[-M] [-p] [-n] [-f] [-r REV]... [DEST]"
msgstr ""

#: mercurial/commands.py:3291
msgid "show parents from the specified rev"
msgstr ""

#: mercurial/commands.py:3293
msgid "hg parents [-r REV] [FILE]"
msgstr ""

#: mercurial/commands.py:3294
msgid "[NAME]"
msgstr ""

#: mercurial/commands.py:3298
msgid "update to new tip if changesets were pulled"
msgstr ""

#: mercurial/commands.py:3304
msgid "[-u] [-f] [-r REV]... [-e CMD] [--remotecmd CMD] [SOURCE]"
msgstr ""

#: mercurial/commands.py:3307
msgid "force push"
msgstr ""

#: mercurial/commands.py:3311
msgid "[-f] [-r REV]... [-e CMD] [--remotecmd CMD] [DEST]"
msgstr ""

#: mercurial/commands.py:3315
msgid "record delete for missing files"
msgstr ""

#: mercurial/commands.py:3317
msgid "remove (and delete) file even if added or modified"
msgstr ""

#: mercurial/commands.py:3322
msgid "record a rename that has already occurred"
msgstr ""

#: mercurial/commands.py:3326
msgid "[OPTION]... SOURCE... DEST"
msgstr ""

#: mercurial/commands.py:3329
msgid "remerge all unresolved files"
msgstr ""

#: mercurial/commands.py:3330
msgid "list state of files needing merge"
msgstr ""

#: mercurial/commands.py:3331
msgid "mark files as resolved"
msgstr ""

#: mercurial/commands.py:3332
msgid "unmark files as resolved"
msgstr ""

#: mercurial/commands.py:3336
msgid "revert all changes when no arguments given"
msgstr ""

#: mercurial/commands.py:3337 mercurial/commands.py:3409
msgid "tipmost revision matching date"
msgstr ""

#: mercurial/commands.py:3338
msgid "revision to revert to"
msgstr ""

#: mercurial/commands.py:3339
msgid "do not save backup copies of files"
msgstr ""

#: mercurial/commands.py:3341
msgid "[OPTION]... [-r REV] [NAME]..."
msgstr ""

#: mercurial/commands.py:3346
msgid "name of access log file to write to"
msgstr ""

#: mercurial/commands.py:3349
msgid "name of error log file to write to"
msgstr ""

#: mercurial/commands.py:3350
msgid "port to listen on (default: 8000)"
msgstr ""

#: mercurial/commands.py:3351
msgid "address to listen on (default: all interfaces)"
msgstr ""

#: mercurial/commands.py:3352
msgid "prefix path to serve from (default: server root)"
msgstr ""

#: mercurial/commands.py:3354
msgid "name to show in web pages (default: working dir)"
msgstr ""

#: mercurial/commands.py:3355
msgid "name of the webdir config file (serve more than one repo)"
msgstr ""

#: mercurial/commands.py:3358
msgid "for remote clients"
msgstr ""

#: mercurial/commands.py:3359
msgid "web templates to use"
msgstr ""

#: mercurial/commands.py:3360
msgid "template style to use"
msgstr ""

#: mercurial/commands.py:3361
msgid "use IPv6 in addition to IPv4"
msgstr ""

#: mercurial/commands.py:3362
msgid "SSL certificate file"
msgstr ""

#: mercurial/commands.py:3366
msgid "show untrusted configuration options"
msgstr ""

#: mercurial/commands.py:3367
msgid "[-u] [NAME]..."
msgstr ""

#: mercurial/commands.py:3370
msgid "show status of all files"
msgstr ""

#: mercurial/commands.py:3371
msgid "show only modified files"
msgstr ""

#: mercurial/commands.py:3372
msgid "show only added files"
msgstr ""

#: mercurial/commands.py:3373
msgid "show only removed files"
msgstr ""

#: mercurial/commands.py:3374
msgid "show only deleted (but tracked) files"
msgstr ""

#: mercurial/commands.py:3375
msgid "show only files without changes"
msgstr ""

#: mercurial/commands.py:3376
msgid "show only unknown (not tracked) files"
msgstr ""

#: mercurial/commands.py:3377
msgid "show only ignored files"
msgstr ""

#: mercurial/commands.py:3379
msgid "show source of copied files"
msgstr ""

#: mercurial/commands.py:3382
msgid "show difference from revision"
msgstr ""

#: mercurial/commands.py:3387
msgid "replace existing tag"
msgstr ""

#: mercurial/commands.py:3388
msgid "make the tag local"
msgstr ""

#: mercurial/commands.py:3389
msgid "revision to tag"
msgstr ""

#: mercurial/commands.py:3390
msgid "remove a tag"
msgstr ""

#: mercurial/commands.py:3394
msgid "[-l] [-m TEXT] [-d DATE] [-u USER] [-r REV] NAME..."
msgstr ""

#: mercurial/commands.py:3400
msgid "[-p]"
msgstr ""

#: mercurial/commands.py:3404
msgid "update to new tip if changesets were unbundled"
msgstr ""

#: mercurial/commands.py:3405
msgid "[-u] FILE..."
msgstr ""

#: mercurial/commands.py:3408
msgid "overwrite locally modified files (no backup)"
msgstr ""

#: mercurial/commands.py:3411
msgid "[-C] [-d DATE] [[-r] REV]"
msgstr ""

#: doc/gendoc.py:61
msgid "OPTIONS"
msgstr ""

#: doc/gendoc.py:66
msgid "COMMANDS"
msgstr ""

#: doc/gendoc.py:87
msgid "    options:\n"
msgstr ""

#: doc/gendoc.py:99
msgid ""
"    aliases: %s\n"
"\n"
msgstr "    aliaser %s:\n\n"

#: hgext/convert/bzr.py:67
msgid "%s is not a valid revision in current branch"
msgstr ""

#: hgext/convert/bzr.py:76
msgid "%s is not available in %s anymore"
msgstr ""

#: hgext/convert/common.py:27
msgid "cannot find required \"%s\" tool"
msgstr ""

#: hgext/convert/common.py:239
msgid "running: %s\n"
msgstr "kører: %s\n"

#: hgext/convert/common.py:261
msgid "%s error:\n"
msgstr ""

#: hgext/convert/common.py:264
msgid "%s %s"
msgstr ""

#: hgext/convert/common.py:348
msgid "could not open map file %r: %s"
msgstr ""

#: hgext/convert/convcmd.py:58
msgid "%s: missing or unsupported repository"
msgstr ""

#: hgext/convert/convcmd.py:66
msgid "convert: %s\n"
msgstr ""

#: hgext/convert/convcmd.py:67
msgid "%s: unknown repository type"
msgstr ""

#: hgext/convert/convcmd.py:174
msgid "cycle detected between %s and %s"
msgstr ""

#: hgext/convert/convcmd.py:182
msgid "not all revisions were sorted"
msgstr ""

#: hgext/convert/convcmd.py:189
msgid "Writing author map file %s\n"
msgstr ""

#: hgext/convert/convcmd.py:206
msgid "Overriding mapping for author %s, was %s, will be %s\n"
msgstr ""

#: hgext/convert/convcmd.py:209
msgid "mapping author %s to %s\n"
msgstr ""

#: hgext/convert/convcmd.py:214
msgid "Ignoring bad line in author map file %s: %s\n"
msgstr ""

#: hgext/convert/convcmd.py:246
msgid "spliced in %s as parents of %s\n"
msgstr ""

#: hgext/convert/convcmd.py:261
msgid "scanning source...\n"
msgstr ""

#: hgext/convert/convcmd.py:264
msgid "sorting...\n"
msgstr ""

#: hgext/convert/convcmd.py:269
msgid "converting...\n"
msgstr ""

#: hgext/convert/convcmd.py:279
msgid "source: %s\n"
msgstr ""

#: hgext/convert/convcmd.py:314
msgid "assuming destination %s\n"
msgstr ""

#: hgext/convert/cvs.py:57
msgid "revision %s is not a patchset number or date"
msgstr ""

#: hgext/convert/cvs.py:68
msgid "using builtin cvsps\n"
msgstr ""

#: hgext/convert/cvs.py:184
msgid "connecting to %s\n"
msgstr ""

#: hgext/convert/cvs.py:231
msgid "CVS pserver authentication failed"
msgstr ""

#: hgext/convert/cvs.py:274
msgid "server sucks"
msgstr ""

#: hgext/convert/cvs.py:293
msgid "%d bytes missing from remote file"
msgstr ""

#: hgext/convert/cvs.py:328
msgid "cvs server: %s\n"
msgstr ""

#: hgext/convert/cvs.py:332
msgid "unknown CVS response: %s"
msgstr ""

#: hgext/convert/cvsps.py:92
msgid "collecting CVS rlog\n"
msgstr ""

#: hgext/convert/cvsps.py:161
msgid "reading cvs log cache %s\n"
msgstr ""

#: hgext/convert/cvsps.py:163
msgid "cache has %d log entries\n"
msgstr ""

#: hgext/convert/cvsps.py:165
msgid "error reading cache: %r\n"
msgstr ""

#: hgext/convert/cvsps.py:192
msgid "prefix=%r directory=%r root=%r\n"
msgstr ""

#: hgext/convert/cvsps.py:237
msgid "RCS file must be followed by working file"
msgstr ""

#: hgext/convert/cvsps.py:272
msgid "must have at least some revisions"
msgstr ""

#: hgext/convert/cvsps.py:279
msgid "expected revision number"
msgstr ""

#: hgext/convert/cvsps.py:288
msgid "revision must be followed by date line"
msgstr ""

#: hgext/convert/cvsps.py:383
msgid "writing cvs log cache %s\n"
msgstr ""

#: hgext/convert/cvsps.py:388
msgid "%d log entries\n"
msgstr ""

#: hgext/convert/cvsps.py:409
msgid "creating changesets\n"
msgstr ""

#: hgext/convert/cvsps.py:590
msgid "%d changeset entries\n"
msgstr ""

#: hgext/convert/darcs.py:33
msgid "Python ElementTree module is not available"
msgstr ""

#: hgext/convert/darcs.py:69 hgext/convert/gnuarch.py:121
msgid "cleaning up %s\n"
msgstr ""

#: hgext/convert/darcs.py:118 hgext/convert/gnuarch.py:129
msgid "internal calling inconsistency"
msgstr ""

#: hgext/convert/filemap.py:31
msgid "errors in filemap"
msgstr ""

#: hgext/convert/filemap.py:37
msgid "%s:%d: %r already in %s list\n"
msgstr ""

#: hgext/convert/filemap.py:62
msgid "%s:%d: unknown directive %r\n"
msgstr ""

#: hgext/convert/filemap.py:226
msgid "source repository doesn't support --filemap"
msgstr ""

#: hgext/convert/gnuarch.py:28
msgid "%s does not look like a GNU Arch repo"
msgstr ""

#: hgext/convert/gnuarch.py:38
msgid "cannot find a GNU Arch tool"
msgstr ""

#: hgext/convert/gnuarch.py:76
msgid "analyzing tree version %s...\n"
msgstr ""

#: hgext/convert/gnuarch.py:80
msgid ""
"tree analysis stopped because it points to an unregistered archive %s...\n"
msgstr ""

#: hgext/convert/gnuarch.py:191
msgid "applying revision %s...\n"
msgstr ""

#: hgext/convert/gnuarch.py:201
msgid "computing changeset between %s and %s...\n"
msgstr ""

#: hgext/convert/gnuarch.py:250
msgid "obtaining revision %s...\n"
msgstr ""

#: hgext/convert/gnuarch.py:253
msgid "analysing revision %s...\n"
msgstr ""

#: hgext/convert/gnuarch.py:283
msgid "could not parse cat-log of %s"
msgstr ""

#: hgext/convert/hg.py:35 hgext/convert/hg.py:44
msgid "%s is not a local Mercurial repo"
msgstr ""

#: hgext/convert/hg.py:41
msgid "initializing destination %s repository\n"
msgstr ""

#: hgext/convert/hg.py:54
msgid "run hg sink pre-conversion action\n"
msgstr ""

#: hgext/convert/hg.py:59
msgid "run hg sink post-conversion action\n"
msgstr ""

#: hgext/convert/hg.py:107
msgid "pulling from %s into %s\n"
msgstr ""

#: hgext/convert/hg.py:180
msgid "updating tags\n"
msgstr ""

#: hgext/convert/hg.py:217
msgid "%s is not a valid start revision"
msgstr ""

#: hgext/convert/hg.py:290
msgid "ignoring: %s\n"
msgstr "ignorerer: %s\n"

#: hgext/convert/hg.py:333
msgid "run hg source pre-conversion action\n"
msgstr ""

#: hgext/convert/hg.py:336
msgid "run hg source post-conversion action\n"
msgstr ""

#: hgext/convert/monotone.py:42
msgid "%s does not look like a monotone repo"
msgstr ""

#: hgext/convert/monotone.py:158
msgid "copying file in renamed dir from '%s' to '%s'"
msgstr ""

#: hgext/convert/subversion.py:158
msgid "Subversion python bindings could not be loaded"
msgstr ""

#: hgext/convert/subversion.py:163
msgid "Subversion python bindings %d.%d found, 1.4 or later required"
msgstr ""

#: hgext/convert/subversion.py:166
msgid "Subversion python bindings are too old, 1.4 or later required"
msgstr ""

#: hgext/convert/subversion.py:205
msgid "svn: revision %s is not an integer"
msgstr ""

#: hgext/convert/subversion.py:213
msgid "svn: start revision %s is not an integer"
msgstr ""

#: hgext/convert/subversion.py:223 hgext/convert/subversion.py:284
msgid "no revision found in module %s"
msgstr ""

#: hgext/convert/subversion.py:265
msgid "expected %s to be at %r, but not found"
msgstr ""

#: hgext/convert/subversion.py:268
msgid "found %s at %r\n"
msgstr ""

#: hgext/convert/subversion.py:303
msgid "ignoring empty branch %s\n"
msgstr ""

#: hgext/convert/subversion.py:306
msgid "found branch %s at %d\n"
msgstr ""

#: hgext/convert/subversion.py:312
msgid "svn: start revision is not supported with with more than one branch"
msgstr ""

#: hgext/convert/subversion.py:316
msgid "svn: no revision found after start revision %d"
msgstr ""

#: hgext/convert/subversion.py:442
msgid "no tags found at revision %d\n"
msgstr ""

#: hgext/convert/subversion.py:483 hgext/convert/subversion.py:519
msgid "ignoring foreign branch %r\n"
msgstr ""

#: hgext/convert/subversion.py:495
msgid "%s not found up to revision %d"
msgstr ""

#: hgext/convert/subversion.py:511
msgid "branch renamed from %s to %s at %d\n"
msgstr ""

#: hgext/convert/subversion.py:550
msgid "reparent to %s\n"
msgstr ""

#: hgext/convert/subversion.py:582
msgid "copied to %s from %s@%s\n"
msgstr ""

#: hgext/convert/subversion.py:586
msgid "gone from %s\n"
msgstr ""

#: hgext/convert/subversion.py:604
msgid "found parent directory %s\n"
msgstr ""

#: hgext/convert/subversion.py:608
msgid "base, entry %s %s\n"
msgstr ""

#: hgext/convert/subversion.py:614
msgid "munge-o-matic\n"
msgstr ""

#: hgext/convert/subversion.py:619
msgid "info: %s %s %s %s\n"
msgstr ""

#: hgext/convert/subversion.py:660
msgid "unknown path in revision %d: %s\n"
msgstr ""

#: hgext/convert/subversion.py:706
msgid "mark %s came from %s:%d\n"
msgstr ""

#: hgext/convert/subversion.py:731
msgid "parsing revision %d (%d changes)\n"
msgstr ""

#: hgext/convert/subversion.py:757
msgid "found parent of branch %s at %d: %s\n"
msgstr ""

#: hgext/convert/subversion.py:760
msgid "no copyfrom path, don't know what to do.\n"
msgstr ""

#: hgext/convert/subversion.py:799
msgid "fetching revision log for \"%s\" from %d to %d\n"
msgstr ""

#: hgext/convert/subversion.py:813
msgid "skipping blacklisted revision %d\n"
msgstr ""

#: hgext/convert/subversion.py:817
msgid "revision %d has no entries\n"
msgstr ""

#: hgext/convert/subversion.py:842
msgid "svn: branch has no revision %s"
msgstr ""

#: hgext/convert/subversion.py:899
msgid "%r is not under %r, ignoring\n"
msgstr ""

#: hgext/convert/subversion.py:983
msgid "initializing svn repo %r\n"
msgstr ""

#: hgext/convert/subversion.py:992
msgid "initializing svn wc %r\n"
msgstr ""

#: hgext/convert/subversion.py:1151
msgid "unexpected svn output:\n"
msgstr ""

#: hgext/convert/subversion.py:1153
msgid "unable to cope with svn output"
msgstr ""

#: hgext/convert/subversion.py:1167
msgid "XXX TAGS NOT IMPLEMENTED YET\n"
msgstr ""

#: hgext/inotify/client.py:45
msgid "(inotify: received response from incompatible server version %d)\n"
msgstr ""

#: hgext/inotify/server.py:106
msgid "this system does not seem to support inotify"
msgstr ""

#: hgext/inotify/server.py:108
msgid "*** the current per-user limit on the number of inotify watches is %s\n"
msgstr ""

#: hgext/inotify/server.py:110
msgid "*** this limit is too low to watch every directory in this repository\n"
msgstr ""

#: hgext/inotify/server.py:112
msgid "*** counting directories: "
msgstr ""

#: hgext/inotify/server.py:114
msgid "found %d\n"
msgstr ""

#: hgext/inotify/server.py:118
msgid "*** to raise the limit from %d to %d (run as root):\n"
msgstr ""

#: hgext/inotify/server.py:120
msgid "***  echo %d > %s\n"
msgstr ""

#: hgext/inotify/server.py:121
msgid "cannot watch %s until inotify watch limit is raised"
msgstr ""

#: hgext/inotify/server.py:149
msgid "inotify service not available: %s"
msgstr ""

#: hgext/inotify/server.py:198
msgid "watching %r\n"
msgstr ""

#: hgext/inotify/server.py:210
msgid "watching directories under %r\n"
msgstr ""

#: hgext/inotify/server.py:293
msgid "status: %r dir(%d) -> %s\n"
msgstr ""

#: hgext/inotify/server.py:296
msgid "status: %r %s -> %s\n"
msgstr ""

#: hgext/inotify/server.py:356
msgid "%s dirstate reload\n"
msgstr ""

#: hgext/inotify/server.py:359
msgid "%s end dirstate reload\n"
msgstr ""

#: hgext/inotify/server.py:386
msgid "rescanning due to .hgignore change\n"
msgstr ""

#: hgext/inotify/server.py:461
msgid "%s event: created %s\n"
msgstr ""

#: hgext/inotify/server.py:471
msgid "%s event: deleted %s\n"
msgstr ""

#: hgext/inotify/server.py:481
msgid "%s event: modified %s\n"
msgstr ""

#: hgext/inotify/server.py:488
msgid "filesystem containing %s was unmounted\n"
msgstr ""

#: hgext/inotify/server.py:494
msgid "%s readable: %d bytes\n"
msgstr ""

#: hgext/inotify/server.py:499
msgid "%s below threshold - unhooking\n"
msgstr ""

#: hgext/inotify/server.py:510
msgid "%s reading %d events\n"
msgstr ""

#: hgext/inotify/server.py:527
msgid "%s hooking back up with %d bytes readable\n"
msgstr ""

#: hgext/inotify/server.py:535
msgid "%s processing %d deferred events as %d\n"
msgstr ""

#: hgext/inotify/server.py:563 hgext/inotify/server.py:578
msgid "could not start server: %s"
msgstr ""

#: hgext/inotify/server.py:598
msgid "received query from incompatible client version %d\n"
msgstr ""

#: hgext/inotify/server.py:606
msgid "answering query for %r\n"
msgstr ""

#: hgext/inotify/server.py:684
msgid "finished setup\n"
msgstr ""

#: hgext/inotify/server.py:696
msgid "polling: no timeout\n"
msgstr ""

#: hgext/inotify/server.py:698
msgid "polling: %sms timeout\n"
msgstr ""

#: mercurial/archival.py:33
msgid "archive prefix contains illegal components"
msgstr "arkivpræfix indeholder ugyldige komponenter"

#: mercurial/archival.py:162
msgid "cannot give prefix when archiving to files"
msgstr "kan ikke give præfix ved arkivering til filer"

#: mercurial/archival.py:212
msgid "unknown archive type '%s'"
msgstr "ukendt arkivtype '%s'"

#: mercurial/bundlerepo.py:42
msgid "invalid changegroup"
msgstr ""

#: mercurial/bundlerepo.py:52 mercurial/revlog.py:1214
msgid "unknown parent"
msgstr "ukendt forældre"

#: mercurial/bundlerepo.py:122 mercurial/revlog.py:989
msgid "integrity check failed on %s:%d"
msgstr "integritetstjek fejlede på %s:%d"

#: mercurial/bundlerepo.py:173 mercurial/changegroup.py:136
msgid "%s: not a Mercurial bundle file"
msgstr "%s er ikke en Mercurial bundle fil"

#: mercurial/bundlerepo.py:175 mercurial/changegroup.py:138
msgid "%s: unknown bundle version"
msgstr "%s: ukendt bundle version"

#: mercurial/bundlerepo.py:206 mercurial/changegroup.py:140
msgid "%s: unknown bundle compression type"
msgstr "%s: ukendt bundle kompressionstype"

#: mercurial/bundlerepo.py:276
msgid "cannot create new bundle repository"
msgstr ""

#: mercurial/changegroup.py:23
msgid "premature EOF reading chunk (got %d bytes, expected %d)"
msgstr "for tidlig EOF ved læsning af chunk (fik %d bytes, forventede %d)"

#: mercurial/changelog.py:182
msgid "username %s contains a newline"
msgstr "brugernavn %s indeholder et linieskift"

#: mercurial/cmdutil.py:80
msgid "options --message and --logfile are mutually exclusive"
msgstr ""

#: mercurial/cmdutil.py:89
msgid "can't read commit message '%s': %s"
msgstr "Kan ikke lase commit besked '%s': %s"

#: mercurial/cmdutil.py:134 mercurial/cmdutil.py:138
msgid "too many revisions specified"
msgstr "der er specificeret for mange revisioner"

#: mercurial/cmdutil.py:212
msgid "invalid format spec '%%%s' in output file name"
msgstr ""

#: mercurial/cmdutil.py:312
msgid "recording removal of %s as rename to %s (%d%% similar)\n"
msgstr "noterer fjernelse af %s som en omdøbning til %s (%d%% lighed)\n"

#: mercurial/cmdutil.py:337
msgid "%s: not copying - file is not managed\n"
msgstr "%s: kopierer ikke - filen er ikke versionsstyret\n"

#: mercurial/cmdutil.py:339
msgid "%s: not copying - file has been marked for remove\n"
msgstr "%s: kopierer ikke - filen er markeret til sletning\n"

#: mercurial/cmdutil.py:360
msgid "%s: not overwriting - %s collides with %s\n"
msgstr "%s: overskriver ikke - %s kolliderer med %s\n"

#: mercurial/cmdutil.py:369
msgid "%s: not overwriting - file exists\n"
msgstr "%s: overskriver ikke - filen eksisterer\n"

#: mercurial/cmdutil.py:386
msgid "%s: deleted in working copy\n"
msgstr "%s: slettet i arbejdskopien\n"

#: mercurial/cmdutil.py:388
msgid "%s: cannot copy - %s\n"
msgstr "%s: kan ikke kopiere - %s\n"

#: mercurial/cmdutil.py:394
msgid "%s %s to %s\n"
msgstr "%s: %s til %s\n"

#: mercurial/cmdutil.py:406
msgid "%s has not been committed yet, so no copy data will be stored for %s.\n"
msgstr ""
"%s er endnu ikke comitted, så der vil ikke blive gemt kopieringsdata for %"
"s.\n"

#: mercurial/cmdutil.py:486
msgid "no source or destination specified"
msgstr "ingen kilde eller destination angivet"

#: mercurial/cmdutil.py:488
msgid "no destination specified"
msgstr "ingen destination angivet"

#: mercurial/cmdutil.py:493
msgid "with multiple sources, destination must be an existing directory"
msgstr ""
"destinationen skal være en eksisterende mappe når der angivet flere kilder"

#: mercurial/cmdutil.py:496
msgid "destination %s is not a directory"
msgstr "destinationen %s er ikke en mappe"

#: mercurial/cmdutil.py:508
msgid "no files to copy"
msgstr "ingen filer at kopiere"

#: mercurial/cmdutil.py:517
msgid "(consider using --after)\n"
msgstr "(overvej at bruge --after)\n"

#: mercurial/cmdutil.py:627
msgid "changeset:   %d:%s\n"
msgstr "ændring:     %d:%s\n"

#: mercurial/cmdutil.py:632
msgid "branch:      %s\n"
msgstr "gren:        %s\n"

#: mercurial/cmdutil.py:634
msgid "tag:         %s\n"
msgstr "mærkat:      %s\n"

#: mercurial/cmdutil.py:636
msgid "parent:      %d:%s\n"
msgstr "forældre:    %d:%s\n"

#: mercurial/cmdutil.py:639
msgid "manifest:    %d:%s\n"
msgstr ""

#: mercurial/cmdutil.py:641
msgid "user:        %s\n"
msgstr "bruger:      %s\n"

#: mercurial/cmdutil.py:642
msgid "date:        %s\n"
msgstr "dato:        %s\n"

#: mercurial/cmdutil.py:646
msgid "files+:"
msgstr "filer+:"

#: mercurial/cmdutil.py:646
msgid "files-:"
msgstr "filer-:"

#: mercurial/cmdutil.py:646
msgid "files:"
msgstr ""

#: mercurial/cmdutil.py:651
msgid "files:       %s\n"
msgstr "filer:       %s\n"

#: mercurial/cmdutil.py:654
msgid "copies:      %s\n"
msgstr "kopier:      %s\n"

#: mercurial/cmdutil.py:658
msgid "extra:       %s=%s\n"
msgstr "ekstra:      %s=%s\n"

#: mercurial/cmdutil.py:664
msgid "description:\n"
msgstr "beskrivelse:\n"

#: mercurial/cmdutil.py:668
msgid "summary:     %s\n"
msgstr "uddrag:      %s\n"

#: mercurial/cmdutil.py:878
msgid "%s: no key named '%s'"
msgstr ""

#: mercurial/cmdutil.py:881
msgid "%s: %s"
msgstr ""

#: mercurial/cmdutil.py:940
msgid "Found revision %s from %s\n"
msgstr ""

#: mercurial/cmdutil.py:944
msgid "revision matching date not found"
msgstr ""

#: mercurial/cmdutil.py:1037
msgid "cannot follow nonexistent file: \"%s\""
msgstr ""

#: mercurial/cmdutil.py:1041
msgid "%s:%s copy source revision cannot be found!\n"
msgstr ""

#: mercurial/cmdutil.py:1055
msgid "can only follow copies/renames for explicit file names"
msgstr ""

#: mercurial/cmdutil.py:1177
msgid "file %s not found!"
msgstr "filen %s blev ikke fundet!"

#: mercurial/cmdutil.py:1180
msgid "no match under directory %s!"
msgstr ""

#: mercurial/cmdutil.py:1183
msgid "can't commit %s: unsupported file type!"
msgstr ""

#: mercurial/cmdutil.py:1186
msgid "file %s not tracked!"
msgstr ""

#: mercurial/context.py:129 mercurial/context.py:136
msgid "not found in manifest"
msgstr ""

#: mercurial/context.py:504
msgid "branch name not in UTF-8!"
msgstr ""

#: mercurial/copies.py:147
msgid "  searching for copies back to rev %d\n"
msgstr ""

#: mercurial/copies.py:153
msgid ""
"  unmatched files in local:\n"
"   %s\n"
msgstr ""

#: mercurial/copies.py:156
msgid ""
"  unmatched files in other:\n"
"   %s\n"
msgstr ""

#: mercurial/copies.py:172
msgid "  all copies found (* = to merge, ! = divergent):\n"
msgstr ""

#: mercurial/copies.py:177
msgid "   %s -> %s %s\n"
msgstr ""

#: mercurial/copies.py:183
msgid "  checking for directory renames\n"
msgstr ""

#: mercurial/copies.py:219
msgid "  dir %s -> %s\n"
msgstr ""

#: mercurial/copies.py:230
msgid "  file %s -> %s\n"
msgstr ""

#: mercurial/dirstate.py:244
msgid "'\\n' and '\\r' disallowed in filenames: %r"
msgstr ""

#: mercurial/dirstate.py:246
msgid "directory %r already in dirstate"
msgstr ""

#: mercurial/dirstate.py:253
msgid "file %r in dirstate clashes with %r"
msgstr ""

#: mercurial/dirstate.py:336
msgid "not in dirstate: %s\n"
msgstr ""

#: mercurial/dirstate.py:425
msgid "character device"
msgstr ""

#: mercurial/dirstate.py:426
msgid "block device"
msgstr ""

#: mercurial/dirstate.py:427
msgid "fifo"
msgstr ""

#: mercurial/dirstate.py:428
msgid "socket"
msgstr ""

#: mercurial/dirstate.py:429
msgid "directory"
msgstr ""

#: mercurial/dirstate.py:430
msgid "%s: unsupported file type (type is %s)\n"
msgstr ""

#: mercurial/dispatch.py:27 mercurial/dispatch.py:93 mercurial/dispatch.py:96
#: mercurial/dispatch.py:110 mercurial/dispatch.py:117
#: mercurial/dispatch.py:135
msgid "abort: %s\n"
msgstr "afbrudt: %s\n"

#: mercurial/dispatch.py:57
msgid "hg %s: %s\n"
msgstr "hg %s: %s\n"

#: mercurial/dispatch.py:60
msgid "hg: %s\n"
msgstr "hg: %s\n"

#: mercurial/dispatch.py:63
msgid ""
"hg: command '%s' is ambiguous:\n"
"    %s\n"
msgstr ""
"hg: kommandoen '%s' is tvetydig:\n"
"    %s\n"

#: mercurial/dispatch.py:66
msgid "hg: unknown command '%s'\n"
msgstr "hg: ukendt kommando '%s'\n"

#: mercurial/dispatch.py:69 mercurial/dispatch.py:80
msgid "abort: %s!\n"
msgstr "afbrudt: %s!\n"

#: mercurial/dispatch.py:72
msgid "timed out waiting for lock held by %s"
msgstr ""

#: mercurial/dispatch.py:74
msgid "lock held by %s"
msgstr ""

#: mercurial/dispatch.py:75 mercurial/dispatch.py:108
#: mercurial/dispatch.py:115
msgid "abort: %s: %s\n"
msgstr "afbrudt: %s: %s\n"

#: mercurial/dispatch.py:77
msgid "abort: could not lock %s: %s\n"
msgstr "afbrudt: kunne ikke låse %s: %s\n"

#: mercurial/dispatch.py:82
msgid "killed!\n"
msgstr "dræbt!\n"

#: mercurial/dispatch.py:85
msgid "interrupted!\n"
msgstr "standset!\n"

#: mercurial/dispatch.py:89
msgid ""
"\n"
"broken pipe\n"
msgstr ""

#: mercurial/dispatch.py:102
msgid "abort: error: %s\n"
msgstr ""

#: mercurial/dispatch.py:105
msgid "broken pipe\n"
msgstr ""

#: mercurial/dispatch.py:119
msgid "abort: %s"
msgstr "afbrudt: %s"

#: mercurial/dispatch.py:123
msgid " empty string\n"
msgstr " tom streng\n"

#: mercurial/dispatch.py:128
msgid "abort: could not import module %s!\n"
msgstr "afbrudt: kunne ikke importere modul %s!\n"

#: mercurial/dispatch.py:130
msgid "(did you forget to compile extensions?)\n"
msgstr "(glemte du at kompilere udvidelserne?)\n"

#: mercurial/dispatch.py:132
msgid "(is your Python install correct?)\n"
msgstr "(er din Python installeret korrekt?)\n"

#: mercurial/dispatch.py:137
msgid "abort: out of memory\n"
msgstr "afbrudt: løbet tør for hukommelse\n"

#: mercurial/dispatch.py:143
msgid "** unknown exception encountered, details follow\n"
msgstr "** der opstod en ukendt fejl, detaljer følger\n"

#: mercurial/dispatch.py:144
msgid "** report bug details to http://www.selenic.com/mercurial/bts\n"
msgstr "** angiv fejldetaljer på http://www.selenic.com/mercurial/bts\n"

#: mercurial/dispatch.py:146
msgid "** or mercurial@selenic.com\n"
msgstr "** eller mercurial@selenic.com\n"

#: mercurial/dispatch.py:147
msgid "** Mercurial Distributed SCM (version %s)\n"
msgstr "** Mercurial Distributed SCM (version %s)\n"

#: mercurial/dispatch.py:149
msgid "** Extensions loaded: %s\n"
msgstr ""

#: mercurial/dispatch.py:213
msgid "malformed --config option: %s"
msgstr ""

#: mercurial/dispatch.py:292
msgid "extension '%s' overrides commands: %s\n"
msgstr ""

#: mercurial/dispatch.py:305
msgid "Option --config may not be abbreviated!"
msgstr ""

#: mercurial/dispatch.py:307
msgid "Option --cwd may not be abbreviated!"
msgstr ""

#: mercurial/dispatch.py:309
msgid ""
"Option -R has to be separated from other options (i.e. not -qR) and --"
"repository may only be abbreviated as --repo!"
msgstr ""

#: mercurial/dispatch.py:326
msgid "Time: real %.3f secs (user %.3f+%.3f sys %.3f+%.3f)\n"
msgstr ""

#: mercurial/dispatch.py:346
msgid "repository '%s' is not local"
msgstr ""

#: mercurial/dispatch.py:378
msgid "invalid arguments"
msgstr ""

#: mercurial/dispatch.py:388
msgid "exception raised - generating profile anyway\n"
msgstr ""

#: mercurial/dispatch.py:403
msgid ""
"lsprof not available - install from http://codespeak.net/svn/user/arigo/hack/"
"misc/lsprof/"
msgstr ""

#: mercurial/extensions.py:82
msgid "*** failed to import extension %s from %s: %s\n"
msgstr ""

#: mercurial/extensions.py:85
msgid "*** failed to import extension %s: %s\n"
msgstr ""

#: mercurial/filemerge.py:37 mercurial/filemerge.py:39
msgid "couldn't find merge tool %s\n"
msgstr ""

#: mercurial/filemerge.py:41
msgid "tool %s can't handle symlinks\n"
msgstr ""

#: mercurial/filemerge.py:43
msgid "tool %s can't handle binary\n"
msgstr ""

#: mercurial/filemerge.py:45
msgid "tool %s requires a GUI\n"
msgstr ""

#: mercurial/filemerge.py:139
msgid "picked tool '%s' for %s (binary %s symlink %s)\n"
msgstr ""

#: mercurial/filemerge.py:144
msgid ""
" no tool found to merge %s\n"
"keep (l)ocal or take (o)ther?"
msgstr ""

#: mercurial/filemerge.py:146
msgid "[lo]"
msgstr ""

#: mercurial/filemerge.py:146
msgid "l"
msgstr ""

#: mercurial/filemerge.py:165
msgid "merging %s and %s to %s\n"
msgstr ""

#: mercurial/filemerge.py:167
msgid "merging %s\n"
msgstr ""

#: mercurial/filemerge.py:169
msgid "my %s other %s ancestor %s\n"
msgstr ""

#: mercurial/filemerge.py:175
msgid " premerge successful\n"
msgstr ""

#: mercurial/filemerge.py:206
msgid ""
" output file %s appears unchanged\n"
"was merge successful (yn)?"
msgstr ""

#: mercurial/filemerge.py:208
msgid "[yn]"
msgstr ""

#: mercurial/filemerge.py:208
msgid "n"
msgstr ""

#: mercurial/filemerge.py:215
msgid "merging %s failed!\n"
msgstr ""

#: mercurial/hbisect.py:55
msgid "Inconsistent state, %s:%s is good and bad"
msgstr ""

#: mercurial/hbisect.py:129
msgid "unknown bisect kind %s"
msgstr ""

#: mercurial/help.py:11
msgid "Date Formats"
msgstr "Datoformater"

#: mercurial/help.py:12
msgid ""
"\n"
"    Some commands allow the user to specify a date:\n"
"    backout, commit, import, tag: Specify the commit date.\n"
"    log, revert, update: Select revision(s) by date.\n"
"\n"
"    Many date formats are valid. Here are some examples:\n"
"\n"
"    \"Wed Dec 6 13:18:29 2006\" (local timezone assumed)\n"
"    \"Dec 6 13:18 -0600\" (year assumed, time offset provided)\n"
"    \"Dec 6 13:18 UTC\" (UTC and GMT are aliases for +0000)\n"
"    \"Dec 6\" (midnight)\n"
"    \"13:18\" (today assumed)\n"
"    \"3:39\" (3:39AM assumed)\n"
"    \"3:39pm\" (15:39)\n"
"    \"2006-12-06 13:18:29\" (ISO 8601 format)\n"
"    \"2006-12-6 13:18\"\n"
"    \"2006-12-6\"\n"
"    \"12-6\"\n"
"    \"12/6\"\n"
"    \"12/6/6\" (Dec 6 2006)\n"
"\n"
"    Lastly, there is Mercurial's internal format:\n"
"\n"
"    \"1165432709 0\" (Wed Dec 6 13:18:29 2006 UTC)\n"
"\n"
"    This is the internal representation format for dates. unixtime is\n"
"    the number of seconds since the epoch (1970-01-01 00:00 UTC). offset\n"
"    is the offset of the local timezone, in seconds west of UTC (negative\n"
"    if the timezone is east of UTC).\n"
"\n"
"    The log command also accepts date ranges:\n"
"\n"
"    \"<{date}\" - on or before a given date\n"
"    \">{date}\" - on or after a given date\n"
"    \"{date} to {date}\" - a date range, inclusive\n"
"    \"-{days}\" - within a given number of days of today\n"
"    "
msgstr ""
"\n"
"    Nogle kommandoer tillader brugeren at specificere en dato:\n"
"    backout, commit, import, tag: specificer commit-datoen.\n"
"    log, revert, update: vælg revisioner efter dato.\n"
"\n"
"    Der er mange gyldige datoformater. Her er nogle eksempler:\n"
"\n"
"    \"Wed Dec 6 13:18:29 2006\" (antager lokal tidszone)\n"
"    \"Dec 6 13:18 -0600\" (antager år, tidszone er angivet)\n"
"    \"Dec 6 13:18 UTC\" (UTC og GMT er aliaser for +0000)\n"
"    \"Dec 6\" (midnat)\n"
"    \"13:18\" (antager dags dato)\n"
"    \"3:39\"\n"
"    \"3:39pm\" (15:39)\n"
"    \"2006-12-06 13:18:29\" (ISO 8601 format)\n"
"    \"2006-12-6 13:18\"\n"
"    \"2006-12-6\"\n"
"    \"12-6\"\n"
"    \"12/6\"\n"
"    \"12/6/6\" (6. dec. 2006)\n"
"\n"
"    Endelig er der Mercurials interne format:\n"
"\n"
"    \"1165432709 0\" (Ons 6. dec. 13:18:29 2006 UTC)\n"
"\n"
"    Dette er den interne repræsentation af datoer. unixtime er\n"
"    antallet af sekunder siden begyndelsen af epoken (1970-01-01 00:00\n"
"    UTC). offset er den lokale tidszone, angivet i antal sekunder vest\n"
"    for UTC (negativ hvis tidszonen er øst for UTC).\n"
"\n"
"    Kommandoen log accepterer også datointervaller:\n"
"\n"
"    \"<{date}\" - på eller før den angivne dato\n"
"    \">{date}\" - på eller efter den angivne dato\n"
"    \"{date} to {date}\" - et datointerval, inklusiv endepunkterne\n"
"    \"-{days}\" - indenfor et angivet antal dage, fra dags dato\n"
"    "

#: mercurial/help.py:50
msgid "File Name Patterns"
msgstr ""

#: mercurial/help.py:51
msgid ""
"\n"
"    Mercurial accepts several notations for identifying one or more\n"
"    files at a time.\n"
"\n"
"    By default, Mercurial treats filenames as shell-style extended\n"
"    glob patterns.\n"
"\n"
"    Alternate pattern notations must be specified explicitly.\n"
"\n"
"    To use a plain path name without any pattern matching, start a\n"
"    name with \"path:\".  These path names must match completely, from\n"
"    the root of the current repository.\n"
"\n"
"    To use an extended glob, start a name with \"glob:\".  Globs are\n"
"    rooted at the current directory; a glob such as \"*.c\" will match\n"
"    files ending in \".c\" in the current directory only.\n"
"\n"
"    The supported glob syntax extensions are \"**\" to match any string\n"
"    across path separators, and \"{a,b}\" to mean \"a or b\".\n"
"\n"
"    To use a Perl/Python regular expression, start a name with \"re:\".\n"
"    Regexp pattern matching is anchored at the root of the repository.\n"
"\n"
"    Plain examples:\n"
"\n"
"    path:foo/bar   a name bar in a directory named foo in the root of\n"
"                   the repository\n"
"    path:path:name a file or directory named \"path:name\"\n"
"\n"
"    Glob examples:\n"
"\n"
"    glob:*.c       any name ending in \".c\" in the current directory\n"
"    *.c            any name ending in \".c\" in the current directory\n"
"    **.c           any name ending in \".c\" in the current directory, or\n"
"                   any subdirectory\n"
"    foo/*.c        any name ending in \".c\" in the directory foo\n"
"    foo/**.c       any name ending in \".c\" in the directory foo, or any\n"
"                   subdirectory\n"
"\n"
"    Regexp examples:\n"
"\n"
"    re:.*\\.c$      any name ending in \".c\", anywhere in the repository\n"
"\n"
"    "
msgstr ""

#: mercurial/help.py:96
msgid "Environment Variables"
msgstr "Miljøvariable"

#: mercurial/help.py:97
msgid ""
"\n"
"HG::\n"
"    Path to the 'hg' executable, automatically passed when running hooks,\n"
"    extensions or external tools. If unset or empty, an executable named\n"
"    'hg' (with com/exe/bat/cmd extension on Windows) is searched.\n"
"\n"
"HGEDITOR::\n"
"    This is the name of the editor to use when committing. See EDITOR.\n"
"\n"
"    (deprecated, use .hgrc)\n"
"\n"
"HGENCODING::\n"
"    This overrides the default locale setting detected by Mercurial.\n"
"    This setting is used to convert data including usernames,\n"
"    changeset descriptions, tag names, and branches. This setting can\n"
"    be overridden with the --encoding command-line option.\n"
"\n"
"HGENCODINGMODE::\n"
"    This sets Mercurial's behavior for handling unknown characters\n"
"    while transcoding user inputs. The default is \"strict\", which\n"
"    causes Mercurial to abort if it can't translate a character. Other\n"
"    settings include \"replace\", which replaces unknown characters, and\n"
"    \"ignore\", which drops them. This setting can be overridden with\n"
"    the --encodingmode command-line option.\n"
"\n"
"HGMERGE::\n"
"    An executable to use for resolving merge conflicts. The program\n"
"    will be executed with three arguments: local file, remote file,\n"
"    ancestor file.\n"
"\n"
"    (deprecated, use .hgrc)\n"
"\n"
"HGRCPATH::\n"
"    A list of files or directories to search for hgrc files.  Item\n"
"    separator is \":\" on Unix, \";\" on Windows.  If HGRCPATH is not set,\n"
"    platform default search path is used.  If empty, only .hg/hgrc of\n"
"    current repository is read.\n"
"\n"
"    For each element in path, if a directory, all entries in directory\n"
"    ending with \".rc\" are added to path.  Else, element itself is\n"
"    added to path.\n"
"\n"
"HGUSER::\n"
"    This is the string used for the author of a commit.\n"
"\n"
"    (deprecated, use .hgrc)\n"
"\n"
"EMAIL::\n"
"    If HGUSER is not set, this will be used as the author for a commit.\n"
"\n"
"LOGNAME::\n"
"    If neither HGUSER nor EMAIL is set, LOGNAME will be used (with\n"
"    '@hostname' appended) as the author value for a commit.\n"
"\n"
"VISUAL::\n"
"    This is the name of the editor to use when committing. See EDITOR.\n"
"\n"
"EDITOR::\n"
"    Sometimes Mercurial needs to open a text file in an editor\n"
"    for a user to modify, for example when writing commit messages.\n"
"    The editor it uses is determined by looking at the environment\n"
"    variables HGEDITOR, VISUAL and EDITOR, in that order. The first\n"
"    non-empty one is chosen. If all of them are empty, the editor\n"
"    defaults to 'vi'.\n"
"\n"
"PYTHONPATH::\n"
"    This is used by Python to find imported modules and may need to be set\n"
"    appropriately if Mercurial is not installed system-wide.\n"
"    "
msgstr ""

#: mercurial/help.py:167
msgid "Specifying Single Revisions"
msgstr "Angivning af en enkelt revision"

#: mercurial/help.py:168
msgid ""
"\n"
"    Mercurial accepts several notations for identifying individual\n"
"    revisions.\n"
"\n"
"    A plain integer is treated as a revision number. Negative\n"
"    integers are treated as offsets from the tip, with -1 denoting the\n"
"    tip.\n"
"\n"
"    A 40-digit hexadecimal string is treated as a unique revision\n"
"    identifier.\n"
"\n"
"    A hexadecimal string less than 40 characters long is treated as a\n"
"    unique revision identifier, and referred to as a short-form\n"
"    identifier. A short-form identifier is only valid if it is the\n"
"    prefix of one full-length identifier.\n"
"\n"
"    Any other string is treated as a tag name, which is a symbolic\n"
"    name associated with a revision identifier. Tag names may not\n"
"    contain the \":\" character.\n"
"\n"
"    The reserved name \"tip\" is a special tag that always identifies\n"
"    the most recent revision.\n"
"\n"
"    The reserved name \"null\" indicates the null revision. This is the\n"
"    revision of an empty repository, and the parent of revision 0.\n"
"\n"
"    The reserved name \".\" indicates the working directory parent. If\n"
"    no working directory is checked out, it is equivalent to null.\n"
"    If an uncommitted merge is in progress, \".\" is the revision of\n"
"    the first parent.\n"
"    "
msgstr ""

#: mercurial/help.py:200
msgid "Specifying Multiple Revisions"
msgstr "Angivning af flere revisioner"

#: mercurial/help.py:201
msgid ""
"\n"
"    When Mercurial accepts more than one revision, they may be\n"
"    specified individually, or provided as a continuous range,\n"
"    separated by the \":\" character.\n"
"\n"
"    The syntax of range notation is [BEGIN]:[END], where BEGIN and END\n"
"    are revision identifiers. Both BEGIN and END are optional. If\n"
"    BEGIN is not specified, it defaults to revision number 0. If END\n"
"    is not specified, it defaults to the tip. The range \":\" thus\n"
"    means \"all revisions\".\n"
"\n"
"    If BEGIN is greater than END, revisions are treated in reverse\n"
"    order.\n"
"\n"
"    A range acts as a closed interval. This means that a range of 3:5\n"
"    gives 3, 4 and 5. Similarly, a range of 4:2 gives 4, 3, and 2.\n"
"    "
msgstr ""

#: mercurial/help.py:219
msgid "Diff Formats"
msgstr ""

#: mercurial/help.py:220
msgid ""
"\n"
"    Mercurial's default format for showing changes between two versions\n"
"    of a file is compatible with the unified format of GNU diff, which\n"
"    can be used by GNU patch and many other standard tools.\n"
"\n"
"    While this standard format is often enough, it does not encode the\n"
"    following information:\n"
"\n"
"     - executable status\n"
"     - copy or rename information\n"
"     - changes in binary files\n"
"     - creation or deletion of empty files\n"
"\n"
"    Mercurial also supports the extended diff format from the git VCS\n"
"    which addresses these limitations. The git diff format is not\n"
"    produced by default because there are very few tools which\n"
"    understand this format.\n"
"\n"
"    This means that when generating diffs from a Mercurial repository\n"
"    (e.g. with \"hg export\"), you should be careful about things like\n"
"    file copies and renames or other things mentioned above, because\n"
"    when applying a standard diff to a different repository, this extra\n"
"    information is lost. Mercurial's internal operations (like push and\n"
"    pull) are not affected by this, because they use an internal binary\n"
"    format for communicating changes.\n"
"\n"
"    To make Mercurial produce the git extended diff format, use the\n"
"    --git option available for many commands, or set 'git = True' in the\n"
"    [diff] section of your hgrc. You do not need to set this option when\n"
"    importing diffs in this format or using them in the mq extension.\n"
"    "
msgstr ""

#: mercurial/hg.py:128
msgid "destination directory: %s\n"
msgstr ""

#: mercurial/hg.py:134 mercurial/hg.py:176 mercurial/hg.py:202
msgid "destination '%s' already exists"
msgstr ""

#: mercurial/hg.py:209
msgid ""
"src repository does not support revision lookup and so doesn't support clone "
"by revision"
msgstr ""

#: mercurial/hg.py:219
msgid "clone from remote to remote not supported"
msgstr ""

#: mercurial/hg.py:232
msgid "updating working directory\n"
msgstr ""

#: mercurial/hg.py:248
msgid "updated"
msgstr "opdateret"

#: mercurial/hg.py:249
msgid "merged"
msgstr "sammenføjet"

#: mercurial/hg.py:250
msgid "removed"
msgstr "fjernet"

#: mercurial/hg.py:251
msgid "unresolved"
msgstr "uløst"

#: mercurial/hg.py:252
msgid "%d files %s"
msgstr "%d filer %s"

#: mercurial/hg.py:260 mercurial/hg.py:277
msgid "use 'hg resolve' to retry unresolved file merges\n"
msgstr ""

#: mercurial/hg.py:279
msgid "(branch merge, don't forget to commit)\n"
msgstr ""

#: mercurial/hgweb/hgwebdir_mod.py:211
msgid "error reading %s/.hg/hgrc: %s\n"
msgstr ""

#: mercurial/hgweb/server.py:262
msgid "SSL support is unavailable"
msgstr "understøttelse for SSL er ikke tilstede"

#: mercurial/hgweb/server.py:279
msgid "IPv6 not available on this system"
msgstr "IPv6 er ikke til rådighed på dette system"

#: mercurial/hgweb/server.py:293
msgid "cannot start server at '%s:%d': %s"
msgstr "kan ikke starte server på '%s:%d': %s"

#: mercurial/hook.py:21
msgid "calling hook %s: %s\n"
msgstr ""

#: mercurial/hook.py:26
msgid "%s hook is invalid (\"%s\" not in a module)"
msgstr ""

#: mercurial/hook.py:36
msgid "%s hook is invalid (import of \"%s\" failed)"
msgstr ""

#: mercurial/hook.py:43
msgid "%s hook is invalid (\"%s\" is not defined)"
msgstr ""

#: mercurial/hook.py:47
msgid "%s hook is invalid (\"%s\" is not callable)"
msgstr ""

#: mercurial/hook.py:56
msgid "error: %s hook failed: %s\n"
msgstr ""

#: mercurial/hook.py:59
msgid "error: %s hook raised an exception: %s\n"
msgstr ""

#: mercurial/hook.py:67
msgid "%s hook failed"
msgstr ""

#: mercurial/hook.py:68
msgid "warning: %s hook failed\n"
msgstr ""

#: mercurial/hook.py:72
msgid "running hook %s: %s\n"
msgstr ""

#: mercurial/hook.py:82
msgid "%s hook %s"
msgstr ""

#: mercurial/hook.py:83
msgid "warning: %s hook %s\n"
msgstr ""

#: mercurial/httprepo.py:21
msgid "connection ended unexpectedly"
msgstr ""

#: mercurial/httprepo.py:31
msgid "unsupported URL component: \"%s\""
msgstr ""

#: mercurial/httprepo.py:38
msgid "using %s\n"
msgstr "bruger %s\n"

#: mercurial/httprepo.py:53
msgid "capabilities: %s\n"
msgstr ""

#: mercurial/httprepo.py:60
msgid "operation not supported over http"
msgstr ""

#: mercurial/httprepo.py:65 mercurial/sshrepo.py:116
msgid "sending %s command\n"
msgstr "sender %s kommando\n"

#: mercurial/httprepo.py:72
msgid "sending %s bytes\n"
msgstr "sender %s bytes\n"

#: mercurial/httprepo.py:76
msgid "authorization failed"
msgstr "autorisation fejlede"

#: mercurial/httprepo.py:79
msgid "http error while sending %s command\n"
msgstr ""

#: mercurial/httprepo.py:84
msgid "http error, possibly caused by proxy setting"
msgstr ""

#: mercurial/httprepo.py:90
msgid "real URL is %s\n"
msgstr "den rigtige URL er %s\n"

#: mercurial/httprepo.py:101
msgid "Requested URL: '%s'\n"
msgstr ""

#: mercurial/httprepo.py:102 mercurial/statichttprepo.py:81
msgid "'%s' does not appear to be an hg repository"
msgstr ""

#: mercurial/httprepo.py:110
msgid "'%s' sent a broken Content-Type header (%s)"
msgstr ""

#: mercurial/httprepo.py:113
msgid "'%s' uses newer protocol %s"
msgstr "'%s' bruger nyere protokol %s"

#: mercurial/httprepo.py:127 mercurial/sshrepo.py:154
msgid "look up remote revision"
msgstr ""

#: mercurial/httprepo.py:139 mercurial/httprepo.py:148
#: mercurial/httprepo.py:159 mercurial/sshrepo.py:135 mercurial/sshrepo.py:167
#: mercurial/sshrepo.py:176 mercurial/sshrepo.py:185 mercurial/sshrepo.py:220
#: mercurial/sshrepo.py:242
msgid "unexpected response:"
msgstr ""

#: mercurial/httprepo.py:168 mercurial/sshrepo.py:192
msgid "look up remote changes"
msgstr ""

#: mercurial/httprepo.py:205
msgid "push failed (unexpected response):"
msgstr ""

#: mercurial/httprepo.py:210 mercurial/sshrepo.py:214
msgid "push failed: %s"
msgstr "skub fejlede: %s"

#: mercurial/httprepo.py:222
msgid "Python support for SSL and HTTPS is not installed"
msgstr ""

#: mercurial/httprepo.py:228
msgid "cannot create new http repository"
msgstr "kan ikke lave nyt http arkiv"

#: mercurial/ignore.py:60
msgid "%s: ignoring invalid syntax '%s'\n"
msgstr "%s: ignorerer ugyldig syntaks '%s'\n"

#: mercurial/ignore.py:73
msgid "skipping unreadable ignore file '%s': %s\n"
msgstr ""

#: mercurial/localrepo.py:50
msgid "repository %s not found"
msgstr "arkivet %s blev ikke fundet"

#: mercurial/localrepo.py:52
msgid "repository %s already exists"
msgstr "arkivet %s eksisterer allerede"

#: mercurial/localrepo.py:60 mercurial/statichttprepo.py:88
msgid "requirement '%s' not supported"
msgstr ""

#: mercurial/localrepo.py:137
msgid "%r cannot be used in a tag name"
msgstr ""

#: mercurial/localrepo.py:223
msgid "working copy of .hgtags is changed (please commit .hgtags manually)"
msgstr ""

#: mercurial/localrepo.py:241
msgid "%s, line %s: %s\n"
msgstr "%s, linie %s: %s\n"

#: mercurial/localrepo.py:249
msgid "cannot parse entry"
msgstr ""

#: mercurial/localrepo.py:256
msgid "node '%s' is not well formed"
msgstr ""

#: mercurial/localrepo.py:259
msgid "tag '%s' refers to unknown node"
msgstr ""

#: mercurial/localrepo.py:463
msgid "unknown revision '%s'"
msgstr ""

#: mercurial/localrepo.py:531
msgid "filtering %s through %s\n"
msgstr ""

#: mercurial/localrepo.py:569
msgid "journal already exists - run hg recover"
msgstr ""

#: mercurial/localrepo.py:593
msgid "rolling back interrupted transaction\n"
msgstr ""

#: mercurial/localrepo.py:598
msgid "no interrupted transaction available\n"
msgstr ""

#: mercurial/localrepo.py:609
msgid "rolling back last transaction\n"
msgstr ""

#: mercurial/localrepo.py:616
msgid "Named branch could not be reset, current branch still is: %s\n"
msgstr ""

#: mercurial/localrepo.py:622
msgid "no rollback information available\n"
msgstr ""

#: mercurial/localrepo.py:643
msgid "waiting for lock on %s held by %r\n"
msgstr ""

#: mercurial/localrepo.py:657
msgid "repository %s"
msgstr ""

#: mercurial/localrepo.py:666
msgid "working directory of %s"
msgstr ""

#: mercurial/localrepo.py:716
msgid " %s: searching for copy revision for %s\n"
msgstr ""

#: mercurial/localrepo.py:723
msgid " %s: copy %s:%s\n"
msgstr ""

#: mercurial/localrepo.py:765
msgid "cannot partially commit a merge (do not specify files or patterns)"
msgstr ""

#: mercurial/localrepo.py:777 mercurial/localrepo.py:1125
msgid "%s not tracked!\n"
msgstr ""

#: mercurial/localrepo.py:789
msgid "unresolved merge conflicts (see hg resolve)"
msgstr ""

#: mercurial/localrepo.py:836
msgid "nothing changed\n"
msgstr ""

#: mercurial/localrepo.py:871
msgid "trouble committing %s!\n"
msgstr ""

#: mercurial/localrepo.py:902
msgid "HG: Enter commit message.  Lines beginning with 'HG:' are removed."
msgstr ""

#: mercurial/localrepo.py:926
msgid "empty commit message"
msgstr ""

#: mercurial/localrepo.py:1075 mercurial/localrepo.py:1153
msgid "%s does not exist!\n"
msgstr ""

#: mercurial/localrepo.py:1079
msgid ""
"%s: files over 10MB may cause memory and performance problems\n"
"(use 'hg revert %s' to unadd the file)\n"
msgstr ""

#: mercurial/localrepo.py:1084
msgid "%s not added: only files and symlinks supported currently\n"
msgstr ""

#: mercurial/localrepo.py:1088
msgid "%s already tracked!\n"
msgstr ""

#: mercurial/localrepo.py:1102
msgid "%s not added!\n"
msgstr ""

#: mercurial/localrepo.py:1121
msgid "%s still exists!\n"
msgstr ""

#: mercurial/localrepo.py:1139
msgid "%s not removed!\n"
msgstr ""

#: mercurial/localrepo.py:1155
msgid "copy failed: %s is not a file or a symbolic link\n"
msgstr ""

#: mercurial/localrepo.py:1303
msgid "searching for changes\n"
msgstr "leder efter ændringer\n"

#: mercurial/localrepo.py:1331
msgid "examining %s:%s\n"
msgstr "undersøger %s:%s\n"

#: mercurial/localrepo.py:1336
msgid "branch already found\n"
msgstr "gren er allerede fundet\n"

#: mercurial/localrepo.py:1339
msgid "found incomplete branch %s:%s\n"
msgstr "fandt ukomplet gren %s:%s\n"

#: mercurial/localrepo.py:1346
msgid "found new changeset %s\n"
msgstr "fandt ny ændring %s\n"

#: mercurial/localrepo.py:1361
msgid "request %d: %s\n"
msgstr ""

#: mercurial/localrepo.py:1365
msgid "received %s:%s\n"
msgstr "modtog %s:%s\n"

#: mercurial/localrepo.py:1378
msgid "narrowing %d:%d %s\n"
msgstr ""

#: mercurial/localrepo.py:1381
msgid "found new branch changeset %s\n"
msgstr ""

#: mercurial/localrepo.py:1386
msgid "narrowed branch search to %s:%s\n"
msgstr ""

#: mercurial/localrepo.py:1396
msgid "already have changeset "
msgstr ""

#: mercurial/localrepo.py:1400
msgid "warning: repository is unrelated\n"
msgstr "advarsel: arkivet er urelateret\n"

#: mercurial/localrepo.py:1402
msgid "repository is unrelated"
msgstr "arkivet er urelateret"

#: mercurial/localrepo.py:1404
msgid "found new changesets starting at "
msgstr ""

#: mercurial/localrepo.py:1407
msgid "%d total queries\n"
msgstr ""

#: mercurial/localrepo.py:1424
msgid "common changesets up to "
msgstr ""

#: mercurial/localrepo.py:1465
msgid "requesting all changes\n"
msgstr ""

#: mercurial/localrepo.py:1478
msgid ""
"Partial pull cannot be done because other repository doesn't support "
"changegroupsubset."
msgstr ""

#: mercurial/localrepo.py:1539
msgid "abort: push creates new remote heads!\n"
msgstr ""

#: mercurial/localrepo.py:1540
msgid "(did you forget to merge? use push -f to force)\n"
msgstr ""

#: mercurial/localrepo.py:1544
msgid "note: unsynced remote changes!\n"
msgstr ""

#: mercurial/localrepo.py:1580
msgid "%d changesets found\n"
msgstr ""

#: mercurial/localrepo.py:1582
msgid "list of changesets:\n"
msgstr ""

#: mercurial/localrepo.py:1861 mercurial/localrepo.py:1951
msgid "empty or missing revlog for %s"
msgstr ""

#: mercurial/localrepo.py:1978
msgid "add changeset %s\n"
msgstr ""

#: mercurial/localrepo.py:2001
msgid "adding changesets\n"
msgstr "tilføjer ændringer\n"

#: mercurial/localrepo.py:2005
msgid "received changelog group is empty"
msgstr ""

#: mercurial/localrepo.py:2010
msgid "adding manifests\n"
msgstr "tilføjer manifester\n"

#: mercurial/localrepo.py:2019
msgid "adding file changes\n"
msgstr "tilføjer filændringer\n"

#: mercurial/localrepo.py:2024
msgid "adding %s revisions\n"
msgstr "tilføjer %s ændringer\n"

#: mercurial/localrepo.py:2029
msgid "received file revlog group is empty"
msgstr ""

#: mercurial/localrepo.py:2039
msgid " (%+d heads)"
msgstr " (%+d hoveder)"

#: mercurial/localrepo.py:2041
msgid "added %d changesets with %d changes to %d files%s\n"
msgstr "tilføjede %d ændringer med %d ændringer i %d filer%s\n"

#: mercurial/localrepo.py:2056
msgid "updating the branch cache\n"
msgstr ""

#: mercurial/localrepo.py:2079 mercurial/localrepo.py:2092
#: mercurial/localrepo.py:2104
msgid "Unexpected response from remote server:"
msgstr ""

#: mercurial/localrepo.py:2081
msgid "operation forbidden by server"
msgstr ""

#: mercurial/localrepo.py:2083
msgid "locking the remote repository failed"
msgstr ""

#: mercurial/localrepo.py:2085
msgid "the server sent an unknown error code"
msgstr ""

#: mercurial/localrepo.py:2086
msgid "streaming all changes\n"
msgstr ""

#: mercurial/localrepo.py:2093
msgid "%d files to transfer, %s of data\n"
msgstr ""

#: mercurial/localrepo.py:2105
msgid "adding %s (%s)\n"
msgstr "tilføjer %s (%s)\n"

#: mercurial/localrepo.py:2113
msgid "transferred %s in %.1f seconds (%s/sec)\n"
msgstr ""

#: mercurial/mail.py:19
msgid "no [smtp]host in hgrc - cannot send mail"
msgstr ""

#: mercurial/mail.py:21
msgid "sending mail: smtp host %s, port %s\n"
msgstr ""

#: mercurial/mail.py:26
msgid "can't use TLS: Python SSL support not installed"
msgstr ""

#: mercurial/mail.py:28
msgid "(using tls)\n"
msgstr ""

#: mercurial/mail.py:37
msgid "(authenticating to mail server as %s)\n"
msgstr ""

#: mercurial/mail.py:57
msgid "sending mail: %s\n"
msgstr ""

#: mercurial/mail.py:82
msgid "smtp specified as email transport, but no smtp host configured"
msgstr ""

#: mercurial/mail.py:86
msgid "%r specified as email transport, but not in PATH"
msgstr ""

#: mercurial/mail.py:131
msgid "ignoring invalid sendcharset: %s\n"
msgstr ""

#: mercurial/mail.py:155
msgid "invalid email address: %s"
msgstr ""

#: mercurial/mail.py:161
msgid "invalid local address: %s"
msgstr ""

#: mercurial/manifest.py:128
msgid "'\\n' and '\\r' disallowed in filenames"
msgstr ""

#: mercurial/manifest.py:172
msgid "failed to remove %s from manifest"
msgstr ""

#: mercurial/mdiff.py:54
msgid "diff context lines count must be an integer, not %r"
msgstr ""

#: mercurial/merge.py:77
msgid ""
"untracked file in working directory differs from file in requested revision: "
"'%s'"
msgstr ""

#: mercurial/merge.py:86
msgid "case-folding collision between %s and %s"
msgstr ""

#: mercurial/merge.py:126
msgid "resolving manifests\n"
msgstr ""

#: mercurial/merge.py:127
msgid " overwrite %s partial %s\n"
msgstr ""

#: mercurial/merge.py:128
msgid " ancestor %s local %s remote %s\n"
msgstr ""

#: mercurial/merge.py:148
msgid ""
" conflicting flags for %s\n"
"(n)one, e(x)ec or sym(l)ink?"
msgstr ""

#: mercurial/merge.py:219
msgid ""
" local changed %s which remote deleted\n"
"use (c)hanged version or (d)elete?"
msgstr ""

#: mercurial/merge.py:221 mercurial/merge.py:255
msgid "[cd]"
msgstr ""

#: mercurial/merge.py:221 mercurial/merge.py:255
msgid "c"
msgstr ""

#: mercurial/merge.py:253
msgid ""
"remote changed %s which local deleted\n"
"use (c)hanged version or leave (d)eleted?"
msgstr ""

#: mercurial/merge.py:287
msgid "preserving %s for resolve of %s\n"
msgstr ""

#: mercurial/merge.py:314
msgid "update failed to remove %s: %s!\n"
msgstr ""

#: mercurial/merge.py:333
msgid "getting %s\n"
msgstr ""

#: mercurial/merge.py:340
msgid "moving %s to %s\n"
msgstr ""

#: mercurial/merge.py:345
msgid "getting %s to %s\n"
msgstr ""

#: mercurial/merge.py:351
msgid "warning: detected divergent renames of %s to:\n"
msgstr ""

#: mercurial/merge.py:438
msgid "branch %s not found"
msgstr ""

#: mercurial/merge.py:451
msgid "can't merge with ancestor"
msgstr ""

#: mercurial/merge.py:456
msgid "nothing to merge (use 'hg update' or check 'hg heads')"
msgstr ""

#: mercurial/merge.py:465
msgid "crosses branches (use 'hg merge' or 'hg update -C' to discard changes)"
msgstr ""

#: mercurial/merge.py:467
msgid "crosses branches (use 'hg merge' or 'hg update -C')"
msgstr ""

#: mercurial/merge.py:470
msgid "crosses named branches (use 'hg update -C' to discard changes)"
msgstr ""

#: mercurial/patch.py:28
msgid "cannot create %s: destination already exists"
msgstr ""

#: mercurial/patch.py:37
msgid "cannot create %s: unable to create destination directory"
msgstr ""

#: mercurial/patch.py:96
msgid "found patch at byte %d\n"
msgstr ""

#: mercurial/patch.py:101
msgid "patch generated by hg export\n"
msgstr ""

#: mercurial/patch.py:250
msgid "unable to find '%s' for patching\n"
msgstr ""

#: mercurial/patch.py:282
msgid "patching file %s\n"
msgstr ""

#: mercurial/patch.py:325
msgid "%d out of %d hunks FAILED -- saving rejects to file %s\n"
msgstr ""

#: mercurial/patch.py:352
msgid "bad hunk #%d %s (%d %d %d %d)"
msgstr ""

#: mercurial/patch.py:365
msgid "file %s already exists\n"
msgstr ""

#: mercurial/patch.py:427
msgid "Hunk #%d succeeded at %d %s(offset %d %s).\n"
msgstr ""

#: mercurial/patch.py:431
msgid "Hunk #%d FAILED at %d\n"
msgstr ""

#: mercurial/patch.py:452 mercurial/patch.py:478 mercurial/patch.py:510
msgid "bad hunk #%d"
msgstr ""

#: mercurial/patch.py:497 mercurial/patch.py:539
msgid "bad hunk #%d old text line %d"
msgstr ""

#: mercurial/patch.py:691
msgid "could not extract binary patch"
msgstr ""

#: mercurial/patch.py:707
msgid "binary patch is %d bytes, not %d"
msgstr ""

#: mercurial/patch.py:742
msgid "unable to strip away %d dirs from %s"
msgstr ""

#: mercurial/patch.py:781
msgid "undefined source and destination files"
msgstr ""

#: mercurial/patch.py:951
msgid "malformed patch %s %s"
msgstr ""

#: mercurial/patch.py:1008
msgid "unsupported parser state: %s"
msgstr ""

#: mercurial/patch.py:1104
msgid "patch command failed: %s"
msgstr ""

#: mercurial/patch.py:1141
msgid "no valid hunks found; trying with %r instead\n"
msgstr ""

#: mercurial/repair.py:20
msgid "saving bundle to %s\n"
msgstr ""

#: mercurial/repair.py:128
msgid "adding branch\n"
msgstr "tilføjer gren\n"

#: mercurial/repo.py:34
msgid "cannot %s; remote repository does not support the %r capability"
msgstr ""

#: mercurial/revlog.py:40
msgid "%s@%s: %s"
msgstr ""

#: mercurial/revlog.py:108
msgid "unknown compression type %r"
msgstr ""

#: mercurial/revlog.py:450
msgid "index %s unknown flags %#04x for format v0"
msgstr ""

#: mercurial/revlog.py:453
msgid "index %s unknown flags %#04x for revlogng"
msgstr ""

#: mercurial/revlog.py:456
msgid "index %s unknown format %d"
msgstr ""

#: mercurial/revlog.py:500
msgid "no node"
msgstr ""

#: mercurial/revlog.py:884
msgid "ambiguous identifier"
msgstr ""

#: mercurial/revlog.py:901
msgid "no match found"
msgstr ""

#: mercurial/revlog.py:967
msgid "incompatible revision flag %x"
msgstr ""

#: mercurial/revlog.py:1006
msgid "%s not found in the transaction"
msgstr ""

#: mercurial/revlog.py:1220
msgid "unknown base"
msgstr ""

#: mercurial/revlog.py:1253
msgid "consistency error adding group"
msgstr ""

#: mercurial/simplemerge.py:414
msgid "%s looks like a binary file."
msgstr ""

#: mercurial/simplemerge.py:429
msgid "can only specify two labels."
msgstr ""

#: mercurial/simplemerge.py:454
msgid "warning: conflicts during merge.\n"
msgstr ""

#: mercurial/sshrepo.py:29
msgid "couldn't parse location %s"
msgstr ""

#: mercurial/sshrepo.py:48
msgid "could not create remote repo"
msgstr ""

#: mercurial/sshrepo.py:77 mercurial/sshrepo.py:96 mercurial/sshrepo.py:108
msgid "remote: "
msgstr ""

#: mercurial/sshrepo.py:81
msgid "no suitable response from remote hg"
msgstr ""

#: mercurial/sshrepo.py:201 mercurial/sshrepo.py:225
msgid "push refused: %s"
msgstr ""

#: mercurial/sshserver.py:164 mercurial/sshserver.py:187
msgid "unsynced changes"
msgstr ""

#: mercurial/statichttprepo.py:112
msgid "cannot lock static-http repository"
msgstr ""

#: mercurial/statichttprepo.py:116
msgid "cannot create new static-http repository"
msgstr ""

#: mercurial/store.py:227
msgid "invalid entry in fncache, line %s"
msgstr ""

#: mercurial/streamclone.py:46
msgid "scanning\n"
msgstr ""

#: mercurial/streamclone.py:58
msgid "%d files, %d bytes to transfer\n"
msgstr "%d filer, skal overføre %d bytes\n"

#: mercurial/streamclone.py:62
msgid "sending %s (%d bytes)\n"
msgstr ""

#: mercurial/templater.py:19
msgid "unmatched quotes"
msgstr ""

#: mercurial/templater.py:64
msgid "style not found: %s"
msgstr ""

#: mercurial/templater.py:83
msgid "%s:%s: parse error"
msgstr ""

#: mercurial/templater.py:94
msgid "template file %s: %s"
msgstr ""

#: mercurial/templater.py:121
msgid "Error expanding '%s%%%s'"
msgstr ""

#: mercurial/transaction.py:83
msgid "transaction abort!\n"
msgstr ""

#: mercurial/transaction.py:89
msgid "failed to truncate %s\n"
msgstr ""

#: mercurial/transaction.py:93
msgid "rollback completed\n"
msgstr ""

#: mercurial/ui.py:124
msgid "Not trusting file %s from untrusted user %s, group %s\n"
msgstr ""

#: mercurial/ui.py:151
msgid ""
"Failed to parse %s\n"
"%s"
msgstr ""

#: mercurial/ui.py:154 mercurial/ui.py:262 mercurial/ui.py:308
msgid "Ignored: %s\n"
msgstr "Ignoreret: %s\n"

#: mercurial/ui.py:181
msgid "unable to open %s: %s"
msgstr "kunne ikke åbne %s: %s"

#: mercurial/ui.py:188
msgid ""
"failed to parse %s\n"
"%s"
msgstr ""

#: mercurial/ui.py:258
msgid ""
"Error in configuration section [%s] parameter '%s':\n"
"%s"
msgstr ""

#: mercurial/ui.py:272 mercurial/ui.py:317
msgid "Ignoring untrusted configuration option %s.%s = %s\n"
msgstr ""

#: mercurial/ui.py:304
msgid ""
"Error in configuration section [%s]:\n"
"%s"
msgstr ""

#: mercurial/ui.py:343
msgid "enter a commit username:"
msgstr "angiv et commit brugernavn:"

#: mercurial/ui.py:347
msgid "No username found, using '%s' instead\n"
msgstr "Fandt intet brugernavn, bruger '%s' istedet\n"

#: mercurial/ui.py:351
msgid "Please specify a username."
msgstr "Angiv venligst et brugernavn."

#: mercurial/ui.py:353
msgid "username %s contains a newline\n"
msgstr "brugernavn %s indeholder et linieskift\n"

#: mercurial/ui.py:436
msgid "unrecognized response\n"
msgstr ""

#: mercurial/ui.py:438
msgid "response expected"
msgstr ""

#: mercurial/ui.py:442
msgid "password: "
msgstr "kodeord: "

#: mercurial/ui.py:463
msgid "edit failed"
msgstr "redigering fejlede"

#: mercurial/url.py:111
msgid "http authorization required"
msgstr ""

#: mercurial/url.py:113
msgid "http authorization required\n"
msgstr ""

#: mercurial/url.py:114
msgid "realm: %s\n"
msgstr ""

#: mercurial/url.py:116
msgid "user: %s\n"
msgstr ""

#: mercurial/url.py:118
msgid "user:"
msgstr ""

#: mercurial/url.py:163
msgid "proxying through http://%s:%s\n"
msgstr ""

#: mercurial/url.py:289
msgid "http auth: user %s, password %s\n"
msgstr ""

#: mercurial/util.py:117 mercurial/util.py:139
msgid "%s, please check your locale settings"
msgstr "%s, tjek venligst dine sprogindstillinger"

#: mercurial/util.py:257
msgid "command '%s' failed: %s"
msgstr "kommandoen '%s' fejlede: %s"

#: mercurial/util.py:819
msgid "path contains illegal component: %s"
msgstr "stien indeholder ugyldig komponent: %s"

#: mercurial/util.py:825 mercurial/util.py:841
msgid "path %r is inside repo %r"
msgstr "stien %r er inde i repo %r"

#: mercurial/util.py:837
msgid "path %r traverses symbolic link %r"
msgstr "stien %r følger symbolsk link %r"

#: mercurial/util.py:874
msgid "Hardlinks not supported"
msgstr "Hardlinks er ikke supporteret"

#: mercurial/util.py:948
msgid "user name not available - set USERNAME environment variable"
msgstr "der er ikke noget brugernavn - sæt USERNAME miljøvariabel"

#: mercurial/util.py:1263 mercurial/util.py:1440
msgid "exited with status %d"
msgstr "afsluttede med status %d"

#: mercurial/util.py:1443
msgid "killed by signal %d"
msgstr "dræbt af signal %d"

#: mercurial/util.py:1446
msgid "stopped by signal %d"
msgstr "stoppet af signal %d"

#: mercurial/util.py:1447
msgid "invalid exit code"
msgstr "ugyldig returkode"

#: mercurial/util.py:1640
msgid "could not symlink to %r: %s"
msgstr "kunne ikke lave et symbolsk link til %r: %s"

#: mercurial/util.py:1796
msgid "invalid date: %r "
msgstr "ugyldig dato: %r "

#: mercurial/util.py:1802
msgid "date exceeds 32 bits: %d"
msgstr "dato overskrider 32 bit: %d"

#: mercurial/util.py:1804
msgid "impossible time zone offset: %d"
msgstr "umuligt tidszone: %d"

#: mercurial/util.py:1845
msgid "invalid day spec: %s"
msgstr ""

#: mercurial/util.py:1966
msgid "%.0f GB"
msgstr "%.0f GB"

#: mercurial/util.py:1967
msgid "%.1f GB"
msgstr "%.1f GB"

#: mercurial/util.py:1968
msgid "%.2f GB"
msgstr "%.2f GB"

#: mercurial/util.py:1969
msgid "%.0f MB"
msgstr "%.0f MB"

#: mercurial/util.py:1970
msgid "%.1f MB"
msgstr "%.1f MB"

#: mercurial/util.py:1971
msgid "%.2f MB"
msgstr "%.2f MB"

#: mercurial/util.py:1972
msgid "%.0f KB"
msgstr "%.0f KB"

#: mercurial/util.py:1973
msgid "%.1f KB"
msgstr "%.1f KB"

#: mercurial/util.py:1974
msgid "%.2f KB"
msgstr "%.2f KB"

#: mercurial/util.py:1975
msgid "%.0f bytes"
msgstr "%.0f bytes"

#: mercurial/verify.py:32
msgid "cannot verify bundle or remote repos"
msgstr ""

#: mercurial/verify.py:47
msgid "interrupted"
msgstr "afbrudt"

#: mercurial/verify.py:57
msgid "empty or missing %s"
msgstr "tom eller mangler"

#: mercurial/verify.py:62
msgid "data length off by %d bytes"
msgstr ""

#: mercurial/verify.py:64
msgid "index contains %d extra bytes"
msgstr "indekset indeholder %d ekstra bytes"

#: mercurial/verify.py:68
msgid "warning: `%s' uses revlog format 1"
msgstr "advarsel: '%s' bruger revlog format 1"

#: mercurial/verify.py:70
msgid "warning: `%s' uses revlog format 0"
msgstr "advarsel: '%s' bruger revlog format 0"

#: mercurial/verify.py:78
msgid "rev %d point to %s changeset %d"
msgstr ""

#: mercurial/verify.py:80
msgid " (expected %s)"
msgstr " (forventede %s)"

#: mercurial/verify.py:86
msgid "unknown parent 1 %s of %s"
msgstr "ukendt forældre 1 %s til %s"

#: mercurial/verify.py:89
msgid "unknown parent 2 %s of %s"
msgstr "ukendt forældre 2 %s til %s"

#: mercurial/verify.py:92
msgid "checking parents of %s"
msgstr "tjekkre forældrene til %s"

#: mercurial/verify.py:95
msgid "duplicate revision %d (%d)"
msgstr "duplikeret revision %d (%d)"

#: mercurial/verify.py:101
msgid "repository uses revlog format %d\n"
msgstr "arkivet bruger revlog format %d\n"

#: mercurial/verify.py:107
msgid "checking changesets\n"
msgstr "tjekker ændringer\n"

#: mercurial/verify.py:120
msgid "unpacking changeset %s"
msgstr "udpakker ændring %s"

#: mercurial/verify.py:122
msgid "checking manifests\n"
msgstr ""

#: mercurial/verify.py:134
msgid "file without name in manifest"
msgstr ""

#: mercurial/verify.py:140
msgid "reading manifest delta %s"
msgstr ""

#: mercurial/verify.py:142
msgid "crosschecking files in changesets and manifests\n"
msgstr ""

#: mercurial/verify.py:146
msgid "changeset refers to unknown manifest %s"
msgstr ""

#: mercurial/verify.py:152
msgid "in changeset but not in manifest"
msgstr ""

#: mercurial/verify.py:162
msgid "in manifest but not in changeset"
msgstr ""

#: mercurial/verify.py:164
msgid "checking files\n"
msgstr "tjekker filer\n"

#: mercurial/verify.py:169
msgid "cannot decode filename '%s'"
msgstr "kan ikke dekode filnavn '%s'"

#: mercurial/verify.py:181
msgid "missing revlog!"
msgstr "manglende revlog!"

#: mercurial/verify.py:191
msgid "%s not in manifests"
msgstr ""

#: mercurial/verify.py:201
msgid "unpacked size is %s, %s expected"
msgstr "udpakket størrelse er %s, forventede %s"

#: mercurial/verify.py:204
msgid "unpacking %s"
msgstr "udpakker %s"

#: mercurial/verify.py:211
msgid "empty or missing copy source revlog %s:%s"
msgstr ""

#: mercurial/verify.py:214
msgid "warning: %s@%s: copy source revision is nullid %s:%s"
msgstr ""

#: mercurial/verify.py:219
msgid "checking rename of %s"
msgstr "tjekker omdøbning af %s"

#: mercurial/verify.py:225
msgid "%s in manifests not found"
msgstr ""

#: mercurial/verify.py:228
msgid "warning: orphan revlog '%s'"
msgstr "advarsel: forældreløs revlog '%s'"

#: mercurial/verify.py:230
msgid "%d files, %d changesets, %d total revisions\n"
msgstr "%d filer, %d ændringer, ialt %d revisioner\n"

#: mercurial/verify.py:233
msgid "%d warnings encountered!\n"
msgstr "mødte %d advarsler!\n"

#: mercurial/verify.py:235
msgid "%d integrity errors encountered!\n"
msgstr "fandt %d integritetsfejl!\n"

#: mercurial/verify.py:237
msgid "(first damaged changeset appears to be %d)\n"
msgstr "(første beskadigede ændring er tilsyneladende %d)\n"
